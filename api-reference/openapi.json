{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Impilo API",
    "version" : "3.0"
  },
  "servers" : [ {
    "url" : "https://app.impiloplatform.com",
    "description" : "Production server"
  }, {
    "url" : "https://staging.impiloplatform.com",
    "description" : "Staging server"
  } ],
  "security" : [ {
    "ApiKeyAuth" : [ ]
  } ],
  "tags" : [ {
    "name" : "Alert Configuration"
  }, {
    "name" : "Clinical Notes"
  }, {
    "name" : "Devices"
  }, {
    "name" : "Inventory"
  }, {
    "name" : "Items"
  }, {
    "name" : "Kits"
  }, {
    "name" : "Manufacturers"
  }, {
    "name" : "Orders"
  }, {
    "name" : "Patients"
  }, {
    "name" : "Procurements"
  }, {
    "name" : "Returns"
  }, {
    "name" : "Sites"
  }, {
    "name" : "Support Tickets"
  }, {
    "name" : "Transfers"
  }, {
    "name" : "Webhooks"
  }, {
    "name" : "Readings - Blood Glucose"
  }, {
    "name" : "Readings - Blood Oxygen"
  }, {
    "name" : "Readings - Blood Pressure"
  }, {
    "name" : "Readings - Heart Rate"
  }, {
    "name" : "Readings - Heart Rate Variability"
  }, {
    "name" : "Readings - Peak Flow"
  }, {
    "name" : "Readings - Sleep Mat Activity"
  }, {
    "name" : "Readings - Sleep Mat Duration"
  }, {
    "name" : "Readings - Temperature"
  }, {
    "name" : "Readings - Weight"
  }, {
    "name" : "Tests"
  } ],
  "paths" : {
    "/api/v3/alerts/configuration/global" : {
      "put" : {
        "tags" : [ "Alert Configuration" ],
        "summary" : "Set Global Alert Config",
        "description" : "This endpoint updates your global Alert Configuration for the type provided in the ***alertConfigurationType*** attribute of the Alert Configuration object.\n***\nFor more information see the [AlertConfiguration Model](/resources/models#schema_AlertConfiguration).",
        "operationId" : "setGlobalAlertConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AlertConfiguration"
              },
              "examples" : {
                "AlertConfigurationExample" : {
                  "value" : {
                    "alertConfigurationType" : "bloodPressure",
                    "enabled" : true,
                    "notifyHealthCoach" : true,
                    "notifyPatient" : true,
                    "config" : {
                      "rules" : [ {
                        "severity" : "MEDIUM",
                        "field" : "systolic",
                        "type" : "threshold",
                        "value" : 140,
                        "operator" : "gt"
                      }, {
                        "severity" : "MEDIUM",
                        "field" : "systolic",
                        "type" : "relative_change",
                        "value" : 20.0,
                        "direction" : "increase"
                      } ]
                    },
                    "notificationEmails" : [ "notificationEmail1@example.com", "notificationEmail2@example.com" ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        },
        "x-request-example" : "AlertConfigurationExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_AlertConfiguration"
        }
      }
    },
    "/api/v3/alerts/configuration/global/{type}" : {
      "get" : {
        "tags" : [ "Alert Configuration" ],
        "summary" : "Get Global Alert Config",
        "description" : "This endpoint fetches your global Alert Configuration for the type provided in url.\n",
        "operationId" : "getGlobalAlertConfig",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertConfiguration"
                },
                "examples" : {
                  "AlertConfigurationExample" : {
                    "value" : {
                      "alertConfigurationType" : "bloodPressure",
                      "enabled" : true,
                      "notifyHealthCoach" : true,
                      "notifyPatient" : true,
                      "config" : {
                        "rules" : [ {
                          "severity" : "MEDIUM",
                          "field" : "systolic",
                          "type" : "threshold",
                          "value" : 140,
                          "operator" : "gt"
                        }, {
                          "severity" : "MEDIUM",
                          "field" : "systolic",
                          "type" : "relative_change",
                          "value" : 20.0,
                          "direction" : "increase"
                        } ]
                      },
                      "notificationEmails" : [ "notificationEmail1@example.com", "notificationEmail2@example.com" ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "AlertConfigurationExample"
      }
    },
    "/api/v3/alerts/configuration/patient/{patientId}" : {
      "put" : {
        "tags" : [ "Alert Configuration" ],
        "summary" : "Set Patient Alert Config",
        "description" : "This endpoint updates your patient specific Alert Configurations for the type provided in the ***alertConfigurationType*** attribute of the Alert Configuration object and the patientId specified in the URL.\n***\nFor more information see the [AlertConfiguration Model](/resources/models#schema_AlertConfiguration).",
        "operationId" : "setPatientAlertConfig",
        "parameters" : [ {
          "name" : "patientId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AlertConfiguration"
              },
              "examples" : {
                "AlertConfigurationExample" : {
                  "value" : {
                    "alertConfigurationType" : "bloodPressure",
                    "enabled" : true,
                    "notifyHealthCoach" : true,
                    "notifyPatient" : true,
                    "config" : {
                      "rules" : [ {
                        "severity" : "MEDIUM",
                        "field" : "systolic",
                        "type" : "threshold",
                        "value" : 140,
                        "operator" : "gt"
                      }, {
                        "severity" : "MEDIUM",
                        "field" : "systolic",
                        "type" : "relative_change",
                        "value" : 20.0,
                        "direction" : "increase"
                      } ]
                    },
                    "notificationEmails" : [ "notificationEmail1@example.com", "notificationEmail2@example.com" ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        },
        "x-request-example" : "AlertConfigurationExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_AlertConfiguration"
        }
      }
    },
    "/api/v3/alerts/configuration/patient/{patientId}/{type}" : {
      "get" : {
        "tags" : [ "Alert Configuration" ],
        "summary" : "Get Patient Alert Config",
        "description" : "This endpoint fetches your patient specific Alert Configuration for the patientId and type provided in url.\n",
        "operationId" : "getPatientAlertConfig",
        "parameters" : [ {
          "name" : "patientId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertConfiguration"
                },
                "examples" : {
                  "AlertConfigurationExample" : {
                    "value" : {
                      "alertConfigurationType" : "bloodPressure",
                      "enabled" : true,
                      "notifyHealthCoach" : true,
                      "notifyPatient" : true,
                      "config" : {
                        "rules" : [ {
                          "severity" : "MEDIUM",
                          "field" : "systolic",
                          "type" : "threshold",
                          "value" : 140,
                          "operator" : "gt"
                        }, {
                          "severity" : "MEDIUM",
                          "field" : "systolic",
                          "type" : "relative_change",
                          "value" : 20.0,
                          "direction" : "increase"
                        } ]
                      },
                      "notificationEmails" : [ "notificationEmail1@example.com", "notificationEmail2@example.com" ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "AlertConfigurationExample"
      }
    },
    "/api/v3/alerts/configuration/site/{siteId}" : {
      "put" : {
        "tags" : [ "Alert Configuration" ],
        "summary" : "Set Site Alert Config",
        "description" : "This endpoint updates your site specific Alert Configurations for the type provided in the ***alertConfigurationType*** attribute of the Alert Configuration object and the siteId specified in the URL.\n***\nFor more information see the [AlertConfiguration Model](/resources/models#schema_AlertConfiguration).",
        "operationId" : "setSiteAlertConfig",
        "parameters" : [ {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AlertConfiguration"
              },
              "examples" : {
                "AlertConfigurationExample" : {
                  "value" : {
                    "alertConfigurationType" : "bloodPressure",
                    "enabled" : true,
                    "notifyHealthCoach" : true,
                    "notifyPatient" : true,
                    "config" : {
                      "rules" : [ {
                        "severity" : "MEDIUM",
                        "field" : "systolic",
                        "type" : "threshold",
                        "value" : 140,
                        "operator" : "gt"
                      }, {
                        "severity" : "MEDIUM",
                        "field" : "systolic",
                        "type" : "relative_change",
                        "value" : 20.0,
                        "direction" : "increase"
                      } ]
                    },
                    "notificationEmails" : [ "notificationEmail1@example.com", "notificationEmail2@example.com" ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        },
        "x-request-example" : "AlertConfigurationExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_AlertConfiguration"
        }
      }
    },
    "/api/v3/alerts/configuration/site/{siteId}/{type}" : {
      "get" : {
        "tags" : [ "Alert Configuration" ],
        "summary" : "Get Site Alert Config",
        "description" : "This endpoint fetches your site specific Alert Configuration for the siteId and type provided in url.\n",
        "operationId" : "getSiteAlertConfig",
        "parameters" : [ {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertConfiguration"
                },
                "examples" : {
                  "AlertConfigurationExample" : {
                    "value" : {
                      "alertConfigurationType" : "bloodPressure",
                      "enabled" : true,
                      "notifyHealthCoach" : true,
                      "notifyPatient" : true,
                      "config" : {
                        "rules" : [ {
                          "severity" : "MEDIUM",
                          "field" : "systolic",
                          "type" : "threshold",
                          "value" : 140,
                          "operator" : "gt"
                        }, {
                          "severity" : "MEDIUM",
                          "field" : "systolic",
                          "type" : "relative_change",
                          "value" : 20.0,
                          "direction" : "increase"
                        } ]
                      },
                      "notificationEmails" : [ "notificationEmail1@example.com", "notificationEmail2@example.com" ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "AlertConfigurationExample"
      }
    },
    "/api/v3/clinical-note" : {
      "get" : {
        "tags" : [ "Clinical Notes" ],
        "summary" : "List Clinical Notes",
        "description" : "Lists clinical notes with various filtering options including pagination, sorting, and specific attributes such as IDs, types, assignee details, creator details, patient details, and more.\nThis endpoint supports comprehensive filtering to retrieve relevant clinical notes based on the provided criteria.\n",
        "operationId" : "listClinicalNotes",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "The page number of the content returned.",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "The size of the page of content returned.",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "The attribute to sort on.",
          "schema" : {
            "$ref" : "#/components/schemas/ClinicalNoteSort"
          }
        }, {
          "name" : "sortDescending",
          "in" : "query",
          "description" : "True if the sort direction should be descending.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "Lists only clinical notes with the IDs provided.",
          "schema" : {
            "type" : "array",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            }
          }
        }, {
          "name" : "open",
          "in" : "query",
          "description" : "Lists only open clinical notes.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "description",
          "in" : "query",
          "description" : "Lists only clinical notes with the provided description.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Lists only clinical notes with the provided types.",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClinicalNoteType"
            }
          }
        }, {
          "name" : "cptCodeValue",
          "in" : "query",
          "description" : "Lists only clinical notes with the provided CPT code values.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "assigneeId",
          "in" : "query",
          "description" : "Lists only clinical notes assigned to the provided assignee IDs.",
          "schema" : {
            "type" : "array",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            }
          }
        }, {
          "name" : "assigneeName",
          "in" : "query",
          "description" : "Lists only clinical notes assigned to the provided assignee name.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assigneeEmail",
          "in" : "query",
          "description" : "Lists only clinical notes assigned to the provided assignee email.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdById",
          "in" : "query",
          "description" : "Lists only clinical notes created by the provided creator IDs.",
          "schema" : {
            "type" : "array",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            }
          }
        }, {
          "name" : "createdByName",
          "in" : "query",
          "description" : "Lists only clinical notes created by the provided creator name.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdByEmail",
          "in" : "query",
          "description" : "Lists only clinical notes created by the provided creator email.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "patientId",
          "in" : "query",
          "description" : "Lists only clinical notes associated with the provided patient IDs.",
          "schema" : {
            "type" : "array",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            }
          }
        }, {
          "name" : "patientSiteId",
          "in" : "query",
          "description" : "Lists only clinical notes associated with the provided patient site IDs.",
          "schema" : {
            "type" : "array",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            }
          }
        }, {
          "name" : "patientExternalIdentifier",
          "in" : "query",
          "description" : "Lists only clinical notes associated with the provided patient external identifiers.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "patientEmail",
          "in" : "query",
          "description" : "Lists only clinical notes associated with the provided patient email.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "patientName",
          "in" : "query",
          "description" : "Lists only clinical notes associated with the provided patient name.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageClinicalNote"
                },
                "examples" : {
                  "clinicalNotePagedResponseExample" : {
                    "value" : {
                      "content" : [ {
                        "id" : 88,
                        "type" : "cptCode",
                        "cptCode" : {
                          "value" : "99457",
                          "displayAs" : "CPT 99457"
                        },
                        "createTimestamp" : "2024-07-04T00:00:00Z",
                        "lastUpdateTimestamp" : "2024-07-14T00:00:00Z",
                        "open" : true,
                        "mdCode" : "md-123",
                        "dxCode" : "dx-123",
                        "description" : "This is a clinical note.",
                        "createdBy" : {
                          "id" : 1772,
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "email" : "user_1772@example.com"
                        },
                        "assignee" : {
                          "id" : 100,
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "email" : "user_100@example.com"
                        },
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "activity" : [ {
                          "createTimestamp" : "2024-07-04T00:00:00Z",
                          "comment" : "Activity comment 1",
                          "minutesSpent" : 2,
                          "createdBy" : {
                            "id" : 4,
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "email" : "user_4@example.com"
                          }
                        }, {
                          "createTimestamp" : "2024-07-04T00:00:00Z",
                          "comment" : "Activity comment 2",
                          "minutesSpent" : 4,
                          "createdBy" : {
                            "id" : 8,
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "email" : "user_8@example.com"
                          }
                        }, {
                          "createTimestamp" : "2024-07-04T00:00:00Z",
                          "comment" : "Activity comment 3",
                          "minutesSpent" : 6,
                          "createdBy" : {
                            "id" : 12,
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "email" : "user_12@example.com"
                          }
                        }, {
                          "createTimestamp" : "2024-07-04T00:00:00Z",
                          "comment" : "Activity comment 4",
                          "minutesSpent" : 8,
                          "createdBy" : {
                            "id" : 16,
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "email" : "user_16@example.com"
                          }
                        } ],
                        "totalTime" : 20
                      }, {
                        "id" : 89,
                        "type" : "other",
                        "createTimestamp" : "2024-07-04T00:00:00Z",
                        "lastUpdateTimestamp" : "2024-07-14T00:00:00Z",
                        "open" : true,
                        "mdCode" : "md-123",
                        "dxCode" : "dx-123",
                        "description" : "This is a clinical note.",
                        "createdBy" : {
                          "id" : 1772,
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "email" : "user_1772@example.com"
                        },
                        "assignee" : {
                          "id" : 100,
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "email" : "user_100@example.com"
                        },
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "activity" : [ {
                          "createTimestamp" : "2024-07-04T00:00:00Z",
                          "comment" : "Activity comment 1",
                          "minutesSpent" : 2,
                          "createdBy" : {
                            "id" : 4,
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "email" : "user_4@example.com"
                          }
                        }, {
                          "createTimestamp" : "2024-07-04T00:00:00Z",
                          "comment" : "Activity comment 2",
                          "minutesSpent" : 4,
                          "createdBy" : {
                            "id" : 8,
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "email" : "user_8@example.com"
                          }
                        }, {
                          "createTimestamp" : "2024-07-04T00:00:00Z",
                          "comment" : "Activity comment 3",
                          "minutesSpent" : 6,
                          "createdBy" : {
                            "id" : 12,
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "email" : "user_12@example.com"
                          }
                        }, {
                          "createTimestamp" : "2024-07-04T00:00:00Z",
                          "comment" : "Activity comment 4",
                          "minutesSpent" : 8,
                          "createdBy" : {
                            "id" : 16,
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "email" : "user_16@example.com"
                          }
                        } ],
                        "totalTime" : 20
                      } ],
                      "page" : 1,
                      "size" : 2,
                      "total" : 4,
                      "first" : true,
                      "last" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "clinicalNotePagedResponseExample"
      }
    },
    "/api/v3/clinical-note/{clinicalNoteId}" : {
      "get" : {
        "tags" : [ "Clinical Notes" ],
        "summary" : "Fetch Clinical Note",
        "description" : "Fetches details of a specific clinical note by its unique ID.",
        "operationId" : "fetchClinicalNote",
        "parameters" : [ {
          "name" : "clinicalNoteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClinicalNote"
                },
                "examples" : {
                  "clinicalNoteExample" : {
                    "value" : {
                      "id" : 99,
                      "type" : "other",
                      "createTimestamp" : "2024-07-04T00:00:00Z",
                      "lastUpdateTimestamp" : "2024-07-14T00:00:00Z",
                      "open" : true,
                      "mdCode" : "md-123",
                      "dxCode" : "dx-123",
                      "description" : "This is a clinical note.",
                      "createdBy" : {
                        "id" : 1772,
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "email" : "user_1772@example.com"
                      },
                      "assignee" : {
                        "id" : 100,
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "email" : "user_100@example.com"
                      },
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "activity" : [ {
                        "createTimestamp" : "2024-07-04T00:00:00Z",
                        "comment" : "Activity comment 1",
                        "minutesSpent" : 2,
                        "createdBy" : {
                          "id" : 4,
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "email" : "user_4@example.com"
                        }
                      }, {
                        "createTimestamp" : "2024-07-04T00:00:00Z",
                        "comment" : "Activity comment 2",
                        "minutesSpent" : 4,
                        "createdBy" : {
                          "id" : 8,
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "email" : "user_8@example.com"
                        }
                      }, {
                        "createTimestamp" : "2024-07-04T00:00:00Z",
                        "comment" : "Activity comment 3",
                        "minutesSpent" : 6,
                        "createdBy" : {
                          "id" : 12,
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "email" : "user_12@example.com"
                        }
                      }, {
                        "createTimestamp" : "2024-07-04T00:00:00Z",
                        "comment" : "Activity comment 4",
                        "minutesSpent" : 8,
                        "createdBy" : {
                          "id" : 16,
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "email" : "user_16@example.com"
                        }
                      } ],
                      "totalTime" : 20
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "clinicalNoteExample"
      }
    },
    "/api/v3/device" : {
      "get" : {
        "tags" : [ "Devices" ],
        "summary" : "List Devices",
        "description" : "Returns a paginated list of all devices associated with the customer.",
        "operationId" : "listDevices",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "The page number of the content returned.",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "The size of the page of content returned.",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "The attribute to sort on",
          "schema" : {
            "$ref" : "#/components/schemas/DeviceSort"
          }
        }, {
          "name" : "sortDescending",
          "in" : "query",
          "description" : "True if the sort direction should be descending",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "Lists only devices with the IDs provided.",
          "schema" : {
            "type" : "array",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            }
          }
        }, {
          "name" : "externalIdentifier",
          "in" : "query",
          "description" : "Lists only devices with the external IDs provided.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "identifierType",
          "in" : "query",
          "description" : "The device identifier type of the devices.",
          "schema" : {
            "$ref" : "#/components/schemas/DeviceIdentifierType"
          }
        }, {
          "name" : "identifier",
          "in" : "query",
          "description" : "Lists only devices with the device identifiers provided.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "The status of the devices.",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceStatus"
            }
          }
        }, {
          "name" : "itemId",
          "in" : "query",
          "description" : "Lists only devices with the provided Item ID type.",
          "schema" : {
            "type" : "array",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            }
          }
        }, {
          "name" : "itemName",
          "in" : "query",
          "description" : "The name of the item.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "itemModel",
          "in" : "query",
          "description" : "The model of the item.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "itemSku",
          "in" : "query",
          "description" : "The SKU of the item.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "manufacturerId",
          "in" : "query",
          "description" : "Lists only devices created by the Manufacturer ID provided.",
          "schema" : {
            "type" : "array",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            }
          }
        }, {
          "name" : "itemSize",
          "in" : "query",
          "description" : "Lists only devices of the sizes provided.",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ItemSize"
            }
          }
        }, {
          "name" : "itemClass",
          "in" : "query",
          "description" : "Lists only devices of the Classes provided.",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ItemClass"
            }
          }
        }, {
          "name" : "readingType",
          "in" : "query",
          "description" : "Lists only devices that support the Reading Types provided.",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReadingType"
            }
          }
        }, {
          "name" : "siteId",
          "in" : "query",
          "description" : "The ID of the site.",
          "schema" : {
            "type" : "array",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            }
          }
        }, {
          "name" : "patientId",
          "in" : "query",
          "description" : "The ID of the patient.",
          "schema" : {
            "type" : "array",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            }
          }
        }, {
          "name" : "patientExternalIdentifier",
          "in" : "query",
          "description" : "The external identifier of the patient.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "patientEmail",
          "in" : "query",
          "description" : "The email of the patient.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "patientName",
          "in" : "query",
          "description" : "The name of the patient.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "patientSiteId",
          "in" : "query",
          "description" : "The ID of the patient site.",
          "schema" : {
            "type" : "array",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDevice"
                },
                "examples" : {
                  "listDevicesResponseExample" : {
                    "value" : {
                      "content" : [ {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      }, {
                        "id" : 600,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      } ],
                      "page" : 1,
                      "size" : 2,
                      "total" : 4,
                      "first" : true,
                      "last" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "listDevicesResponseExample"
      }
    },
    "/api/v3/device/associate-patient" : {
      "patch" : {
        "tags" : [ "Devices" ],
        "summary" : "Associate Device",
        "description" : "This endpoint associates the device to the patient provided in the request body.\n\nIn order to associate a device with a patient, all of the following must apply:\n- The Patient must be associated with the Customer making the request\n- The Device must be owned by the Customer making the request\n- The Device must be associated with a non-Impilo site\n- The Device must have a current status of \"availableAtSite\"\n***\nFor more information see the [AssociateDeviceRequest Model](/resources/models#schema_AssociateDeviceRequest).",
        "operationId" : "associateDevice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssociateDeviceRequest"
              },
              "examples" : {
                "associateDeviceRequest" : {
                  "value" : {
                    "deviceId" : 1,
                    "patientExternalIdentifier" : "external-identifier"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        },
        "x-request-example" : "associateDeviceRequest",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_AssociateDeviceRequest"
        }
      }
    },
    "/api/v3/device/disable-readings" : {
      "patch" : {
        "tags" : [ "Devices" ],
        "summary" : "Disable Readings",
        "description" : "This endpoint disables readings for the device provided in the request body. Readings received while\nin this status will not be processed or saved. No alerts or webhooks will be triggered for these readings.\n\nIn order to disable readings for a device, all of the following must apply:\n- The Device must be owned by the Customer making the request\n- The Device's \"disabledReadings\" field must be false\n***\nFor more information see the [DeviceReferenceRequest Model](/resources/models#schema_DeviceReferenceRequest).",
        "operationId" : "disableReadings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceReferenceRequest"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        },
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_DeviceReferenceRequest"
        }
      }
    },
    "/api/v3/device/disassociate-patient" : {
      "patch" : {
        "tags" : [ "Devices" ],
        "summary" : "Disassociate Device",
        "description" : "This endpoint disassociates the device from the patient provided in the Request body.\n\nIn order to disassociate a device from a patient, all of the following must apply:\n- The Patient must be associated with the Customer making the request\n- The Device must be owned by the Customer making the request\n- The Device must already be associated with the provided Patient\n- The Device must be associated with a non-Impilo site\n- The Device must have a current status of \"withPatient\"\n***\nFor more information see the [AssociateDeviceRequest Model](/resources/models#schema_AssociateDeviceRequest).",
        "operationId" : "disassociateDevice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssociateDeviceRequest"
              },
              "examples" : {
                "disassociateDeviceRequestExample" : {
                  "value" : {
                    "deviceId" : 1,
                    "patientExternalIdentifier" : "external-identifier"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        },
        "x-request-example" : "disassociateDeviceRequestExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_AssociateDeviceRequest"
        }
      }
    },
    "/api/v3/device/enable-readings" : {
      "patch" : {
        "tags" : [ "Devices" ],
        "summary" : "Enable Readings",
        "description" : "This endpoint re-enables readings for the device provided in the request body.\n\nIn order to re-enable readings for a device, all of the following must apply:\n- The Device must be owned by the Customer making the request\n- The Device's \"disabledReadings\" field must be true\n***\nFor more information see the [DeviceReferenceRequest Model](/resources/models#schema_DeviceReferenceRequest).",
        "operationId" : "enableReadings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceReferenceRequest"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        },
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_DeviceReferenceRequest"
        }
      }
    },
    "/api/v3/device/validate/{deviceIdentifier}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "summary" : "Validate Device",
        "description" : "This endpoint validates that a Device Identifier exists and returns the Device upon matching. On failure, it indicates that the Identifier is not valid.\n",
        "operationId" : "validateDevice",
        "parameters" : [ {
          "name" : "deviceIdentifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidateDeviceResponse"
                },
                "examples" : {
                  "validateDeviceResponseExample" : {
                    "value" : {
                      "valid" : true,
                      "device" : {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "validateDeviceResponseExample"
      }
    },
    "/api/v3/device/{deviceId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "summary" : "Fetch Device",
        "description" : "This endpoint returns the Device specified by ID in the URL path.\n",
        "operationId" : "fetchDevice",
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Device"
                },
                "examples" : {
                  "device" : {
                    "value" : {
                      "id" : 599,
                      "item" : {
                        "id" : 791,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001"
                      },
                      "currentStatus" : "withPatient",
                      "currentPatient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "deviceIdentifiers" : [ {
                        "type" : "imei",
                        "value" : "354833969951611"
                      }, {
                        "type" : "serial",
                        "value" : "A44-A0623930"
                      }, {
                        "type" : "macAddress",
                        "value" : "f51da43314fc"
                      } ],
                      "disabledReadings" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "ApiV3ControllerExamples.device"
      }
    },
    "/api/v3/inventory" : {
      "get" : {
        "tags" : [ "Inventory" ],
        "summary" : "List Inventory Summary",
        "description" : "Returns a paginated list that aggregates all Used and New inventory across\nall Impilo and Customer locations by Item type. One entry per Item ID.\n",
        "operationId" : "listInventorySummary",
        "parameters" : [ {
          "name" : "itemId",
          "in" : "query",
          "description" : "The Item ID to filter the content by.",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page number of the content returned.",
          "schema" : {
            "format" : "int32",
            "default" : "1",
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "The size of the page returned. Max size is 100.",
          "schema" : {
            "format" : "int32",
            "default" : "15",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageInventorySummaryRecord"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/inventory/impilo" : {
      "get" : {
        "tags" : [ "Inventory" ],
        "summary" : "List Impilo Inventory",
        "description" : "Returns a paginated list of a Customer's inventory by Item type\nacross each of the Impilo Sites. One record per Item-Site combination.\n",
        "operationId" : "listImpiloInventory",
        "parameters" : [ {
          "name" : "itemId",
          "in" : "query",
          "description" : "The Item ID to filter the content by.",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page number of the content returned.",
          "schema" : {
            "format" : "int32",
            "default" : "1",
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "The size of the page returned. Max size is 100.",
          "schema" : {
            "format" : "int32",
            "default" : "15",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageInventoryRecord"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/inventory/site" : {
      "get" : {
        "tags" : [ "Inventory" ],
        "summary" : "List Site Inventory",
        "description" : "Returns a paginated list of a Customer's inventory by Item type\nacross each of the Customer Sites that there is inventory held. One record per Item-Site combination.\n",
        "operationId" : "listSiteInventory",
        "parameters" : [ {
          "name" : "itemId",
          "in" : "query",
          "description" : "The Item ID to filter the content by.",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "siteId",
          "in" : "query",
          "description" : "The Site ID to filter the content by.",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page number of the content returned.",
          "schema" : {
            "format" : "int32",
            "default" : "1",
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "The size of the page returned. Max size is 100.",
          "schema" : {
            "format" : "int32",
            "default" : "15",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageInventoryRecord"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/item" : {
      "get" : {
        "tags" : [ "Items" ],
        "summary" : "List Items",
        "description" : "This endpoint returns a paginated list of all items in a customer's catalog with various filtering options including pagination, sorting, and specific attributes such as IDs, names, models, SKUs, sizes, classes, reading types, and manufacturer IDs.\n",
        "operationId" : "listItems",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "The page number of the content returned.",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "The size of the page of content returned. Max value is 100.",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "The attribute to sort on.",
          "schema" : {
            "$ref" : "#/components/schemas/ItemSort"
          }
        }, {
          "name" : "sortDescending",
          "in" : "query",
          "description" : "True if the sort direction should be descending.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "Lists only items with the provided Item IDs.",
          "schema" : {
            "type" : "array",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            }
          }
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Lists only items with the provided name.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "model",
          "in" : "query",
          "description" : "Lists only items with the provided model.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sku",
          "in" : "query",
          "description" : "Lists only items with the provided SKU.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "itemSize",
          "in" : "query",
          "description" : "Lists only items with the provided sizes.",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ItemSize"
            }
          }
        }, {
          "name" : "itemClass",
          "in" : "query",
          "description" : "Lists only items with the provided classes.",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ItemClass"
            }
          }
        }, {
          "name" : "readingType",
          "in" : "query",
          "description" : "Lists only items with the provided reading types.",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReadingType"
            }
          }
        }, {
          "name" : "manufacturerId",
          "in" : "query",
          "description" : "Lists only items created by the provided Manufacturer IDs.",
          "schema" : {
            "type" : "array",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageItemDetailed"
                },
                "examples" : {
                  "listItemsResponseExample" : {
                    "value" : {
                      "content" : [ {
                        "id" : 791,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001",
                        "deviceIdentifierType" : "imei",
                        "itemClass" : "glucose",
                        "itemClassType" : "bpMonitor",
                        "size" : "large",
                        "dimensions" : {
                          "length" : 1.5,
                          "width" : 1.0,
                          "height" : 0.75,
                          "unit" : "in"
                        },
                        "readingType" : "bloodGlucose"
                      }, {
                        "id" : 791,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001",
                        "deviceIdentifierType" : "imei",
                        "itemClass" : "glucose",
                        "itemClassType" : "bpMonitor",
                        "size" : "large",
                        "dimensions" : {
                          "length" : 1.5,
                          "width" : 1.0,
                          "height" : 0.75,
                          "unit" : "in"
                        },
                        "readingType" : "bloodGlucose"
                      } ],
                      "page" : 1,
                      "size" : 2,
                      "total" : 4,
                      "first" : true,
                      "last" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "listItemsResponseExample"
      },
      "post" : {
        "tags" : [ "Items" ],
        "summary" : "Create Item",
        "description" : "This endpoint creates a new Item in the Impilo platform. This endpoint is only enabled for Customers that are also Manufacturer accounts.\n\nItems created via this endpoint will:\n- receive a generated SKU and ID\n- have a Manufacturer set to the requesting Customer\n- be set to an Orderable status of FALSE\n\nItems created with this endpoint are not able to be ordered until approved manually by an Impilo Admin.\nItems can still be procured and received within Impilo's system while the orderable parameter is false.\n***\nFor more information see the [ItemRequest Model](/resources/models#schema_ItemRequest).",
        "operationId" : "createItem",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ItemRequest"
              },
              "examples" : {
                "without-identifier" : {
                  "value" : {
                    "name" : "Blood Pressure Monitor",
                    "model" : "iBloodPressureMonitor123"
                  }
                },
                "with-identifier" : {
                  "value" : {
                    "name" : "Blood Pressure Monitor",
                    "model" : "iBloodPressureMonitor123",
                    "deviceIdentifierType" : "serial"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ItemDetailed"
                },
                "examples" : {
                  "itemRequestResponse" : {
                    "value" : {
                      "id" : 791,
                      "manufacturer" : {
                        "id" : 2,
                        "name" : "Custom Manufacturer"
                      },
                      "name" : "Blood Pressure Monitor",
                      "model" : "iBloodPressureMonitor123",
                      "sku" : "0000001",
                      "orderable" : false,
                      "deviceIdentifierType" : "imei",
                      "itemClass" : "glucose",
                      "itemClassType" : "bpMonitor",
                      "size" : "large",
                      "dimensions" : {
                        "length" : 1.5,
                        "width" : 1.0,
                        "height" : 0.75,
                        "unit" : "in"
                      },
                      "readingType" : "bloodGlucose"
                    }
                  }
                }
              }
            }
          }
        },
        "x-request-example-without-identifier" : "itemRequestWithoutIdentifier",
        "x-request-example-with-identifier" : "itemRequestWithIdentifier",
        "x-response-example" : "itemRequestResponse",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_ItemRequest"
        }
      }
    },
    "/api/v3/item/{itemId}" : {
      "get" : {
        "tags" : [ "Items" ],
        "summary" : "Fetch Item",
        "description" : "This endpoint returns the Item specified by ID in the URL path.\n",
        "operationId" : "fetchItem",
        "parameters" : [ {
          "name" : "itemId",
          "in" : "path",
          "description" : "The ID of the Item to be returned.",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ItemDetailed"
                },
                "examples" : {
                  "fullItem" : {
                    "value" : {
                      "id" : 791,
                      "manufacturer" : {
                        "id" : 2,
                        "name" : "Custom Manufacturer"
                      },
                      "name" : "Blood Pressure Monitor",
                      "model" : "iBloodPressureMonitor123",
                      "sku" : "0000001",
                      "deviceIdentifierType" : "imei",
                      "itemClass" : "glucose",
                      "itemClassType" : "bpMonitor",
                      "size" : "large",
                      "dimensions" : {
                        "length" : 1.5,
                        "width" : 1.0,
                        "height" : 0.75,
                        "unit" : "in"
                      },
                      "readingType" : "bloodGlucose"
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "fullItem"
      }
    },
    "/api/v3/kit" : {
      "get" : {
        "tags" : [ "Kits" ],
        "summary" : "List Kits",
        "description" : "This endpoint returns a paginated list of all kits belonging to a customer.\n\nYou can filter by the following parameters as query params:\n- page (integer) -- The page number of the content returned.\n- size (integer) -- The size of the page of content returned.\n- itemId (long) -- Shows only kits that contain the specified Item ID.\n- archived (bool) -- Shows kits that are/aren't archived, based on provided boolean value.\n",
        "operationId" : "listKits",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "itemId",
          "in" : "query",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageKit"
                },
                "examples" : {
                  "listKitsResponse" : {
                    "value" : {
                      "content" : [ {
                        "id" : 123,
                        "name" : "Example Kit",
                        "archived" : false,
                        "kitItems" : [ {
                          "item" : {
                            "id" : 1,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "count" : 1
                        } ]
                      } ],
                      "page" : 1,
                      "size" : 15,
                      "total" : 1,
                      "first" : true,
                      "last" : true
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "listKitsResponse"
      }
    },
    "/api/v3/kit/{kitId}" : {
      "get" : {
        "tags" : [ "Kits" ],
        "summary" : "Fetch Kit",
        "description" : "This endpoint returns the Kit specified by ID in the URL path.\n",
        "operationId" : "fetchKit",
        "parameters" : [ {
          "name" : "kitId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Kit"
                },
                "examples" : {
                  "fetchKitResponse" : {
                    "value" : {
                      "id" : 123,
                      "name" : "Example Kit",
                      "archived" : false,
                      "kitItems" : [ {
                        "item" : {
                          "id" : 1,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "count" : 1
                      } ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "fetchKitResponse"
      }
    },
    "/api/v3/manufacturer" : {
      "get" : {
        "tags" : [ "Manufacturers" ],
        "summary" : "List Manufacturers",
        "description" : "This endpoint returns a paginated list of all manufacturers in a customer's catalog.\n\nYou can filter by the following parameters as query params:\n- page (integer) -- The page number of the content returned.\n- size (integer) -- The size of the page of content returned.\n",
        "operationId" : "listManufacturers",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageManufacturer"
                },
                "examples" : {
                  "listManufacturersResponse" : {
                    "value" : {
                      "content" : [ {
                        "id" : 2,
                        "name" : "Custom Manufacturer"
                      } ],
                      "page" : 1,
                      "size" : 15,
                      "total" : 1,
                      "first" : true,
                      "last" : true
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "listManufacturersResponse"
      }
    },
    "/api/v3/manufacturer/{manufacturerId}" : {
      "get" : {
        "tags" : [ "Manufacturers" ],
        "summary" : "Fetch Manufacturer",
        "description" : "This endpoint returns the Manufacturer specified by ID in the URL path.\n",
        "operationId" : "fetchManufacturer",
        "parameters" : [ {
          "name" : "manufacturerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Manufacturer"
                },
                "examples" : {
                  "fetchManufacturerResponse" : {
                    "value" : {
                      "id" : 2,
                      "name" : "Custom Manufacturer"
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "fetchManufacturerResponse"
      }
    },
    "/api/v3/order" : {
      "get" : {
        "tags" : [ "Orders" ],
        "summary" : "List Orders",
        "operationId" : "listOrders",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "default" : "1",
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "default" : "15",
            "type" : "integer"
          }
        }, {
          "name" : "patientId",
          "in" : "query",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "externalOrderId",
          "in" : "query",
          "description" : "Lists only orders with the order external identifiers provided.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageOrder"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Orders" ],
        "summary" : "Create Order",
        "description" : "This endpoint is for creating orders linked to either a patient or a site, with order content specified by item or kit IDs and an association with a patient or site ID. Optional attributes offer further customization, such as tracking through external order IDs.\\n\\nFor a comprehensive guide on utilizing this endpoint, including examples, required and optional attributes, and additional functionalities like listing and fetching orders, visit the [Order Management Guide](/guides/order-management).\n***\nFor more information see the [Order Model](/resources/models#schema_Order).",
        "operationId" : "createOrder",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Order"
              },
              "examples" : {
                "existing-patient-order" : {
                  "value" : {
                    "externalOrderIds" : [ "xyz_123_0", "xyz_123_1", "xyz_123_2", "xyz_123_3" ],
                    "patient" : {
                      "id" : 1234,
                      "sex" : "unknown"
                    },
                    "orderItems" : [ {
                      "item" : {
                        "id" : 1000
                      },
                      "count" : 10
                    }, {
                      "item" : {
                        "id" : 1001
                      },
                      "count" : 10
                    }, {
                      "item" : {
                        "id" : 1002
                      },
                      "count" : 10
                    }, {
                      "item" : {
                        "id" : 1003
                      },
                      "count" : 10
                    } ],
                    "orderKits" : [ {
                      "kit" : {
                        "id" : 1000
                      },
                      "count" : 10
                    }, {
                      "kit" : {
                        "id" : 1001
                      },
                      "count" : 10
                    }, {
                      "kit" : {
                        "id" : 1002
                      },
                      "count" : 10
                    }, {
                      "kit" : {
                        "id" : 1003
                      },
                      "count" : 10
                    } ],
                    "shippingOption" : "standard"
                  }
                },
                "new-patient-order" : {
                  "value" : {
                    "externalOrderIds" : [ "xyz_123_0", "xyz_123_1", "xyz_123_2", "xyz_123_3" ],
                    "patient" : {
                      "firstName" : "Steven",
                      "lastName" : "Glansberg",
                      "email" : "steve.g@gmail.com",
                      "address" : {
                        "lineOne" : "123 Main Street",
                        "city" : "Anytown",
                        "state" : "PA",
                        "zipCode" : "19334"
                      },
                      "sex" : "unknown"
                    },
                    "orderItems" : [ {
                      "item" : {
                        "id" : 1000
                      },
                      "count" : 10
                    }, {
                      "item" : {
                        "id" : 1001
                      },
                      "count" : 10
                    }, {
                      "item" : {
                        "id" : 1002
                      },
                      "count" : 10
                    }, {
                      "item" : {
                        "id" : 1003
                      },
                      "count" : 10
                    } ],
                    "orderKits" : [ {
                      "kit" : {
                        "id" : 1000
                      },
                      "count" : 10
                    }, {
                      "kit" : {
                        "id" : 1001
                      },
                      "count" : 10
                    }, {
                      "kit" : {
                        "id" : 1002
                      },
                      "count" : 10
                    }, {
                      "kit" : {
                        "id" : 1003
                      },
                      "count" : 10
                    } ],
                    "shippingOption" : "standard"
                  }
                },
                "site-order" : {
                  "value" : {
                    "externalOrderIds" : [ "xyz_123_0", "xyz_123_1", "xyz_123_2", "xyz_123_3" ],
                    "site" : {
                      "id" : 1234
                    },
                    "orderItems" : [ {
                      "item" : {
                        "id" : 1000
                      },
                      "count" : 10
                    }, {
                      "item" : {
                        "id" : 1001
                      },
                      "count" : 10
                    }, {
                      "item" : {
                        "id" : 1002
                      },
                      "count" : 10
                    }, {
                      "item" : {
                        "id" : 1003
                      },
                      "count" : 10
                    } ],
                    "orderKits" : [ {
                      "kit" : {
                        "id" : 1000
                      },
                      "count" : 10
                    }, {
                      "kit" : {
                        "id" : 1001
                      },
                      "count" : 10
                    }, {
                      "kit" : {
                        "id" : 1002
                      },
                      "count" : 10
                    }, {
                      "kit" : {
                        "id" : 1003
                      },
                      "count" : 10
                    } ],
                    "shippingOption" : "standard"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Order"
                }
              }
            }
          }
        },
        "x-request-example-existing-patient-order" : "createRequestExampleExistingPatientOrder",
        "x-request-example-new-patient-order" : "createRequestExampleNewPatientOrder",
        "x-request-example-site-order" : "createRequestExampleNewSiteOrder",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_Order"
        }
      }
    },
    "/api/v3/order/summary/{orderId}" : {
      "get" : {
        "tags" : [ "Orders" ],
        "summary" : "Create Order Summary",
        "description" : "Returns a PDF document summarizing the order details for the given order ID.",
        "operationId" : "createOrderSummary",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "The ID of the order to generate the summary for.",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/pdf" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/order/{orderId}" : {
      "get" : {
        "tags" : [ "Orders" ],
        "summary" : "Fetch Order",
        "operationId" : "fetchOrder",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Order"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Orders" ],
        "summary" : "Void Order",
        "operationId" : "voidOrder",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/api/v3/patient" : {
      "get" : {
        "tags" : [ "Patients" ],
        "summary" : "List Patients",
        "description" : "Retrieves a paginated list of patients. Optional parameters allow specifying the page number and page size.",
        "operationId" : "listPatients",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "The page number of the content returned.",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "The size of the page of content returned.",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "The attribute to sort on.",
          "schema" : {
            "$ref" : "#/components/schemas/PatientSort"
          }
        }, {
          "name" : "sortDescending",
          "in" : "query",
          "description" : "True if the sort direction should be descending.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "Lists only patients with the IDs provided.",
          "schema" : {
            "type" : "array",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            }
          }
        }, {
          "name" : "siteId",
          "in" : "query",
          "description" : "Lists only patients with the site IDs provided.",
          "schema" : {
            "type" : "array",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            }
          }
        }, {
          "name" : "externalIdentifier",
          "in" : "query",
          "description" : "Lists only patients with the external identifiers provided.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Lists only patients with the provided email.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Lists only patients with the provided name.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Lists only patients who are archived.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "enrolled",
          "in" : "query",
          "description" : "Lists only patients who are enrolled.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "dateOfBirthMin",
          "in" : "query",
          "description" : "Lists only patients born on or after the provided date.",
          "schema" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        }, {
          "name" : "dateOfBirthMax",
          "in" : "query",
          "description" : "Lists only patients born on or before the provided date.",
          "schema" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        }, {
          "name" : "postalCode",
          "in" : "query",
          "description" : "Lists only patients with the provided postal code.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "country",
          "in" : "query",
          "description" : "Lists only patients with the provided country.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePatient"
                },
                "examples" : {
                  "patientPagedResponseExample" : {
                    "value" : {
                      "content" : [ {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      }, {
                        "id" : 457,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      }, {
                        "id" : 458,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      }, {
                        "id" : 459,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      }, {
                        "id" : 460,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      } ],
                      "page" : 1,
                      "size" : 5,
                      "total" : 10,
                      "first" : true,
                      "last" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "patientPagedResponseExample"
      },
      "post" : {
        "tags" : [ "Patients" ],
        "summary" : "Create Patient",
        "description" : "Creates a new patient record with the provided details.\n***\nFor more information see the [Patient Model](/resources/models#schema_Patient).",
        "operationId" : "createPatient",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Patient"
              },
              "examples" : {
                "create-patient" : {
                  "value" : {
                    "id" : 456,
                    "externalIdentifier" : "external-identifier-123",
                    "firstName" : "John",
                    "lastName" : "Doe",
                    "dateOfBirth" : "1987-09-13",
                    "email" : "email@example.com",
                    "phoneNumber" : "111-222-3333",
                    "address" : {
                      "lineOne" : "1234 Market Street",
                      "lineTwo" : "Suite 110",
                      "city" : "Philadelphia",
                      "state" : "PA",
                      "zipCode" : "19137",
                      "country" : "USA"
                    },
                    "sex" : "unknown"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Patient"
                }
              }
            }
          }
        },
        "x-request-example-create-patient" : "ApiV3ControllerExamples.patient",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_Patient"
        }
      }
    },
    "/api/v3/patient/disenroll/{patientId}" : {
      "post" : {
        "tags" : [ "Patients" ],
        "summary" : "Disenroll Patient",
        "description" : "Disenrolls a Patient from the Impilo platform. Depending on what values are provided, will generate a return for all devices associated with that Patient and/or archive the Patient.\n***\nFor more information see the [DisenrollPatientRequest Model](/resources/models#schema_DisenrollPatientRequest).",
        "operationId" : "disenrollPatient",
        "parameters" : [ {
          "name" : "patientId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DisenrollPatientRequest"
              },
              "examples" : {
                "disenroll-patient" : {
                  "value" : {
                    "archive" : true,
                    "createReturns" : true
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        },
        "x-request-example-disenroll-patient" : "disenrollPatientRequest",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_DisenrollPatientRequest"
        }
      }
    },
    "/api/v3/patient/find-by-email" : {
      "post" : {
        "tags" : [ "Patients" ],
        "summary" : "Fetch Patient By Email",
        "description" : "Fetches details of a specific patient by their email address, if exists.\n\nTo search, pass a JSON object in the Request Body with a single \"email\" attribute\n and the email to search for.\n",
        "operationId" : "fetchPatientByEmail",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              },
              "examples" : {
                "fetchByEmailExample" : {
                  "value" : {
                    "email" : "email@example.com"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Patient"
                }
              }
            }
          }
        },
        "x-request-example" : "fetchByEmailExample"
      }
    },
    "/api/v3/patient/identifier/{identifier}" : {
      "get" : {
        "tags" : [ "Patients" ],
        "summary" : "Fetch Patient By Identifier",
        "description" : "Fetches details of a specific patient by their external identifier. Returns at most 1 entry.",
        "operationId" : "fetchPatientByIdentifier",
        "parameters" : [ {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Patient"
                },
                "examples" : {
                  "patient" : {
                    "value" : {
                      "id" : 456,
                      "externalIdentifier" : "external-identifier-123",
                      "firstName" : "John",
                      "lastName" : "Doe",
                      "dateOfBirth" : "1987-09-13",
                      "email" : "email@example.com",
                      "phoneNumber" : "111-222-3333",
                      "address" : {
                        "lineOne" : "1234 Market Street",
                        "lineTwo" : "Suite 110",
                        "city" : "Philadelphia",
                        "state" : "PA",
                        "zipCode" : "19137",
                        "country" : "USA"
                      },
                      "sex" : "unknown"
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "ApiV3ControllerExamples.patient"
      }
    },
    "/api/v3/patient/{patientId}" : {
      "get" : {
        "tags" : [ "Patients" ],
        "summary" : "Fetch Patient",
        "description" : "Fetches details of a specific patient by their unique ID.",
        "operationId" : "fetchPatient",
        "parameters" : [ {
          "name" : "patientId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Patient"
                },
                "examples" : {
                  "patient" : {
                    "value" : {
                      "id" : 456,
                      "externalIdentifier" : "external-identifier-123",
                      "firstName" : "John",
                      "lastName" : "Doe",
                      "dateOfBirth" : "1987-09-13",
                      "email" : "email@example.com",
                      "phoneNumber" : "111-222-3333",
                      "address" : {
                        "lineOne" : "1234 Market Street",
                        "lineTwo" : "Suite 110",
                        "city" : "Philadelphia",
                        "state" : "PA",
                        "zipCode" : "19137",
                        "country" : "USA"
                      },
                      "sex" : "unknown"
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "ApiV3ControllerExamples.patient"
      },
      "put" : {
        "tags" : [ "Patients" ],
        "summary" : "Update Patient",
        "description" : "Updates an existing patient record with new details provided in the request body.\n***\nFor more information see the [Patient Model](/resources/models#schema_Patient).",
        "operationId" : "updatePatient",
        "parameters" : [ {
          "name" : "patientId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Patient"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Patient"
                }
              }
            }
          }
        },
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_Patient"
        }
      },
      "patch" : {
        "tags" : [ "Patients" ],
        "summary" : "Patch Patient",
        "description" : "Applies a partial update to a patient's record, modifying only the fields provided in the request body.\n***\nFor more information see the [Patient Model](/resources/models#schema_Patient).",
        "operationId" : "patchPatient",
        "parameters" : [ {
          "name" : "patientId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Patient"
              },
              "examples" : {
                "update-patient-email" : {
                  "value" : {
                    "email" : "new-email@example.com",
                    "sex" : "unknown"
                  }
                },
                "update-patient-external-identifier" : {
                  "value" : {
                    "externalIdentifier" : "new-external-id-123",
                    "sex" : "unknown"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Patient"
                }
              }
            }
          }
        },
        "x-request-example-update-patient-email" : "patchPatientEmailExample",
        "x-request-example-update-patient-external-identifier" : "patchPatientExternalIdentifierExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_Patient"
        }
      }
    },
    "/api/v3/procurement" : {
      "get" : {
        "tags" : [ "Procurements" ],
        "summary" : "List Procurements",
        "description" : "Lists procurements linked to the account requested in a paginated form.\n",
        "operationId" : "listProcurements",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "The page number of the content returned.",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "The size of the page of content returned.",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "sortDescending",
          "in" : "query",
          "description" : "True if the sort direction should be descending.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "Lists only procurements with the IDs provided.",
          "schema" : {
            "type" : "array",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageProcurement"
                },
                "examples" : {
                  "procurementPagedResponseExample" : {
                    "value" : {
                      "content" : [ {
                        "id" : 789,
                        "currentStatus" : "received",
                        "procurementType" : "shippingNotice",
                        "procurementItems" : [ {
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "quantityRequested" : 5,
                          "quantityApproved" : 5,
                          "costPerItem" : 12.34
                        } ],
                        "procurementEvents" : [ {
                          "name" : "received",
                          "eventTimestamp" : "2024-07-04T00:00:00Z"
                        } ]
                      }, {
                        "id" : 790,
                        "currentStatus" : "received",
                        "procurementType" : "shippingNotice",
                        "procurementItems" : [ {
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "quantityRequested" : 5,
                          "quantityApproved" : 5,
                          "costPerItem" : 12.34
                        } ],
                        "procurementEvents" : [ {
                          "name" : "received",
                          "eventTimestamp" : "2024-07-04T00:00:00Z"
                        } ]
                      }, {
                        "id" : 791,
                        "currentStatus" : "received",
                        "procurementType" : "shippingNotice",
                        "procurementItems" : [ {
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "quantityRequested" : 5,
                          "quantityApproved" : 5,
                          "costPerItem" : 12.34
                        } ],
                        "procurementEvents" : [ {
                          "name" : "received",
                          "eventTimestamp" : "2024-07-04T00:00:00Z"
                        } ]
                      }, {
                        "id" : 792,
                        "currentStatus" : "received",
                        "procurementType" : "shippingNotice",
                        "procurementItems" : [ {
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "quantityRequested" : 5,
                          "quantityApproved" : 5,
                          "costPerItem" : 12.34
                        } ],
                        "procurementEvents" : [ {
                          "name" : "received",
                          "eventTimestamp" : "2024-07-04T00:00:00Z"
                        } ]
                      }, {
                        "id" : 793,
                        "currentStatus" : "received",
                        "procurementType" : "shippingNotice",
                        "procurementItems" : [ {
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "quantityRequested" : 5,
                          "quantityApproved" : 5,
                          "costPerItem" : 12.34
                        } ],
                        "procurementEvents" : [ {
                          "name" : "received",
                          "eventTimestamp" : "2024-07-04T00:00:00Z"
                        } ]
                      } ],
                      "page" : 1,
                      "size" : 5,
                      "total" : 10,
                      "first" : true,
                      "last" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "procurementPagedResponseExample"
      },
      "post" : {
        "tags" : [ "Procurements" ],
        "summary" : "Create Procurement Request",
        "description" : "Creates a new procurement with the provided details.\n***\nFor more information see the [Procurement Model](/resources/models#schema_Procurement).",
        "operationId" : "createProcurementRequest",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Procurement"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "format" : "int64",
                  "type" : "integer"
                }
              }
            }
          }
        },
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_Procurement"
        }
      }
    },
    "/api/v3/procurement/receipt" : {
      "post" : {
        "tags" : [ "Procurements" ],
        "summary" : "Create Shipping Notice",
        "description" : "Creates a new procurement shipping receipt with the provided details.\n***\nFor more information see the [Procurement Model](/resources/models#schema_Procurement).",
        "operationId" : "createShippingNotice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Procurement"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "format" : "int64",
                  "type" : "integer"
                }
              }
            }
          }
        },
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_Procurement"
        }
      }
    },
    "/api/v3/procurement/{id}" : {
      "get" : {
        "tags" : [ "Procurements" ],
        "summary" : "List Procurements",
        "description" : "Fetches a procurement by ID provided in the path.\n",
        "operationId" : "listProcurements",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Procurement to fetch.",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Procurement"
                },
                "examples" : {
                  "procurementResponseExample" : {
                    "value" : {
                      "id" : 789,
                      "currentStatus" : "received",
                      "procurementType" : "shippingNotice",
                      "procurementItems" : [ {
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "quantityRequested" : 5,
                        "quantityApproved" : 5,
                        "costPerItem" : 12.34
                      } ],
                      "procurementEvents" : [ {
                        "name" : "received",
                        "eventTimestamp" : "2024-07-04T00:00:00Z"
                      } ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "procurementResponseExample"
      }
    },
    "/api/v3/procurement/{procId}/upload" : {
      "get" : {
        "tags" : [ "Procurements" ],
        "summary" : "Fetch Procurement Document",
        "description" : "Fetches the uploaded file from the provided Procurement ID, if exists.\n",
        "operationId" : "fetchProcurementDocument",
        "parameters" : [ {
          "name" : "procId",
          "in" : "path",
          "description" : "The Procurement ID to fetch the CSV from.",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Procurements" ],
        "summary" : "Upload Procurement Document",
        "description" : "Uploads a file to the provided Procurement ID and makes accessible to the Impilo Warehouse team for viewing.\n\nContent-Type must be set to form-data, with a parameter of 'file' containing the CSV.\n",
        "operationId" : "uploadProcurementDocument",
        "parameters" : [ {
          "name" : "procId",
          "in" : "path",
          "description" : "The Procurement ID to attach the CSV to.",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      },
      "delete" : {
        "tags" : [ "Procurements" ],
        "summary" : "Delete Procurement Document",
        "description" : "Deletes the uploaded file from the provided Procurement ID, if exists.\n",
        "operationId" : "deleteProcurementDocument",
        "parameters" : [ {
          "name" : "procId",
          "in" : "path",
          "description" : "The Procurement ID to delete the CSV from.",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/api/v3/return" : {
      "get" : {
        "tags" : [ "Returns" ],
        "summary" : "List Returns",
        "description" : "Retrieves a paginated list of Return Merchandise Authorizations (RMAs) with various filtering options including pagination, sorting, and specific attributes such as status, last updated before, and standalone.\n",
        "operationId" : "listReturns",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "description" : "Lists only returns with the provided status.",
          "schema" : {
            "$ref" : "#/components/schemas/ReturnMerchAuthStatus"
          }
        }, {
          "name" : "relatedOrderId",
          "in" : "query",
          "description" : "Lists only returns related to the provided order ID.",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "searchString",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastUpdatedBefore",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        }, {
          "name" : "standalone",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "default" : "1",
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "default" : "15",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageReturn"
                },
                "examples" : {
                  "rmaListResponseExample" : {
                    "value" : {
                      "content" : [ {
                        "id" : 472,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "currentStatus" : "rmaPlaced",
                        "returnItems" : [ {
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "count" : 1
                        } ],
                        "trackingNumbers" : [ {
                          "carrier" : "USPS",
                          "value" : "9400110200883830000001"
                        } ],
                        "returnDevices" : [ {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        } ],
                        "relatedOrderId" : 846
                      }, {
                        "id" : 473,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "currentStatus" : "rmaPlaced",
                        "returnItems" : [ {
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "count" : 1
                        } ],
                        "trackingNumbers" : [ {
                          "carrier" : "USPS",
                          "value" : "9400110200883830000001"
                        } ],
                        "returnDevices" : [ {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        } ],
                        "relatedOrderId" : 846
                      } ],
                      "page" : 1,
                      "size" : 2,
                      "total" : 4,
                      "first" : true,
                      "last" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "rmaListResponseExample"
      },
      "post" : {
        "tags" : [ "Returns" ],
        "summary" : "Create Return",
        "description" : "Creates a Return Merchandise Authorization (RMA).\n***\nFor more information see the [CreateReturn Model](/resources/models#schema_CreateReturn).",
        "operationId" : "createReturn",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateReturn"
              },
              "examples" : {
                "create-return" : {
                  "value" : {
                    "patientId" : 36892,
                    "returnItems" : [ {
                      "id" : 83521,
                      "count" : 3
                    } ],
                    "shippingOption" : "STANDARD",
                    "emailLabel" : false
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Return"
                },
                "examples" : {
                  "rmaCreateResponseExample" : {
                    "value" : {
                      "id" : 472,
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "currentStatus" : "rmaPlaced",
                      "returnItems" : [ {
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "count" : 1
                      } ],
                      "trackingNumbers" : [ {
                        "carrier" : "USPS",
                        "value" : "9400110200883830000001"
                      } ],
                      "returnDevices" : [ {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      } ],
                      "relatedOrderId" : 846
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "rmaCreateResponseExample",
        "x-request-example-create-return" : "ApiV3ControllerExamples.createReturnPayload",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_CreateReturn"
        }
      }
    },
    "/api/v3/return/{id}" : {
      "get" : {
        "tags" : [ "Returns" ],
        "summary" : "Fetch Return",
        "description" : "Retrieves a Return Merchandise Authorization from the Impilo platform by the ID provided in the path.",
        "operationId" : "fetchReturn",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Return"
                },
                "examples" : {
                  "rmaResponseExample" : {
                    "value" : {
                      "id" : 472,
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "currentStatus" : "rmaPlaced",
                      "returnItems" : [ {
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "count" : 1
                      } ],
                      "trackingNumbers" : [ {
                        "carrier" : "USPS",
                        "value" : "9400110200883830000001"
                      } ],
                      "returnDevices" : [ {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      } ],
                      "relatedOrderId" : 846
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "rmaResponseExample"
      },
      "delete" : {
        "tags" : [ "Returns" ],
        "summary" : "Void Return",
        "description" : "Voids a Return Merchandise Authorization from the Impilo platform by the ID provided in the path.",
        "operationId" : "voidReturn",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/api/v3/site" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "List Sites",
        "description" : "Returns a paginated list of your sites.\n\nOptional query parameters:\n    - page (integer) -- The page number of the sites returned.\n    - size (integer) -- The number of sites returned per page.\n",
        "operationId" : "listSites",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageSite"
                },
                "examples" : {
                  "site" : {
                    "value" : {
                      "id" : 561,
                      "name" : "Building B",
                      "active" : true,
                      "address" : {
                        "lineOne" : "1234 Market Street",
                        "lineTwo" : "Suite 110",
                        "city" : "Philadelphia",
                        "state" : "PA",
                        "zipCode" : "19137",
                        "country" : "USA"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "ApiV3ControllerExamples.site"
      },
      "post" : {
        "tags" : [ "Sites" ],
        "summary" : "Create Site",
        "description" : "Creates a new site with the provided details.\n\nReturns the site.\n***\nFor more information see the [Site Model](/resources/models#schema_Site).",
        "operationId" : "createSite",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Site"
              },
              "examples" : {
                "create-site" : {
                  "value" : {
                    "id" : 561,
                    "name" : "Building B",
                    "active" : true,
                    "address" : {
                      "lineOne" : "1234 Market Street",
                      "lineTwo" : "Suite 110",
                      "city" : "Philadelphia",
                      "state" : "PA",
                      "zipCode" : "19137",
                      "country" : "USA"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                },
                "examples" : {
                  "site" : {
                    "value" : {
                      "id" : 561,
                      "name" : "Building B",
                      "active" : true,
                      "address" : {
                        "lineOne" : "1234 Market Street",
                        "lineTwo" : "Suite 110",
                        "city" : "Philadelphia",
                        "state" : "PA",
                        "zipCode" : "19137",
                        "country" : "USA"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-request-example-create-site" : "ApiV3ControllerExamples.site",
        "x-response-example" : "ApiV3ControllerExamples.site",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_Site"
        }
      }
    },
    "/api/v3/site/{siteId}" : {
      "get" : {
        "tags" : [ "Sites" ],
        "summary" : "Fetch Site",
        "description" : "Returns the site specified by the ID in the URL path.",
        "operationId" : "fetchSite",
        "parameters" : [ {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                },
                "examples" : {
                  "site" : {
                    "value" : {
                      "id" : 561,
                      "name" : "Building B",
                      "active" : true,
                      "address" : {
                        "lineOne" : "1234 Market Street",
                        "lineTwo" : "Suite 110",
                        "city" : "Philadelphia",
                        "state" : "PA",
                        "zipCode" : "19137",
                        "country" : "USA"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "ApiV3ControllerExamples.site"
      },
      "put" : {
        "tags" : [ "Sites" ],
        "summary" : "Update Site",
        "description" : "Update the site specified by the ID in the URL path with a new site object.\n***\nFor more information see the [Site Model](/resources/models#schema_Site).",
        "operationId" : "updateSite",
        "parameters" : [ {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Site"
              },
              "examples" : {
                "update-site" : {
                  "value" : {
                    "id" : 561,
                    "name" : "Building B",
                    "active" : true,
                    "address" : {
                      "lineOne" : "1234 Market Street",
                      "lineTwo" : "Suite 110",
                      "city" : "Philadelphia",
                      "state" : "PA",
                      "zipCode" : "19137",
                      "country" : "USA"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        },
        "x-request-example-update-site" : "ApiV3ControllerExamples.site",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_Site"
        }
      },
      "patch" : {
        "tags" : [ "Sites" ],
        "summary" : "Patch Site",
        "description" : "Partially update the site specified by the ID in the URL path with a new site object.\n***\nFor more information see the [Site Model](/resources/models#schema_Site).",
        "operationId" : "patchSite",
        "parameters" : [ {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Site"
              },
              "examples" : {
                "patch-site" : {
                  "value" : {
                    "id" : 561,
                    "name" : "Building B",
                    "active" : true,
                    "address" : {
                      "lineOne" : "1234 Market Street",
                      "lineTwo" : "Suite 110",
                      "city" : "Philadelphia",
                      "state" : "PA",
                      "zipCode" : "19137",
                      "country" : "USA"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                },
                "examples" : {
                  "site" : {
                    "value" : {
                      "id" : 561,
                      "name" : "Building B",
                      "active" : true,
                      "address" : {
                        "lineOne" : "1234 Market Street",
                        "lineTwo" : "Suite 110",
                        "city" : "Philadelphia",
                        "state" : "PA",
                        "zipCode" : "19137",
                        "country" : "USA"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-request-example-patch-site" : "ApiV3ControllerExamples.site",
        "x-response-example" : "ApiV3ControllerExamples.site",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_Site"
        }
      }
    },
    "/api/v3/support-ticket" : {
      "get" : {
        "tags" : [ "Support Tickets" ],
        "summary" : "List Support Tickets",
        "description" : "Retrieves a paginated list of support tickets from the Impilo platform.",
        "operationId" : "listSupportTickets",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "The page number of the content returned.",
          "schema" : {
            "format" : "int32",
            "default" : "1",
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "The page size of the content returned.",
          "schema" : {
            "format" : "int32",
            "default" : "15",
            "type" : "integer"
          }
        }, {
          "name" : "ticketType",
          "in" : "query",
          "description" : "The support ticket type to filter by.",
          "schema" : {
            "$ref" : "#/components/schemas/SupportTicketType"
          }
        }, {
          "name" : "assigneeEmail",
          "in" : "query",
          "description" : "The email address of the individual asssigned a support ticket.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "patientExternalIdentifier",
          "in" : "query",
          "description" : "The external identifier of the patient associated with a support itcket.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "patientId",
          "in" : "query",
          "description" : "The id of the patient associated with a support ticket.",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "createdAt",
          "in" : "query",
          "description" : "The time after which a support ticket was created.",
          "schema" : {
            "$ref" : "#/components/schemas/Instant"
          }
        }, {
          "name" : "updatedAt",
          "in" : "query",
          "description" : "The time after which a support ticket was last updated.",
          "schema" : {
            "$ref" : "#/components/schemas/Instant"
          }
        }, {
          "name" : "open",
          "in" : "query",
          "description" : "Whether or not a support ticket is considered closed or not.",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageSupportTicket"
                },
                "examples" : {
                  "supportTicketPagedResponseExample" : {
                    "value" : {
                      "content" : [ {
                        "id" : 123,
                        "customer" : {
                          "id" : 8,
                          "name" : "Customer 8"
                        },
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "ticketType" : "patientSetup",
                        "supportTicketNotes" : [ {
                          "createdBy" : {
                            "id" : 1772,
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "email" : "user_1772@example.com"
                          },
                          "note" : "Example Note.",
                          "createdAt" : "2024-07-04T00:00:00Z"
                        } ],
                        "supportTicketEvents" : [ {
                          "eventType" : "ticketCreated",
                          "createdAt" : "2024-07-04T00:00:00Z"
                        } ],
                        "currentStatus" : "needsIntake",
                        "open" : true,
                        "assignedTeam" : "support",
                        "assignee" : {
                          "id" : 1772,
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "email" : "user_1772@example.com"
                        },
                        "createdBy" : {
                          "id" : 1772,
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "email" : "user_1772@example.com"
                        },
                        "createdAt" : "2024-07-04T00:00:00Z",
                        "lastUpdated" : "2024-07-04T00:00:00Z"
                      }, {
                        "id" : 124,
                        "customer" : {
                          "id" : 8,
                          "name" : "Customer 8"
                        },
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "ticketType" : "patientSetup",
                        "supportTicketNotes" : [ {
                          "createdBy" : {
                            "id" : 1772,
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "email" : "user_1772@example.com"
                          },
                          "note" : "Example Note.",
                          "createdAt" : "2024-07-04T00:00:00Z"
                        } ],
                        "supportTicketEvents" : [ {
                          "eventType" : "ticketCreated",
                          "createdAt" : "2024-07-04T00:00:00Z"
                        } ],
                        "currentStatus" : "needsIntake",
                        "open" : true,
                        "assignedTeam" : "support",
                        "assignee" : {
                          "id" : 1772,
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "email" : "user_1772@example.com"
                        },
                        "createdBy" : {
                          "id" : 1772,
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "email" : "user_1772@example.com"
                        },
                        "createdAt" : "2024-07-04T00:00:00Z",
                        "lastUpdated" : "2024-07-04T00:00:00Z"
                      }, {
                        "id" : 125,
                        "customer" : {
                          "id" : 8,
                          "name" : "Customer 8"
                        },
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "ticketType" : "patientSetup",
                        "supportTicketNotes" : [ {
                          "createdBy" : {
                            "id" : 1772,
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "email" : "user_1772@example.com"
                          },
                          "note" : "Example Note.",
                          "createdAt" : "2024-07-04T00:00:00Z"
                        } ],
                        "supportTicketEvents" : [ {
                          "eventType" : "ticketCreated",
                          "createdAt" : "2024-07-04T00:00:00Z"
                        } ],
                        "currentStatus" : "needsIntake",
                        "open" : true,
                        "assignedTeam" : "support",
                        "assignee" : {
                          "id" : 1772,
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "email" : "user_1772@example.com"
                        },
                        "createdBy" : {
                          "id" : 1772,
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "email" : "user_1772@example.com"
                        },
                        "createdAt" : "2024-07-04T00:00:00Z",
                        "lastUpdated" : "2024-07-04T00:00:00Z"
                      }, {
                        "id" : 126,
                        "customer" : {
                          "id" : 8,
                          "name" : "Customer 8"
                        },
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "ticketType" : "patientSetup",
                        "supportTicketNotes" : [ {
                          "createdBy" : {
                            "id" : 1772,
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "email" : "user_1772@example.com"
                          },
                          "note" : "Example Note.",
                          "createdAt" : "2024-07-04T00:00:00Z"
                        } ],
                        "supportTicketEvents" : [ {
                          "eventType" : "ticketCreated",
                          "createdAt" : "2024-07-04T00:00:00Z"
                        } ],
                        "currentStatus" : "needsIntake",
                        "open" : true,
                        "assignedTeam" : "support",
                        "assignee" : {
                          "id" : 1772,
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "email" : "user_1772@example.com"
                        },
                        "createdBy" : {
                          "id" : 1772,
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "email" : "user_1772@example.com"
                        },
                        "createdAt" : "2024-07-04T00:00:00Z",
                        "lastUpdated" : "2024-07-04T00:00:00Z"
                      }, {
                        "id" : 127,
                        "customer" : {
                          "id" : 8,
                          "name" : "Customer 8"
                        },
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "ticketType" : "patientSetup",
                        "supportTicketNotes" : [ {
                          "createdBy" : {
                            "id" : 1772,
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "email" : "user_1772@example.com"
                          },
                          "note" : "Example Note.",
                          "createdAt" : "2024-07-04T00:00:00Z"
                        } ],
                        "supportTicketEvents" : [ {
                          "eventType" : "ticketCreated",
                          "createdAt" : "2024-07-04T00:00:00Z"
                        } ],
                        "currentStatus" : "needsIntake",
                        "open" : true,
                        "assignedTeam" : "support",
                        "assignee" : {
                          "id" : 1772,
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "email" : "user_1772@example.com"
                        },
                        "createdBy" : {
                          "id" : 1772,
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "email" : "user_1772@example.com"
                        },
                        "createdAt" : "2024-07-04T00:00:00Z",
                        "lastUpdated" : "2024-07-04T00:00:00Z"
                      } ],
                      "page" : 1,
                      "size" : 5,
                      "total" : 10,
                      "first" : true,
                      "last" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "supportTicketPagedResponseExample"
      },
      "post" : {
        "tags" : [ "Support Tickets" ],
        "summary" : "Create Support Ticket",
        "description" : "Creates a new Support Ticket in the Impilo platform.\n***\nFor more information see the [SupportTicketRequest Model](/resources/models#schema_SupportTicketRequest).",
        "operationId" : "createSupportTicket",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SupportTicketRequest"
              },
              "examples" : {
                "supportTicketRequestExample" : {
                  "value" : {
                    "patient" : {
                      "id" : 123,
                      "sex" : "unknown"
                    },
                    "ticketType" : "deviceTechnicalSupport",
                    "note" : "Example Note."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupportTicket"
                }
              }
            }
          }
        },
        "x-request-example" : "supportTicketRequestExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_SupportTicketRequest"
        }
      }
    },
    "/api/v3/support-ticket/{id}" : {
      "get" : {
        "tags" : [ "Support Tickets" ],
        "summary" : "Fetch Support Ticket By Id",
        "description" : "Retrieves a support ticket by the ID from the Impilo platform.",
        "operationId" : "fetchSupportTicketById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Support Ticket to fetch.",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupportTicket"
                },
                "examples" : {
                  "supportTicketResponseExample" : {
                    "value" : {
                      "id" : 123,
                      "customer" : {
                        "id" : 8,
                        "name" : "Customer 8"
                      },
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "ticketType" : "patientSetup",
                      "supportTicketNotes" : [ {
                        "createdBy" : {
                          "id" : 1772,
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "email" : "user_1772@example.com"
                        },
                        "note" : "Example Note.",
                        "createdAt" : "2024-07-04T00:00:00Z"
                      } ],
                      "supportTicketEvents" : [ {
                        "eventType" : "ticketCreated",
                        "createdAt" : "2024-07-04T00:00:00Z"
                      } ],
                      "currentStatus" : "needsIntake",
                      "open" : true,
                      "assignedTeam" : "support",
                      "assignee" : {
                        "id" : 1772,
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "email" : "user_1772@example.com"
                      },
                      "createdBy" : {
                        "id" : 1772,
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "email" : "user_1772@example.com"
                      },
                      "createdAt" : "2024-07-04T00:00:00Z",
                      "lastUpdated" : "2024-07-04T00:00:00Z"
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "supportTicketResponseExample"
      }
    },
    "/api/v3/support-ticket/{supportTicketId}/assignee" : {
      "post" : {
        "tags" : [ "Support Tickets" ],
        "summary" : "Update Assignee",
        "description" : "Updates the assignee on a Support Ticket with an ID provided in the path. You can only assign individuals within your organization via the API.\n***\nFor more information see the [SupportTicketAssigneeRequest Model](/resources/models#schema_SupportTicketAssigneeRequest).",
        "operationId" : "updateAssignee",
        "parameters" : [ {
          "name" : "supportTicketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SupportTicketAssigneeRequest"
              },
              "examples" : {
                "supportTicketUpdateAssigneeExample" : {
                  "value" : {
                    "email" : "email@example.com"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupportTicket"
                }
              }
            }
          }
        },
        "x-request-example" : "supportTicketUpdateAssigneeExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_SupportTicketAssigneeRequest"
        }
      }
    },
    "/api/v3/support-ticket/{supportTicketId}/close" : {
      "post" : {
        "tags" : [ "Support Tickets" ],
        "summary" : "Close Support Ticket",
        "description" : "Closes a Support Ticket with the ID provided in the path.",
        "operationId" : "closeSupportTicket",
        "parameters" : [ {
          "name" : "supportTicketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupportTicket"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/support-ticket/{supportTicketId}/event" : {
      "post" : {
        "tags" : [ "Support Tickets" ],
        "summary" : "Update Status",
        "description" : "Updates the status of a Support Ticket with an ID provided in the path. If a note is also provided, will also insert a note.\n***\nFor more information see the [SupportTicketEventRequest Model](/resources/models#schema_SupportTicketEventRequest).",
        "operationId" : "updateStatus",
        "parameters" : [ {
          "name" : "supportTicketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SupportTicketEventRequest"
              },
              "examples" : {
                "supportTicketUpdateStatusExample" : {
                  "value" : {
                    "event" : "additionalContactAttempt",
                    "note" : "Optional Note."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupportTicket"
                }
              }
            }
          }
        },
        "x-request-example" : "supportTicketUpdateStatusExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_SupportTicketEventRequest"
        }
      }
    },
    "/api/v3/support-ticket/{supportTicketId}/note" : {
      "post" : {
        "tags" : [ "Support Tickets" ],
        "summary" : "Create Support Ticket",
        "description" : "Posts a new note to the Support Ticket ID provided in the path.\n***\nFor more information see the [SupportTicketNoteRequest Model](/resources/models#schema_SupportTicketNoteRequest).",
        "operationId" : "createSupportTicket",
        "parameters" : [ {
          "name" : "supportTicketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SupportTicketNoteRequest"
              },
              "examples" : {
                "supportTicketNoteRequestExample" : {
                  "value" : {
                    "note" : "Example Note"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupportTicket"
                }
              }
            }
          }
        },
        "x-request-example" : "supportTicketNoteRequestExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_SupportTicketNoteRequest"
        }
      }
    },
    "/api/v3/support-ticket/{supportTicketId}/open" : {
      "post" : {
        "tags" : [ "Support Tickets" ],
        "summary" : "Reopen Support Ticket",
        "description" : "Reopens a Support Ticket with the ID provided in the path.",
        "operationId" : "reopenSupportTicket",
        "parameters" : [ {
          "name" : "supportTicketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupportTicket"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/transfer/transfer-request" : {
      "get" : {
        "tags" : [ "Transfers" ],
        "summary" : "List Transfer Requests",
        "description" : "Retrieves a paginated list of Transfer Requests from the Impilo platform.",
        "operationId" : "listTransferRequests",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "The page number of the content returned.",
          "schema" : {
            "format" : "int32",
            "default" : "1",
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "The size of the page returned. Max size is 100.",
          "schema" : {
            "format" : "int32",
            "default" : "15",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageTransferRequest"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Transfers" ],
        "summary" : "Create Item Transfer Request",
        "description" : "Creates a Transfer Request, which consists of Items and Quantities to transfer from a\nCustomer account to one of it's sub-Customer accounts.\n\nTo submit a transfer request, the Target Customer must be a sub-Customer account of the\nrequestor and the body must consist of at least one TransferItem object with a quantity\ngreater than 0.\n\nYou can only request up to 500 items be transferred at a time. If you need to transfer more,\nmultiple Transfer Request submissions are required.\n\nThe only requirement for the TransferItem's item parameter is a JSON object that includes\nan ID of the Item requested.\n***\nFor more information see the [ItemTransferRequest Model](/resources/models#schema_ItemTransferRequest).",
        "operationId" : "createItemTransferRequest",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ItemTransferRequest"
              },
              "examples" : {
                "createItemTransferRequestExample" : {
                  "value" : {
                    "toCustomerId" : 1,
                    "transfers" : [ {
                      "item" : {
                        "id" : 10,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001"
                      },
                      "count" : 20
                    }, {
                      "item" : {
                        "id" : 10,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001"
                      },
                      "count" : 20
                    } ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "format" : "int64",
                  "type" : "integer"
                }
              }
            }
          }
        },
        "x-request-example" : "createItemTransferRequestExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_ItemTransferRequest"
        }
      }
    },
    "/api/v3/transfer/transfer-request/{id}" : {
      "get" : {
        "tags" : [ "Transfers" ],
        "summary" : "Fetch Transfer Request",
        "description" : "Fetches a Transfer Request by ID from the Impilo platform.",
        "operationId" : "fetchTransferRequest",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Transfer Request to fetch.",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransferRequest"
                },
                "examples" : {
                  "item-transfer-request" : {
                    "value" : {
                      "id" : 123,
                      "fromCustomer" : {
                        "id" : 2,
                        "name" : "Customer 2"
                      },
                      "toCustomer" : {
                        "id" : 3,
                        "name" : "Customer 3"
                      },
                      "currentStatus" : "requested",
                      "createdAt" : "2024-07-04T00:00:00Z",
                      "transferRequestNotes" : [ {
                        "note" : "Note Text Here",
                        "createdAt" : "2024-07-04T00:00:00Z"
                      } ],
                      "transferRequestEvents" : [ {
                        "name" : "requested",
                        "eventTimestamp" : "2024-07-04T00:00:00Z"
                      } ],
                      "transferItems" : [ {
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "count" : 5
                      } ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example-item-transfer-request" : "createItemTransferResponseExample"
      }
    },
    "/api/v3/webhook" : {
      "get" : {
        "tags" : [ "Webhooks" ],
        "summary" : "List Webhooks",
        "description" : "This endpoint retrieves a paginated list of V3 webhooks that the associated Customer is subscribed to.\n",
        "operationId" : "listWebhooks",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageWebhook"
                },
                "examples" : {
                  "ListWebhooksResponse" : {
                    "value" : {
                      "content" : [ {
                        "id" : 123,
                        "type" : "order.status",
                        "url" : "https://impilo.health"
                      } ],
                      "page" : 1,
                      "size" : 15,
                      "total" : 1,
                      "first" : true,
                      "last" : true
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "ListWebhooksResponse"
      },
      "post" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Create Webhook",
        "description" : "This endpoint creates a V3 webhook subscription of the type provided in the ***type*** attribute of the Webhook object.\n> Note: This endpoint will create a V3 webhook -- you cannot view V3 webhooks from the V1 or V2 endpoints.\n***\nFor more information see the [Webhook Model](/resources/models#schema_Webhook).",
        "operationId" : "createWebhook",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Webhook"
              },
              "examples" : {
                "WebhookRequestExample" : {
                  "value" : {
                    "type" : "order.status",
                    "url" : "https://impilo.health"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Webhook"
                },
                "examples" : {
                  "WebhookResponseExample" : {
                    "value" : {
                      "id" : 123,
                      "type" : "order.status",
                      "url" : "https://impilo.health"
                    }
                  }
                }
              }
            }
          }
        },
        "x-request-example" : "WebhookRequestExample",
        "x-response-example" : "WebhookResponseExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_Webhook"
        }
      }
    },
    "/api/v3/webhook-secret" : {
      "get" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Fetch Webhook Secret",
        "description" : "Gets your Webhook Secret if it exists. Otherwise returns an error.\n",
        "operationId" : "fetchWebhookSecret",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookSecret"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Create Webhook Secret",
        "description" : "Creates a Webhook Secret to use with the Impilo Platform with the provides `secret`. The secret will be passed along as a header with\nWebhooks sent from Impilo.\n\nReturns an error if you already have a Webhook secret created.\n***\nFor more information see the [WebhookSecret Model](/resources/models#schema_WebhookSecret).",
        "operationId" : "createWebhookSecret",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebhookSecret"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookSecret"
                }
              }
            }
          }
        },
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_WebhookSecret"
        }
      },
      "delete" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Delete Webhook Secret",
        "description" : "Deletes your Webhook secret if it exists.\n\nReturns an error if you don't have a secret configured.\n",
        "operationId" : "deleteWebhookSecret",
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "patch" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Update Webhook Secret",
        "description" : "Updates your Webhook Secret if it exists. Requires a `secret` parameter.\n\nReturns an error if you don't have a secret configured.\n***\nFor more information see the [WebhookSecret Model](/resources/models#schema_WebhookSecret).",
        "operationId" : "updateWebhookSecret",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebhookSecret"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookSecret"
                }
              }
            }
          }
        },
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_WebhookSecret"
        }
      }
    },
    "/api/v3/webhook/logs" : {
      "get" : {
        "tags" : [ "Webhooks" ],
        "summary" : "List Webhook Logs",
        "description" : "Retrieves a paginated list of webhook logs that record historical attempts to send webhook payloads to a customer's servers. This endpoint allows filtering logs based on webhook type, creation timestamp range, retry attempts range, last response status, last retry timestamp range, and pagination settings. It is useful for auditing and debugging purposes.",
        "operationId" : "listWebhookLogs",
        "parameters" : [ {
          "name" : "webhookType",
          "in" : "query",
          "description" : "The webhook type",
          "schema" : {
            "$ref" : "#/components/schemas/WebhookType"
          }
        }, {
          "name" : "retryAttemptsMin",
          "in" : "query",
          "description" : "The minimum retry attempts",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "retryAttemptsMax",
          "in" : "query",
          "description" : "The maximum retry attempts",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "lastResponseStatus",
          "in" : "query",
          "description" : "The last response status",
          "schema" : {
            "type" : "array",
            "items" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        }, {
          "name" : "startLastRetryTimestamp",
          "in" : "query",
          "description" : "The minimum last retry timestamp",
          "schema" : {
            "$ref" : "#/components/schemas/Instant"
          }
        }, {
          "name" : "endLastRetryTimestamp",
          "in" : "query",
          "description" : "The maximum last retry timestamp",
          "schema" : {
            "$ref" : "#/components/schemas/Instant"
          }
        }, {
          "name" : "startTimestamp",
          "in" : "query",
          "description" : "The minimum timestamp",
          "schema" : {
            "$ref" : "#/components/schemas/Instant"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "description" : "The maximum timestamp (exclusive)",
          "schema" : {
            "$ref" : "#/components/schemas/Instant"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The number of the page to retrieve (1 based)",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "The number of items per page",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageWebhookLog"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/webhook/{webhookId}" : {
      "get" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Fetch Webhook",
        "description" : "This endpoint retrieves a particular Webhook of a customer by the ID provided in the path.\n",
        "operationId" : "fetchWebhook",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Webhook"
                },
                "examples" : {
                  "fetchWebhooksResponse" : {
                    "value" : {
                      "id" : 123,
                      "type" : "order.status",
                      "url" : "https://impilo.health"
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "fetchWebhooksResponse"
      },
      "delete" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Delete Webhook",
        "description" : "This endpoint deletes the specified Webhook from the customer's subscriptions.\n",
        "operationId" : "deleteWebhook",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "patch" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Patch Webhook",
        "description" : "This endpoint updates the specified Webhook with a new URL provided in the request body.\n> Note: The provided URL must be different than the existing URL of the webhook or a 400 response will be returned.\n***\nFor more information see the [Webhook Model](/resources/models#schema_Webhook).",
        "operationId" : "patchWebhook",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Webhook"
              },
              "examples" : {
                "updateWebhookRequestExample" : {
                  "value" : {
                    "url" : "https://impilo.health/new-url"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Webhook"
                },
                "examples" : {
                  "updateWebhookResponseExample" : {
                    "value" : {
                      "id" : 123,
                      "type" : "order.status",
                      "url" : "https://impilo.health/new-url"
                    }
                  }
                }
              }
            }
          }
        },
        "x-request-example" : "updateWebhookRequestExample",
        "x-response-example" : "updateWebhookResponseExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_Webhook"
        }
      }
    },
    "/api/v3/blood-glucose-reading" : {
      "get" : {
        "tags" : [ "Readings - Blood Glucose" ],
        "summary" : "List Blood Glucose Readings",
        "description" : "This endpoint returns a paginated list of Blood Glucose Readings for the patients associated with a Customer.\n\nFiltering can be done by any of the following query parameters:\n- page (integer) -- The page number of the content returned.\n- size (integer) -- The size of the page of content returned.\n- patientId (long) -- The patient's Impilo identifier.\n- externalId (string) -- Any external identifier associated with this patient.\n- startTimestamp (string) -- An ISO-formatted string with an applicable timezone, such as 2024-01-25T13:50:50.0Z\n- endTimestamp (string) -- An ISO-formatted string with an applicable timezone, such as 2024-01-27T13:50:50.0Z\n",
        "operationId" : "listBloodGlucoseReadings",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "patientId",
          "in" : "query",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "externalIdentifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTimestamp",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageBloodGlucoseReading"
                },
                "examples" : {
                  "bloodGlucoseReadingPagedResponseExample" : {
                    "value" : {
                      "content" : [ {
                        "id" : 42,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "device" : {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        },
                        "readingTimestamp" : "2024-07-04T00:00:00Z",
                        "glucose" : 88,
                        "glucoseUnit" : "mgdl",
                        "manual" : false,
                        "beforeMeal" : false,
                        "afterMeal" : false
                      }, {
                        "id" : 43,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "device" : {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        },
                        "readingTimestamp" : "2024-07-04T00:00:00Z",
                        "glucose" : 88,
                        "glucoseUnit" : "mgdl",
                        "manual" : false,
                        "beforeMeal" : false,
                        "afterMeal" : false
                      } ],
                      "page" : 1,
                      "size" : 2,
                      "total" : 4,
                      "first" : true,
                      "last" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "bloodGlucoseReadingPagedResponseExample"
      },
      "post" : {
        "tags" : [ "Readings - Blood Glucose" ],
        "summary" : "Record Blood Glucose Reading",
        "description" : "Records a blood glucose reading based on the provided request. Either a device ID, device identifier, or patient ID is required.\n***\nFor more information see the [BloodGlucoseReadingRequest Model](/resources/models#schema_BloodGlucoseReadingRequest).",
        "operationId" : "recordBloodGlucoseReading",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BloodGlucoseReadingRequest"
              },
              "examples" : {
                "device" : {
                  "value" : {
                    "deviceId" : 599,
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "glucose" : 88,
                    "manual" : false,
                    "beforeMeal" : false,
                    "afterMeal" : false
                  }
                },
                "device-identifier" : {
                  "value" : {
                    "deviceIdentifier" : "354833969951611",
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "glucose" : 88,
                    "manual" : false,
                    "beforeMeal" : false,
                    "afterMeal" : false
                  }
                },
                "patient" : {
                  "value" : {
                    "patientId" : 456,
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "glucose" : 88,
                    "manual" : false,
                    "beforeMeal" : false,
                    "afterMeal" : false
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BloodGlucoseReading"
                },
                "examples" : {
                  "bloodGlucoseReadingResponseExample" : {
                    "value" : {
                      "id" : 42,
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "item" : {
                        "id" : 791,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001"
                      },
                      "device" : {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      },
                      "readingTimestamp" : "2024-07-04T00:00:00Z",
                      "glucose" : 88,
                      "glucoseUnit" : "mgdl",
                      "manual" : false,
                      "beforeMeal" : false,
                      "afterMeal" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-request-example-device" : "bloodGlucoseReadingRequestDeviceExample",
        "x-request-example-device-identifier" : "bloodGlucoseReadingRequestDeviceIdentifierExample",
        "x-request-example-patient" : "bloodGlucoseReadingRequestPatientExample",
        "x-response-example" : "bloodGlucoseReadingResponseExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_BloodGlucoseReadingRequest"
        }
      }
    },
    "/api/v3/blood-glucose-reading/export" : {
      "get" : {
        "tags" : [ "Readings - Blood Glucose" ],
        "summary" : "Export Blood Glucose Readings",
        "description" : "Exports blood glucose readings for a specified patient within a given date range as either an Excel spreadsheet or a CSV file. This endpoint allows clients to specify a patient ID, and optional start and end dates to filter the readings by date. If no patient ID is provided, readings for all patients may be exported depending on the implementation. The 'excel' parameter determines the format of the export: if true, the data is returned in Excel format; otherwise, it is returned as CSV. The response is directly streamed to the client as either 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' for Excel or 'text/csv' for CSV format.\n",
        "operationId" : "exportBloodGlucoseReadings",
        "parameters" : [ {
          "name" : "excel",
          "in" : "query",
          "description" : "Determines the format of the export: if true, the data is returned in Excel format; otherwise, it is returned as CSV.",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "name" : "patientId",
          "in" : "query",
          "description" : "The ID of the patient whose blood glucose readings are to be exported. If not provided, readings for all patients may be exported.",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "The start date for filtering blood glucose readings. Only readings after or equal to this date will be included.",
          "schema" : {
            "$ref" : "#/components/schemas/Instant"
          }
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "The end date for filtering blood glucose readings. Only readings before this date will be included.",
          "schema" : {
            "$ref" : "#/components/schemas/Instant"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              },
              "text/csv" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/blood-glucose-reading/{readingId}" : {
      "get" : {
        "tags" : [ "Readings - Blood Glucose" ],
        "summary" : "Fetch Blood Glucose Reading",
        "description" : "This endpoint returns a specific blood glucose reading based on the reading identifier provided in the path.\n",
        "operationId" : "fetchBloodGlucoseReading",
        "parameters" : [ {
          "name" : "readingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BloodGlucoseReading"
                },
                "examples" : {
                  "bloodGlucoseReadingResponseExample" : {
                    "value" : {
                      "id" : 42,
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "item" : {
                        "id" : 791,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001"
                      },
                      "device" : {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      },
                      "readingTimestamp" : "2024-07-04T00:00:00Z",
                      "glucose" : 88,
                      "glucoseUnit" : "mgdl",
                      "manual" : false,
                      "beforeMeal" : false,
                      "afterMeal" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "bloodGlucoseReadingResponseExample"
      }
    },
    "/api/v3/blood-oxygen-reading" : {
      "get" : {
        "tags" : [ "Readings - Blood Oxygen" ],
        "summary" : "List Blood Oxygen Readings",
        "description" : "Retrieves a paginated list of blood oxygen readings from the Impilo platform. Optional parameters can be used to filter the results by page number, page size, patient ID, external ID, start timestamp, and end timestamp.\n",
        "operationId" : "listBloodOxygenReadings",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "patientId",
          "in" : "query",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "externalIdentifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTimestamp",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageBloodOxygenReading"
                },
                "examples" : {
                  "bloodOxygenReadingPagedResponseExample" : {
                    "value" : {
                      "content" : [ {
                        "id" : 42,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "device" : {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        },
                        "readingTimestamp" : "2024-07-04T00:00:00Z",
                        "bloodOxygen" : 95,
                        "bloodOxygenUnit" : "spo2",
                        "heartRate" : 90,
                        "heartRateUnit" : "bpm",
                        "manual" : false
                      }, {
                        "id" : 43,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "device" : {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        },
                        "readingTimestamp" : "2024-07-04T00:00:00Z",
                        "bloodOxygen" : 95,
                        "bloodOxygenUnit" : "spo2",
                        "heartRate" : 90,
                        "heartRateUnit" : "bpm",
                        "manual" : false
                      } ],
                      "page" : 1,
                      "size" : 2,
                      "total" : 4,
                      "first" : true,
                      "last" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "bloodOxygenReadingPagedResponseExample"
      },
      "post" : {
        "tags" : [ "Readings - Blood Oxygen" ],
        "summary" : "Record Blood Oxygen Reading",
        "description" : "Records a blood oxygen reading based on the provided request. Either a device ID, device identifier, or patient ID is required.\n***\nFor more information see the [BloodOxygenReadingRequest Model](/resources/models#schema_BloodOxygenReadingRequest).",
        "operationId" : "recordBloodOxygenReading",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BloodOxygenReadingRequest"
              },
              "examples" : {
                "device" : {
                  "value" : {
                    "deviceId" : 599,
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "bloodOxygen" : 88,
                    "heartRate" : 77,
                    "manual" : false
                  }
                },
                "device-identifier" : {
                  "value" : {
                    "deviceIdentifier" : "354833969951611",
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "bloodOxygen" : 88,
                    "heartRate" : 77,
                    "manual" : false
                  }
                },
                "patient" : {
                  "value" : {
                    "patientId" : 456,
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "bloodOxygen" : 88,
                    "heartRate" : 77,
                    "manual" : false
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BloodOxygenReading"
                },
                "examples" : {
                  "bloodOxygenReadingResponseExample" : {
                    "value" : {
                      "id" : 42,
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "item" : {
                        "id" : 791,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001"
                      },
                      "device" : {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      },
                      "readingTimestamp" : "2024-07-04T00:00:00Z",
                      "bloodOxygen" : 95,
                      "bloodOxygenUnit" : "spo2",
                      "heartRate" : 90,
                      "heartRateUnit" : "bpm",
                      "manual" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-request-example-device" : "bloodOxygenReadingRequestDeviceExample",
        "x-request-example-device-identifier" : "bloodOxygenReadingRequestDeviceIdentifierExample",
        "x-request-example-patient" : "bloodOxygenReadingRequestPatientExample",
        "x-response-example" : "bloodOxygenReadingResponseExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_BloodOxygenReadingRequest"
        }
      }
    },
    "/api/v3/blood-oxygen-reading/export" : {
      "get" : {
        "tags" : [ "Readings - Blood Oxygen" ],
        "summary" : "Export Blood Oxygen Readings",
        "description" : "Exports blood oxygen readings for a specified patient within a given date range as either an Excel spreadsheet or a CSV file. This endpoint facilitates the retrieval of blood oxygen data by allowing the specification of a patient ID and optional start and end dates to narrow down the readings. If no patient ID is specified, the service may return readings for all patients, contingent on the service's implementation details. The 'excel' parameter controls the output format: if set to true, the data is delivered in Excel format; if false, it is delivered in CSV format. The data is streamed directly to the client and can be consumed in the specified format.\n",
        "operationId" : "exportBloodOxygenReadings",
        "parameters" : [ {
          "name" : "excel",
          "in" : "query",
          "description" : "Determines the format of the export: if true, the data is returned in Excel format; otherwise, it is returned as CSV.",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "name" : "patientId",
          "in" : "query",
          "description" : "The ID of the patient whose blood oxygen readings are to be exported. If not provided, readings for all patients may be exported.",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "The start date for filtering blood oxygen readings. Only readings after or equal to this date will be included.",
          "schema" : {
            "$ref" : "#/components/schemas/Instant"
          }
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "The end date for filtering blood oxygen readings. Only readings before this date will be included.",
          "schema" : {
            "$ref" : "#/components/schemas/Instant"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              },
              "text/csv" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/blood-oxygen-reading/{readingId}" : {
      "get" : {
        "tags" : [ "Readings - Blood Oxygen" ],
        "summary" : "Fetch Blood Oxygen Reading",
        "description" : "Fetches a specific Impilo blood oxygen reading by its ID.\n",
        "operationId" : "fetchBloodOxygenReading",
        "parameters" : [ {
          "name" : "readingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BloodOxygenReading"
                },
                "examples" : {
                  "bloodOxygenReadingResponseExample" : {
                    "value" : {
                      "id" : 42,
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "item" : {
                        "id" : 791,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001"
                      },
                      "device" : {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      },
                      "readingTimestamp" : "2024-07-04T00:00:00Z",
                      "bloodOxygen" : 95,
                      "bloodOxygenUnit" : "spo2",
                      "heartRate" : 90,
                      "heartRateUnit" : "bpm",
                      "manual" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "bloodOxygenReadingResponseExample"
      }
    },
    "/api/v3/blood-pressure-reading" : {
      "get" : {
        "tags" : [ "Readings - Blood Pressure" ],
        "summary" : "List Blood Pressure Readings",
        "description" : "Retrieves a paginated list of blood pressure readings from the Impilo platform. Optional parameters can be used to filter the results by page number, page size, patient ID, external ID, start timestamp, and end timestamp.",
        "operationId" : "listBloodPressureReadings",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "patientId",
          "in" : "query",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "externalIdentifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTimestamp",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageBloodPressureReading"
                },
                "examples" : {
                  "bloodPressureReadingPagedResponseExample" : {
                    "value" : {
                      "content" : [ {
                        "id" : 42,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "device" : {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        },
                        "readingTimestamp" : "2024-07-04T00:00:00Z",
                        "systolic" : 120,
                        "systolicUnit" : "mmhg",
                        "diastolic" : 80,
                        "diastolicUnit" : "mmhg",
                        "heartRate" : 70,
                        "heartRateUnit" : "bpm",
                        "manual" : false
                      }, {
                        "id" : 43,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "device" : {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        },
                        "readingTimestamp" : "2024-07-04T00:00:00Z",
                        "systolic" : 120,
                        "systolicUnit" : "mmhg",
                        "diastolic" : 80,
                        "diastolicUnit" : "mmhg",
                        "heartRate" : 70,
                        "heartRateUnit" : "bpm",
                        "manual" : false
                      } ],
                      "page" : 1,
                      "size" : 2,
                      "total" : 4,
                      "first" : true,
                      "last" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "bloodPressureReadingPagedResponseExample"
      },
      "post" : {
        "tags" : [ "Readings - Blood Pressure" ],
        "summary" : "Record Blood Pressure Reading",
        "description" : "Records a blood pressure reading based on the provided request. Either a device ID, device identifier, or patient ID is required.\n***\nFor more information see the [BloodPressureReadingRequest Model](/resources/models#schema_BloodPressureReadingRequest).",
        "operationId" : "recordBloodPressureReading",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BloodPressureReadingRequest"
              },
              "examples" : {
                "device" : {
                  "value" : {
                    "deviceId" : 599,
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "systolic" : 132,
                    "diastolic" : 72,
                    "heartRate" : 78,
                    "manual" : false
                  }
                },
                "device-identifier" : {
                  "value" : {
                    "deviceIdentifier" : "354833969951611",
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "systolic" : 132,
                    "diastolic" : 72,
                    "heartRate" : 78,
                    "manual" : false
                  }
                },
                "patient" : {
                  "value" : {
                    "patientId" : 456,
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "systolic" : 132,
                    "diastolic" : 72,
                    "heartRate" : 78,
                    "manual" : false
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BloodPressureReading"
                },
                "examples" : {
                  "bloodPressureReadingResponseExample" : {
                    "value" : {
                      "id" : 42,
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "item" : {
                        "id" : 791,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001"
                      },
                      "device" : {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      },
                      "readingTimestamp" : "2024-07-04T00:00:00Z",
                      "systolic" : 120,
                      "systolicUnit" : "mmhg",
                      "diastolic" : 80,
                      "diastolicUnit" : "mmhg",
                      "heartRate" : 70,
                      "heartRateUnit" : "bpm",
                      "manual" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-request-example-device" : "bloodPressureReadingRequestDeviceExample",
        "x-request-example-device-identifier" : "bloodPressureReadingRequestDeviceIdentifierExample",
        "x-request-example-patient" : "bloodPressureReadingRequestPatientExample",
        "x-response-example" : "bloodPressureReadingResponseExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_BloodPressureReadingRequest"
        }
      }
    },
    "/api/v3/blood-pressure-reading/export" : {
      "get" : {
        "tags" : [ "Readings - Blood Pressure" ],
        "summary" : "Export Blood Pressure Readings",
        "description" : "Provides an export of blood pressure readings for a specified patient over a selected date range, available in either Excel or CSV format. Users can specify a patient ID to retrieve data for a particular individual, or leave the parameter empty to potentially export data for all patients, depending on service implementation. Optional start and end date parameters allow for filtering the data by the desired timeframe. The 'excel' flag determines the format of the output; when true, the data is exported in Excel format, otherwise, it is provided as a CSV file. The response consists of a direct stream of the chosen data format to the client.\n",
        "operationId" : "exportBloodPressureReadings",
        "parameters" : [ {
          "name" : "excel",
          "in" : "query",
          "description" : "Determines the format of the export: if true, the data is returned in Excel format; otherwise, it is returned as CSV.",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "name" : "patientId",
          "in" : "query",
          "description" : "The ID of the patient whose blood pressure readings are to be exported. If not provided, readings for all patients may be exported.",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "The start date for filtering blood pressure readings. Only readings after or equal to this date will be included.",
          "schema" : {
            "$ref" : "#/components/schemas/Instant"
          }
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "The end date for filtering blood pressure readings. Only readings before this date will be included.",
          "schema" : {
            "$ref" : "#/components/schemas/Instant"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              },
              "text/csv" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/blood-pressure-reading/{readingId}" : {
      "get" : {
        "tags" : [ "Readings - Blood Pressure" ],
        "summary" : "Fetch Blood Pressure Reading",
        "description" : "Fetches a specific Impilo blood pressure reading by its ID.",
        "operationId" : "fetchBloodPressureReading",
        "parameters" : [ {
          "name" : "readingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BloodPressureReading"
                },
                "examples" : {
                  "bloodPressureReadingResponseExample" : {
                    "value" : {
                      "id" : 42,
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "item" : {
                        "id" : 791,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001"
                      },
                      "device" : {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      },
                      "readingTimestamp" : "2024-07-04T00:00:00Z",
                      "systolic" : 120,
                      "systolicUnit" : "mmhg",
                      "diastolic" : 80,
                      "diastolicUnit" : "mmhg",
                      "heartRate" : 70,
                      "heartRateUnit" : "bpm",
                      "manual" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "bloodPressureReadingResponseExample"
      }
    },
    "/api/v3/heart-rate-reading" : {
      "get" : {
        "tags" : [ "Readings - Heart Rate" ],
        "summary" : "List Heart Rate Readings",
        "description" : "Retrieves a paginated list of heart rate readings from the Impilo platform.",
        "operationId" : "listHeartRateReadings",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "patientId",
          "in" : "query",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "externalIdentifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTimestamp",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/Instant"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/Instant"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageHeartRateReading"
                },
                "examples" : {
                  "heartRateReadingPagedResponseExample" : {
                    "value" : {
                      "content" : [ {
                        "id" : 42,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "device" : {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        },
                        "readingTimestamp" : "2024-07-04T00:00:00Z",
                        "manual" : false,
                        "heartRate" : 70
                      }, {
                        "id" : 43,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "device" : {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        },
                        "readingTimestamp" : "2024-07-04T00:00:00Z",
                        "manual" : false,
                        "heartRate" : 70
                      } ],
                      "page" : 1,
                      "size" : 2,
                      "total" : 4,
                      "first" : true,
                      "last" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "heartRateReadingPagedResponseExample"
      },
      "post" : {
        "tags" : [ "Readings - Heart Rate" ],
        "summary" : "Record Heart Rate Reading",
        "description" : "Records a heart rate reading based on the provided request. Either a device ID, device identifier, or patient ID is required.\n***\nFor more information see the [HeartRateReadingRequest Model](/resources/models#schema_HeartRateReadingRequest).",
        "operationId" : "recordHeartRateReading",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HeartRateReadingRequest"
              },
              "examples" : {
                "heartRateReadingRequestExample" : {
                  "value" : {
                    "deviceId" : 599,
                    "deviceIdentifier" : "354833969951611",
                    "patientId" : 456,
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "manual" : false,
                    "heartRate" : 70
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HeartRateReading"
                },
                "examples" : {
                  "heartRateReadingExample" : {
                    "value" : {
                      "id" : 42,
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "item" : {
                        "id" : 791,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001"
                      },
                      "device" : {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      },
                      "readingTimestamp" : "2024-07-04T00:00:00Z",
                      "manual" : false,
                      "heartRate" : 70
                    }
                  }
                }
              }
            }
          }
        },
        "x-request-example" : "heartRateReadingRequestExample",
        "x-response-example" : "heartRateReadingExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_HeartRateReadingRequest"
        }
      }
    },
    "/api/v3/heart-rate-reading/{readingId}" : {
      "get" : {
        "tags" : [ "Readings - Heart Rate" ],
        "summary" : "Fetch Heart Rate Reading",
        "description" : "Fetches a specific Impilo heart rate reading by its ID.",
        "operationId" : "fetchHeartRateReading",
        "parameters" : [ {
          "name" : "readingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HeartRateReading"
                },
                "examples" : {
                  "heartRateReadingExample" : {
                    "value" : {
                      "id" : 42,
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "item" : {
                        "id" : 791,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001"
                      },
                      "device" : {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      },
                      "readingTimestamp" : "2024-07-04T00:00:00Z",
                      "manual" : false,
                      "heartRate" : 70
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "heartRateReadingExample"
      }
    },
    "/api/v3/heart-rate-variability-reading" : {
      "get" : {
        "tags" : [ "Readings - Heart Rate Variability" ],
        "summary" : "List Heart Rate Variability Readings",
        "description" : "Retrieves a paginated list of heart rate variability readings from the Impilo platform.",
        "operationId" : "listHeartRateVariabilityReadings",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "patientId",
          "in" : "query",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "externalIdentifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTimestamp",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/Instant"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/Instant"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageHeartRateVariabilityReading"
                },
                "examples" : {
                  "heartRateVariabilityReadingPagedResponseExample" : {
                    "value" : {
                      "content" : [ {
                        "id" : 42,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "device" : {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        },
                        "readingTimestamp" : "2024-07-04T00:00:00Z",
                        "manual" : false,
                        "heartRate" : 70,
                        "heartRateVariability" : 10.0,
                        "heartRateVariabilityDuration" : 100,
                        "heartRateVariabilityAlgorithmType" : "sdann"
                      }, {
                        "id" : 43,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "device" : {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        },
                        "readingTimestamp" : "2024-07-04T00:00:00Z",
                        "manual" : false,
                        "heartRate" : 70,
                        "heartRateVariability" : 10.0,
                        "heartRateVariabilityDuration" : 100,
                        "heartRateVariabilityAlgorithmType" : "sdann"
                      } ],
                      "page" : 1,
                      "size" : 2,
                      "total" : 4,
                      "first" : true,
                      "last" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "heartRateVariabilityReadingPagedResponseExample"
      },
      "post" : {
        "tags" : [ "Readings - Heart Rate Variability" ],
        "summary" : "Record Heart Rate Variability Reading",
        "description" : "Records a heart rate variability reading based on the provided request. Either a device ID, device identifier, or patient ID is required.\n***\nFor more information see the [HeartRateVariabilityReadingRequest Model](/resources/models#schema_HeartRateVariabilityReadingRequest).",
        "operationId" : "recordHeartRateVariabilityReading",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HeartRateVariabilityReadingRequest"
              },
              "examples" : {
                "heartRateVariabilityReadingRequestExample" : {
                  "value" : {
                    "deviceId" : 599,
                    "deviceIdentifier" : "354833969951611",
                    "patientId" : 456,
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "manual" : false,
                    "heartRate" : 70,
                    "heartRateVariability" : 10.0,
                    "heartRateVariabilityDuration" : 100,
                    "heartRateVariabilityAlgorithmType" : "sdann"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HeartRateVariabilityReading"
                },
                "examples" : {
                  "heartRateVariabilityReadingExample" : {
                    "value" : {
                      "id" : 42,
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "item" : {
                        "id" : 791,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001"
                      },
                      "device" : {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      },
                      "readingTimestamp" : "2024-07-04T00:00:00Z",
                      "manual" : false,
                      "heartRate" : 70,
                      "heartRateVariability" : 10.0,
                      "heartRateVariabilityDuration" : 100,
                      "heartRateVariabilityAlgorithmType" : "sdann"
                    }
                  }
                }
              }
            }
          }
        },
        "x-request-example" : "heartRateVariabilityReadingRequestExample",
        "x-response-example" : "heartRateVariabilityReadingExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_HeartRateVariabilityReadingRequest"
        }
      }
    },
    "/api/v3/heart-rate-variability-reading/{readingId}" : {
      "get" : {
        "tags" : [ "Readings - Heart Rate Variability" ],
        "summary" : "Fetch Heart Rate Variability Reading",
        "description" : "Fetches a specific Impilo heart rate variability reading by its ID.",
        "operationId" : "fetchHeartRateVariabilityReading",
        "parameters" : [ {
          "name" : "readingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HeartRateVariabilityReading"
                },
                "examples" : {
                  "heartRateVariabilityReadingPagedResponseExample" : {
                    "value" : {
                      "content" : [ {
                        "id" : 42,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "device" : {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        },
                        "readingTimestamp" : "2024-07-04T00:00:00Z",
                        "manual" : false,
                        "heartRate" : 70,
                        "heartRateVariability" : 10.0,
                        "heartRateVariabilityDuration" : 100,
                        "heartRateVariabilityAlgorithmType" : "sdann"
                      }, {
                        "id" : 43,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "device" : {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        },
                        "readingTimestamp" : "2024-07-04T00:00:00Z",
                        "manual" : false,
                        "heartRate" : 70,
                        "heartRateVariability" : 10.0,
                        "heartRateVariabilityDuration" : 100,
                        "heartRateVariabilityAlgorithmType" : "sdann"
                      } ],
                      "page" : 1,
                      "size" : 2,
                      "total" : 4,
                      "first" : true,
                      "last" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "heartRateVariabilityReadingPagedResponseExample"
      }
    },
    "/api/v3/peak-flow-reading" : {
      "get" : {
        "tags" : [ "Readings - Peak Flow" ],
        "summary" : "List Peak Flow Readings",
        "description" : "Retrieves a paginated list of peak flow readings from the Impilo platform. Optional parameters can be used to filter the results by page number, page size, patient ID, external ID, start timestamp, and end timestamp.",
        "operationId" : "listPeakFlowReadings",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "patientId",
          "in" : "query",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "externalIdentifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTimestamp",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePeakFlowReading"
                },
                "examples" : {
                  "peakFlowReadingPagedResponseExample" : {
                    "value" : {
                      "content" : [ {
                        "id" : 42,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "device" : {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        },
                        "readingTimestamp" : "2024-07-04T00:00:00Z",
                        "manual" : false,
                        "deviceTimeZoneOffset" : 0,
                        "patientTimeZoneOffset" : 0,
                        "peakExpiratoryFlow" : 100.3,
                        "forcedExpiratoryVolume" : 0.62,
                        "peakExpiratoryFlowUnit" : "lpm",
                        "forcedExpiratoryVolumeUnit" : "lps"
                      }, {
                        "id" : 43,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "device" : {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        },
                        "readingTimestamp" : "2024-07-04T00:00:00Z",
                        "manual" : false,
                        "deviceTimeZoneOffset" : 0,
                        "patientTimeZoneOffset" : 0,
                        "peakExpiratoryFlow" : 100.3,
                        "forcedExpiratoryVolume" : 0.62,
                        "peakExpiratoryFlowUnit" : "lpm",
                        "forcedExpiratoryVolumeUnit" : "lps"
                      } ],
                      "page" : 1,
                      "size" : 2,
                      "total" : 4,
                      "first" : true,
                      "last" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "peakFlowReadingPagedResponseExample"
      },
      "post" : {
        "tags" : [ "Readings - Peak Flow" ],
        "summary" : "Record Peak Flow Reading",
        "description" : "Records a peak flow reading based on the provided request. Either a device ID, device identifier, or patient ID is required.\n***\nFor more information see the [PeakFlowReadingRequest Model](/resources/models#schema_PeakFlowReadingRequest).",
        "operationId" : "recordPeakFlowReading",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PeakFlowReadingRequest"
              },
              "examples" : {
                "device" : {
                  "value" : {
                    "deviceId" : 599,
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "peakExpiratoryFlow" : 132.0,
                    "forcedExpiratoryVolumeInOneSecond" : 0.89,
                    "manual" : false
                  }
                },
                "device-identifier" : {
                  "value" : {
                    "deviceIdentifier" : "354833969951611",
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "peakExpiratoryFlow" : 132.0,
                    "forcedExpiratoryVolumeInOneSecond" : 0.89,
                    "manual" : false
                  }
                },
                "patient" : {
                  "value" : {
                    "patientId" : 456,
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "peakExpiratoryFlow" : 132.0,
                    "forcedExpiratoryVolumeInOneSecond" : 0.89,
                    "manual" : false
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PeakFlowReading"
                },
                "examples" : {
                  "peakFlowReadingResponseExample" : {
                    "value" : {
                      "id" : 42,
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "item" : {
                        "id" : 791,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001"
                      },
                      "device" : {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      },
                      "readingTimestamp" : "2024-07-04T00:00:00Z",
                      "manual" : false,
                      "deviceTimeZoneOffset" : 0,
                      "patientTimeZoneOffset" : 0,
                      "peakExpiratoryFlow" : 100.3,
                      "forcedExpiratoryVolume" : 0.62,
                      "peakExpiratoryFlowUnit" : "lpm",
                      "forcedExpiratoryVolumeUnit" : "lps"
                    }
                  }
                }
              }
            }
          }
        },
        "x-request-example-device" : "peakFlowReadingRequestDeviceExample",
        "x-request-example-device-identifier" : "peakFlowReadingRequestDeviceIdentifierExample",
        "x-request-example-patient" : "peakFlowReadingRequestPatientExample",
        "x-response-example" : "peakFlowReadingResponseExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_PeakFlowReadingRequest"
        }
      }
    },
    "/api/v3/peak-flow-reading/{readingId}" : {
      "get" : {
        "tags" : [ "Readings - Peak Flow" ],
        "summary" : "Fetch Peak Flow Reading",
        "description" : "Fetches a specific Impilo peak flow reading by its ID.",
        "operationId" : "fetchPeakFlowReading",
        "parameters" : [ {
          "name" : "readingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PeakFlowReading"
                },
                "examples" : {
                  "peakFlowReadingResponseExample" : {
                    "value" : {
                      "id" : 42,
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "item" : {
                        "id" : 791,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001"
                      },
                      "device" : {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      },
                      "readingTimestamp" : "2024-07-04T00:00:00Z",
                      "manual" : false,
                      "deviceTimeZoneOffset" : 0,
                      "patientTimeZoneOffset" : 0,
                      "peakExpiratoryFlow" : 100.3,
                      "forcedExpiratoryVolume" : 0.62,
                      "peakExpiratoryFlowUnit" : "lpm",
                      "forcedExpiratoryVolumeUnit" : "lps"
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "peakFlowReadingResponseExample"
      }
    },
    "/api/v3/sleep-mat-activity-reading" : {
      "get" : {
        "tags" : [ "Readings - Sleep Mat Activity" ],
        "summary" : "List Sleep Mat Activity Readings",
        "description" : "Retrieves a paginated list of sleep mat activity readings from the Impilo platform. Optional parameters can be used to filter the results by page number, page size, patient ID, external ID, start timestamp, and end timestamp.",
        "operationId" : "listSleepMatActivityReadings",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "patientId",
          "in" : "query",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "externalIdentifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTimestamp",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageSleepMatActivityReading"
                },
                "examples" : {
                  "sleepMatActivityReadingPagedResponseExample" : {
                    "value" : {
                      "content" : [ {
                        "id" : 42,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "device" : {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        },
                        "readingTimestamp" : "2024-07-04T00:00:00Z",
                        "manual" : false,
                        "deviceTimeZoneOffset" : 0,
                        "patientTimeZoneOffset" : 0,
                        "respiration" : 10,
                        "heartRate" : 60,
                        "bodyTurnOver" : 5,
                        "duration" : "20:00~00:00",
                        "bedTime" : [ "2022-06-30/20:01", "2022-06-30/20:55" ],
                        "getUpTime" : [ "2022-07-01/06:00", "2022-07-01/06:30" ]
                      }, {
                        "id" : 43,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "device" : {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        },
                        "readingTimestamp" : "2024-07-04T00:00:00Z",
                        "manual" : false,
                        "deviceTimeZoneOffset" : 0,
                        "patientTimeZoneOffset" : 0,
                        "respiration" : 10,
                        "heartRate" : 60,
                        "bodyTurnOver" : 5,
                        "duration" : "20:00~00:00",
                        "bedTime" : [ "2022-06-30/20:01", "2022-06-30/20:55" ],
                        "getUpTime" : [ "2022-07-01/06:00", "2022-07-01/06:30" ]
                      } ],
                      "page" : 1,
                      "size" : 2,
                      "total" : 4,
                      "first" : true,
                      "last" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "sleepMatActivityReadingPagedResponseExample"
      },
      "post" : {
        "tags" : [ "Readings - Sleep Mat Activity" ],
        "summary" : "Record Sleep Mat Activity Reading",
        "description" : "Records a sleep mat activity reading based on the provided request. Either a device ID, device identifier, or patient ID is required.\n***\nFor more information see the [SleepMatActivityReadingRequest Model](/resources/models#schema_SleepMatActivityReadingRequest).",
        "operationId" : "recordSleepMatActivityReading",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SleepMatActivityReadingRequest"
              },
              "examples" : {
                "device" : {
                  "value" : {
                    "deviceId" : 599,
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "respiration" : 10,
                    "heartRate" : 60,
                    "bodyTurnOver" : 5,
                    "duration" : "20:00~00:00",
                    "bedTime" : [ "2022-06-30/20:01", "2022-06-30/20:55" ],
                    "manual" : false,
                    "getUpTime" : [ "2022-07-01/06:00", "2022-07-01/06:30" ]
                  }
                },
                "device-identifier" : {
                  "value" : {
                    "deviceIdentifier" : "354833969951611",
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "respiration" : 10,
                    "heartRate" : 60,
                    "bodyTurnOver" : 5,
                    "duration" : "20:00~00:00",
                    "bedTime" : [ "2022-06-30/20:01", "2022-06-30/20:55" ],
                    "manual" : false,
                    "getUpTime" : [ "2022-07-01/06:00", "2022-07-01/06:30" ]
                  }
                },
                "patient" : {
                  "value" : {
                    "patientId" : 456,
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "respiration" : 10,
                    "heartRate" : 60,
                    "bodyTurnOver" : 5,
                    "duration" : "20:00~00:00",
                    "bedTime" : [ "2022-06-30/20:01", "2022-06-30/20:55" ],
                    "manual" : false,
                    "getUpTime" : [ "2022-07-01/06:00", "2022-07-01/06:30" ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SleepMatActivityReading"
                },
                "examples" : {
                  "sleepMatActivityReadingResponseExample" : {
                    "value" : {
                      "id" : 42,
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "item" : {
                        "id" : 791,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001"
                      },
                      "device" : {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      },
                      "readingTimestamp" : "2024-07-04T00:00:00Z",
                      "manual" : false,
                      "deviceTimeZoneOffset" : 0,
                      "patientTimeZoneOffset" : 0,
                      "respiration" : 10,
                      "heartRate" : 60,
                      "bodyTurnOver" : 5,
                      "duration" : "20:00~00:00",
                      "bedTime" : [ "2022-06-30/20:01", "2022-06-30/20:55" ],
                      "getUpTime" : [ "2022-07-01/06:00", "2022-07-01/06:30" ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-request-example-device" : "sleepMatActivityReadingRequestDeviceExample",
        "x-request-example-device-identifier" : "sleepMatActivityReadingRequestDeviceIdentifierExample",
        "x-request-example-patient" : "sleepMatActivityReadingRequestPatientExample",
        "x-response-example" : "sleepMatActivityReadingResponseExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_SleepMatActivityReadingRequest"
        }
      }
    },
    "/api/v3/sleep-mat-activity-reading/{readingId}" : {
      "get" : {
        "tags" : [ "Readings - Sleep Mat Activity" ],
        "summary" : "Fetch Sleep Mat Activity Reading",
        "description" : "Fetches a specific sleep mat activity reading by its ID.",
        "operationId" : "fetchSleepMatActivityReading",
        "parameters" : [ {
          "name" : "readingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SleepMatActivityReading"
                },
                "examples" : {
                  "sleepMatActivityReadingResponseExample" : {
                    "value" : {
                      "id" : 42,
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "item" : {
                        "id" : 791,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001"
                      },
                      "device" : {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      },
                      "readingTimestamp" : "2024-07-04T00:00:00Z",
                      "manual" : false,
                      "deviceTimeZoneOffset" : 0,
                      "patientTimeZoneOffset" : 0,
                      "respiration" : 10,
                      "heartRate" : 60,
                      "bodyTurnOver" : 5,
                      "duration" : "20:00~00:00",
                      "bedTime" : [ "2022-06-30/20:01", "2022-06-30/20:55" ],
                      "getUpTime" : [ "2022-07-01/06:00", "2022-07-01/06:30" ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "sleepMatActivityReadingResponseExample"
      }
    },
    "/api/v3/sleep-mat-duration-reading" : {
      "get" : {
        "tags" : [ "Readings - Sleep Mat Duration" ],
        "summary" : "List Sleep Mat Duration Readings",
        "description" : "Retrieves a paginated list of sleep mat duration readings from the Impilo platform. Optional parameters can be used to filter the results by page number, page size, patient ID, external ID, start timestamp, and end timestamp.",
        "operationId" : "listSleepMatDurationReadings",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "patientId",
          "in" : "query",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "externalIdentifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTimestamp",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageSleepMatDurationReading"
                },
                "examples" : {
                  "sleepMatDurationReadingPagedResponseExample" : {
                    "value" : {
                      "content" : [ {
                        "id" : 42,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "device" : {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        },
                        "readingTimestamp" : "2024-07-04T00:00:00Z",
                        "manual" : false,
                        "deviceTimeZoneOffset" : 0,
                        "patientTimeZoneOffset" : 0,
                        "respiration" : 10,
                        "heartRate" : 60,
                        "bodyTurnOver" : 5,
                        "duration" : "20:00~00:00",
                        "rem" : 20,
                        "deepSleep" : 300,
                        "lightSleep" : 155
                      }, {
                        "id" : 43,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "device" : {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        },
                        "readingTimestamp" : "2024-07-04T00:00:00Z",
                        "manual" : false,
                        "deviceTimeZoneOffset" : 0,
                        "patientTimeZoneOffset" : 0,
                        "respiration" : 10,
                        "heartRate" : 60,
                        "bodyTurnOver" : 5,
                        "duration" : "20:00~00:00",
                        "rem" : 20,
                        "deepSleep" : 300,
                        "lightSleep" : 155
                      } ],
                      "page" : 1,
                      "size" : 2,
                      "total" : 4,
                      "first" : true,
                      "last" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "sleepMatDurationReadingPagedResponseExample"
      },
      "post" : {
        "tags" : [ "Readings - Sleep Mat Duration" ],
        "summary" : "Record Sleep Mat Duration Reading",
        "description" : "Records a sleep mat duration reading based on the provided request. Either a device ID, device identifier, or patient ID is required.\n***\nFor more information see the [SleepMatDurationReadingRequest Model](/resources/models#schema_SleepMatDurationReadingRequest).",
        "operationId" : "recordSleepMatDurationReading",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SleepMatDurationReadingRequest"
              },
              "examples" : {
                "device" : {
                  "value" : {
                    "deviceId" : 599,
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "respiration" : 10,
                    "heartRate" : 60,
                    "bodyTurnOver" : 5,
                    "duration" : "20:00~00:00",
                    "rem" : 20,
                    "deepSleep" : 300,
                    "lightSleep" : 155,
                    "manual" : false
                  }
                },
                "device-identifier" : {
                  "value" : {
                    "deviceIdentifier" : "354833969951611",
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "respiration" : 10,
                    "heartRate" : 60,
                    "bodyTurnOver" : 5,
                    "duration" : "20:00~00:00",
                    "rem" : 20,
                    "deepSleep" : 300,
                    "lightSleep" : 155,
                    "manual" : false
                  }
                },
                "patient" : {
                  "value" : {
                    "patientId" : 456,
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "respiration" : 10,
                    "heartRate" : 60,
                    "bodyTurnOver" : 5,
                    "duration" : "20:00~00:00",
                    "rem" : 20,
                    "deepSleep" : 300,
                    "lightSleep" : 155,
                    "manual" : false
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SleepMatDurationReading"
                },
                "examples" : {
                  "sleepMatDurationReadingResponseExample" : {
                    "value" : {
                      "id" : 42,
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "item" : {
                        "id" : 791,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001"
                      },
                      "device" : {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      },
                      "readingTimestamp" : "2024-07-04T00:00:00Z",
                      "manual" : false,
                      "deviceTimeZoneOffset" : 0,
                      "patientTimeZoneOffset" : 0,
                      "respiration" : 10,
                      "heartRate" : 60,
                      "bodyTurnOver" : 5,
                      "duration" : "20:00~00:00",
                      "rem" : 20,
                      "deepSleep" : 300,
                      "lightSleep" : 155
                    }
                  }
                }
              }
            }
          }
        },
        "x-request-example-device" : "sleepMatDurationReadingRequestDeviceExample",
        "x-request-example-device-identifier" : "sleepMatDurationReadingRequestDeviceIdentifierExample",
        "x-request-example-patient" : "sleepMatDurationReadingRequestPatientExample",
        "x-response-example" : "sleepMatDurationReadingResponseExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_SleepMatDurationReadingRequest"
        }
      }
    },
    "/api/v3/sleep-mat-duration-reading/{readingId}" : {
      "get" : {
        "tags" : [ "Readings - Sleep Mat Duration" ],
        "summary" : "Fetch Sleep Mat Duration Reading",
        "description" : "Fetches a specific sleep mat duration reading by its ID.",
        "operationId" : "fetchSleepMatDurationReading",
        "parameters" : [ {
          "name" : "readingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SleepMatDurationReading"
                },
                "examples" : {
                  "sleepMatDurationReadingResponseExample" : {
                    "value" : {
                      "id" : 42,
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "item" : {
                        "id" : 791,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001"
                      },
                      "device" : {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      },
                      "readingTimestamp" : "2024-07-04T00:00:00Z",
                      "manual" : false,
                      "deviceTimeZoneOffset" : 0,
                      "patientTimeZoneOffset" : 0,
                      "respiration" : 10,
                      "heartRate" : 60,
                      "bodyTurnOver" : 5,
                      "duration" : "20:00~00:00",
                      "rem" : 20,
                      "deepSleep" : 300,
                      "lightSleep" : 155
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "sleepMatDurationReadingResponseExample"
      }
    },
    "/api/v3/temperature-reading" : {
      "get" : {
        "tags" : [ "Readings - Temperature" ],
        "summary" : "List Temperature Readings",
        "description" : "Retrieves a paginated list of temperature readings from the Impilo platform. Optional parameters can be used to filter the results by page number, page size, patient ID, external ID, start timestamp, and end timestamp.",
        "operationId" : "listTemperatureReadings",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "patientId",
          "in" : "query",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "externalIdentifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTimestamp",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageTemperatureReading"
                },
                "examples" : {
                  "temperatureReadingPagedResponseExample" : {
                    "value" : {
                      "content" : [ {
                        "id" : 42,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "device" : {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        },
                        "temperatureUnit" : "Fahrenheit",
                        "temperature" : 98.6,
                        "readingTimestamp" : "2024-07-04T00:00:00Z"
                      }, {
                        "id" : 43,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "device" : {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        },
                        "temperatureUnit" : "Fahrenheit",
                        "temperature" : 98.6,
                        "readingTimestamp" : "2024-07-04T00:00:00Z"
                      } ],
                      "page" : 1,
                      "size" : 2,
                      "total" : 4,
                      "first" : true,
                      "last" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "temperatureReadingPagedResponseExample"
      },
      "post" : {
        "tags" : [ "Readings - Temperature" ],
        "summary" : "Record Temperature Reading",
        "description" : "Records a temperature reading based on the provided request. Either a device ID, device identifier, or patient ID is required.\n***\nFor more information see the [TemperatureReadingRequest Model](/resources/models#schema_TemperatureReadingRequest).",
        "operationId" : "recordTemperatureReading",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TemperatureReadingRequest"
              },
              "examples" : {
                "device" : {
                  "value" : {
                    "deviceId" : 599,
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "temperatureUnit" : "F",
                    "temperature" : 97.2,
                    "manual" : false
                  }
                },
                "device-identifier" : {
                  "value" : {
                    "deviceIdentifier" : "354833969951611",
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "temperatureUnit" : "F",
                    "temperature" : 97.2,
                    "manual" : false
                  }
                },
                "patient" : {
                  "value" : {
                    "patientId" : 456,
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "temperatureUnit" : "F",
                    "temperature" : 97.2,
                    "manual" : false
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TemperatureReading"
                },
                "examples" : {
                  "temperatureReadingResponseExample" : {
                    "value" : {
                      "id" : 42,
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "item" : {
                        "id" : 791,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001"
                      },
                      "device" : {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      },
                      "temperatureUnit" : "Fahrenheit",
                      "temperature" : 98.6,
                      "readingTimestamp" : "2024-07-04T00:00:00Z"
                    }
                  }
                }
              }
            }
          }
        },
        "x-request-example-device" : "temperatureReadingRequestDeviceExample",
        "x-request-example-device-identifier" : "temperatureReadingRequestDeviceIdentifierExample",
        "x-request-example-patient" : "temperatureReadingRequestPatientExample",
        "x-response-example" : "temperatureReadingResponseExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_TemperatureReadingRequest"
        }
      }
    },
    "/api/v3/temperature-reading/export" : {
      "get" : {
        "tags" : [ "Readings - Temperature" ],
        "summary" : "Export Temperature Readings",
        "description" : "Facilitates the export of temperature readings for a specified patient within a chosen date range, in either Excel or CSV format. This endpoint allows the selection of a patient ID for targeted data retrieval, or can provide readings for all patients if no specific ID is provided, subject to service implementation. The start and end dates are optional and can be used to filter the readings to a specific period. The 'excel' parameter decides the output format: setting this to true returns the data in Excel format, while false yields CSV format. The endpoint streams the output directly to the client in the specified format.\n",
        "operationId" : "exportTemperatureReadings",
        "parameters" : [ {
          "name" : "excel",
          "in" : "query",
          "description" : "Determines the format of the export: if true, the data is returned in Excel format; otherwise, it is returned as CSV.",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "name" : "patientId",
          "in" : "query",
          "description" : "The ID of the patient whose temperature readings are to be exported. If not provided, readings for all patients may be exported.",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "The start date for filtering temperature readings. Only readings after or equal to this date will be included.",
          "schema" : {
            "$ref" : "#/components/schemas/Instant"
          }
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "The end date for filtering temperature readings. Only readings before this date will be included.",
          "schema" : {
            "$ref" : "#/components/schemas/Instant"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              },
              "text/csv" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/temperature-reading/{readingId}" : {
      "get" : {
        "tags" : [ "Readings - Temperature" ],
        "summary" : "Fetch Temperature Reading",
        "description" : "Fetches a specific Impilo temperature reading by its ID.",
        "operationId" : "fetchTemperatureReading",
        "parameters" : [ {
          "name" : "readingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TemperatureReading"
                },
                "examples" : {
                  "temperatureReadingResponseExample" : {
                    "value" : {
                      "id" : 42,
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "item" : {
                        "id" : 791,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001"
                      },
                      "device" : {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      },
                      "temperatureUnit" : "Fahrenheit",
                      "temperature" : 98.6,
                      "readingTimestamp" : "2024-07-04T00:00:00Z"
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "temperatureReadingResponseExample"
      }
    },
    "/api/v3/weight-reading" : {
      "get" : {
        "tags" : [ "Readings - Weight" ],
        "summary" : "List Weight Readings",
        "description" : "Retrieves a paginated list of weight readings from the Impilo platform. Optional parameters can be used to filter the results by page number, page size, patient ID, external ID, start timestamp, and end timestamp.",
        "operationId" : "listWeightReadings",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "patientId",
          "in" : "query",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "externalIdentifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTimestamp",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageWeightReading"
                },
                "examples" : {
                  "weightReadingPagedResponseExample" : {
                    "value" : {
                      "content" : [ {
                        "id" : 42,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "device" : {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        },
                        "readingTimestamp" : "2024-07-04T00:00:00Z",
                        "weight" : 140.4,
                        "weightUnit" : "lbs",
                        "manual" : false
                      }, {
                        "id" : 43,
                        "patient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "device" : {
                          "id" : 599,
                          "item" : {
                            "id" : 791,
                            "manufacturer" : {
                              "id" : 2,
                              "name" : "Custom Manufacturer"
                            },
                            "name" : "Blood Pressure Monitor",
                            "model" : "iBloodPressureMonitor123",
                            "sku" : "0000001"
                          },
                          "currentStatus" : "withPatient",
                          "currentPatient" : {
                            "id" : 456,
                            "externalIdentifier" : "external-identifier-123",
                            "firstName" : "John",
                            "lastName" : "Doe",
                            "dateOfBirth" : "1987-09-13",
                            "email" : "email@example.com",
                            "phoneNumber" : "111-222-3333",
                            "address" : {
                              "lineOne" : "1234 Market Street",
                              "lineTwo" : "Suite 110",
                              "city" : "Philadelphia",
                              "state" : "PA",
                              "zipCode" : "19137",
                              "country" : "USA"
                            },
                            "sex" : "unknown"
                          },
                          "deviceIdentifiers" : [ {
                            "type" : "imei",
                            "value" : "354833969951611"
                          }, {
                            "type" : "serial",
                            "value" : "A44-A0623930"
                          }, {
                            "type" : "macAddress",
                            "value" : "f51da43314fc"
                          } ],
                          "disabledReadings" : false
                        },
                        "readingTimestamp" : "2024-07-04T00:00:00Z",
                        "weight" : 140.4,
                        "weightUnit" : "lbs",
                        "manual" : false
                      } ],
                      "page" : 1,
                      "size" : 2,
                      "total" : 4,
                      "first" : true,
                      "last" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "weightReadingPagedResponseExample"
      },
      "post" : {
        "tags" : [ "Readings - Weight" ],
        "summary" : "Record Weight Reading",
        "description" : "This endpoint records a weight reading based on the provided request. Either a device ID, device identifier, or patient ID is required.\n***\nFor more information see the [WeightReadingRequest Model](/resources/models#schema_WeightReadingRequest).",
        "operationId" : "recordWeightReading",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WeightReadingRequest"
              },
              "examples" : {
                "device" : {
                  "value" : {
                    "deviceId" : 599,
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "weight" : 140.4,
                    "manual" : false
                  }
                },
                "device-identifier" : {
                  "value" : {
                    "deviceIdentifier" : "354833969951611",
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "weight" : 140.4,
                    "manual" : false
                  }
                },
                "patient" : {
                  "value" : {
                    "patientId" : 456,
                    "readingTimestamp" : "2024-07-04T00:00:00Z",
                    "deviceTimeZoneOffset" : -14400,
                    "weight" : 140.4,
                    "manual" : false
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WeightReading"
                },
                "examples" : {
                  "weightReadingResponseExample" : {
                    "value" : {
                      "id" : 42,
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "item" : {
                        "id" : 791,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001"
                      },
                      "device" : {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      },
                      "readingTimestamp" : "2024-07-04T00:00:00Z",
                      "weight" : 140.4,
                      "weightUnit" : "lbs",
                      "manual" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-request-example-device" : "weightReadingRequestDeviceExample",
        "x-request-example-device-identifier" : "weightReadingRequestDeviceIdentifierExample",
        "x-request-example-patient" : "weightReadingRequestPatientExample",
        "x-response-example" : "weightReadingResponseExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_WeightReadingRequest"
        }
      }
    },
    "/api/v3/weight-reading/export" : {
      "get" : {
        "tags" : [ "Readings - Weight" ],
        "summary" : "Export Weight Readings",
        "description" : "Exports weight readings for a specified patient over a selected date range, available in either Excel or CSV format. This endpoint allows the specification of a patient ID, enabling the retrieval of weight data for an individual patient. Alternatively, if no patient ID is provided, it may export readings for all patients, dependent on the implementation details of the service. Users can also specify start and end dates to filter the export to a specific timeframe. The 'excel' parameter dictates the format of the output; if set to true, the readings are exported in Excel format, otherwise in CSV format\n",
        "operationId" : "exportWeightReadings",
        "parameters" : [ {
          "name" : "excel",
          "in" : "query",
          "description" : "Determines the format of the export: if true, the data is returned in Excel format; otherwise, it is returned as CSV.",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "name" : "patientId",
          "in" : "query",
          "description" : "The ID of the patient whose weight readings are to be exported. If not provided, readings for all patients may be exported.",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "The start date for filtering weight readings. Only readings after or equal to this date will be included.",
          "schema" : {
            "$ref" : "#/components/schemas/Instant"
          }
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "The end date for filtering weight readings. Only readings before this date will be included.",
          "schema" : {
            "$ref" : "#/components/schemas/Instant"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/weight-reading/{readingId}" : {
      "get" : {
        "tags" : [ "Readings - Weight" ],
        "summary" : "Fetch Weight Reading",
        "description" : "Fetches a specific Impilo weight reading by its ID.",
        "operationId" : "fetchWeightReading",
        "parameters" : [ {
          "name" : "readingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WeightReading"
                },
                "examples" : {
                  "weightReadingResponseExample" : {
                    "value" : {
                      "id" : 42,
                      "patient" : {
                        "id" : 456,
                        "externalIdentifier" : "external-identifier-123",
                        "firstName" : "John",
                        "lastName" : "Doe",
                        "dateOfBirth" : "1987-09-13",
                        "email" : "email@example.com",
                        "phoneNumber" : "111-222-3333",
                        "address" : {
                          "lineOne" : "1234 Market Street",
                          "lineTwo" : "Suite 110",
                          "city" : "Philadelphia",
                          "state" : "PA",
                          "zipCode" : "19137",
                          "country" : "USA"
                        },
                        "sex" : "unknown"
                      },
                      "item" : {
                        "id" : 791,
                        "manufacturer" : {
                          "id" : 2,
                          "name" : "Custom Manufacturer"
                        },
                        "name" : "Blood Pressure Monitor",
                        "model" : "iBloodPressureMonitor123",
                        "sku" : "0000001"
                      },
                      "device" : {
                        "id" : 599,
                        "item" : {
                          "id" : 791,
                          "manufacturer" : {
                            "id" : 2,
                            "name" : "Custom Manufacturer"
                          },
                          "name" : "Blood Pressure Monitor",
                          "model" : "iBloodPressureMonitor123",
                          "sku" : "0000001"
                        },
                        "currentStatus" : "withPatient",
                        "currentPatient" : {
                          "id" : 456,
                          "externalIdentifier" : "external-identifier-123",
                          "firstName" : "John",
                          "lastName" : "Doe",
                          "dateOfBirth" : "1987-09-13",
                          "email" : "email@example.com",
                          "phoneNumber" : "111-222-3333",
                          "address" : {
                            "lineOne" : "1234 Market Street",
                            "lineTwo" : "Suite 110",
                            "city" : "Philadelphia",
                            "state" : "PA",
                            "zipCode" : "19137",
                            "country" : "USA"
                          },
                          "sex" : "unknown"
                        },
                        "deviceIdentifiers" : [ {
                          "type" : "imei",
                          "value" : "354833969951611"
                        }, {
                          "type" : "serial",
                          "value" : "A44-A0623930"
                        }, {
                          "type" : "macAddress",
                          "value" : "f51da43314fc"
                        } ],
                        "disabledReadings" : false
                      },
                      "readingTimestamp" : "2024-07-04T00:00:00Z",
                      "weight" : 140.4,
                      "weightUnit" : "lbs",
                      "manual" : false
                    }
                  }
                }
              }
            }
          }
        },
        "x-response-example" : "weightReadingResponseExample"
      }
    },
    "/api/v3/test/blood-glucose-webhook" : {
      "post" : {
        "tags" : [ "Tests" ],
        "summary" : "Trigger Blood Glucose Webhook",
        "description" : "Trigger a test blood glucose webhook\n***\nFor more information see the [TestBloodGlucoseWebhookRequest Model](/resources/models#schema_TestBloodGlucoseWebhookRequest).",
        "operationId" : "triggerBloodGlucoseWebhook",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TestBloodGlucoseWebhookRequest"
              },
              "examples" : {
                "createTestBloodGlucoseWebhookRequestExample" : {
                  "value" : {
                    "patientId" : 1,
                    "glucose" : 95
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        },
        "x-request-example" : "createTestBloodGlucoseWebhookRequestExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_TestBloodGlucoseWebhookRequest"
        }
      }
    },
    "/api/v3/test/blood-oxygen-webhook" : {
      "post" : {
        "tags" : [ "Tests" ],
        "summary" : "Trigger Blood Oxygen Webhook",
        "description" : "Trigger a test blood oxygen webhook\n***\nFor more information see the [TestBloodOxygenWebhookRequest Model](/resources/models#schema_TestBloodOxygenWebhookRequest).",
        "operationId" : "triggerBloodOxygenWebhook",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TestBloodOxygenWebhookRequest"
              },
              "examples" : {
                "createTestBloodOxygenWebhookRequestExample" : {
                  "value" : {
                    "patientId" : 1,
                    "bloodOxygen" : 98,
                    "heartRate" : 75
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        },
        "x-request-example" : "createTestBloodOxygenWebhookRequestExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_TestBloodOxygenWebhookRequest"
        }
      }
    },
    "/api/v3/test/blood-pressure-webhook" : {
      "post" : {
        "tags" : [ "Tests" ],
        "summary" : "Trigger Blood Pressure Webhook",
        "description" : "Trigger a test blood pressure webhook\n***\nFor more information see the [TestBloodPressureWebhookRequest Model](/resources/models#schema_TestBloodPressureWebhookRequest).",
        "operationId" : "triggerBloodPressureWebhook",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TestBloodPressureWebhookRequest"
              },
              "examples" : {
                "createTestBloodPressureWebhookRequestExample" : {
                  "value" : {
                    "patientId" : 1,
                    "systolic" : 120,
                    "diastolic" : 80,
                    "heartRate" : 100
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        },
        "x-request-example" : "createTestBloodPressureWebhookRequestExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_TestBloodPressureWebhookRequest"
        }
      }
    },
    "/api/v3/test/device-association-created" : {
      "post" : {
        "tags" : [ "Tests" ],
        "summary" : "Trigger Device Association Created",
        "description" : "Trigger a test device association created webhook\n***\nFor more information see the [TestDeviceAssociationWebhook Model](/resources/models#schema_TestDeviceAssociationWebhook).",
        "operationId" : "triggerDeviceAssociationCreated",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TestDeviceAssociationWebhook"
              },
              "examples" : {
                "createTestDeviceAssociationWebhookExample" : {
                  "value" : {
                    "patientId" : 1,
                    "deviceId" : 1,
                    "deviceIdentifier" : "DEVICE123"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        },
        "x-request-example" : "createTestDeviceAssociationWebhookExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_TestDeviceAssociationWebhook"
        }
      }
    },
    "/api/v3/test/device-association-removed" : {
      "post" : {
        "tags" : [ "Tests" ],
        "summary" : "Trigger Device Association Removed",
        "description" : "Trigger a test device association removed webhook\n***\nFor more information see the [TestDeviceAssociationWebhook Model](/resources/models#schema_TestDeviceAssociationWebhook).",
        "operationId" : "triggerDeviceAssociationRemoved",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TestDeviceAssociationWebhook"
              },
              "examples" : {
                "createTestDeviceAssociationWebhookExample" : {
                  "value" : {
                    "patientId" : 1,
                    "deviceId" : 1,
                    "deviceIdentifier" : "DEVICE123"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        },
        "x-request-example" : "createTestDeviceAssociationWebhookExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_TestDeviceAssociationWebhook"
        }
      }
    },
    "/api/v3/test/order-status-full-webhook" : {
      "post" : {
        "tags" : [ "Tests" ],
        "summary" : "Order Status Full Webhook",
        "description" : "Trigger a test order status full webhook\n***\nFor more information see the [TestOrderStatusFullWebhook Model](/resources/models#schema_TestOrderStatusFullWebhook).",
        "operationId" : "orderStatusFullWebhook",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TestOrderStatusFullWebhook"
              },
              "examples" : {
                "createTestOrderStatusFullWebhookExample" : {
                  "value" : {
                    "orderId" : 1,
                    "externalOrderIds" : [ "123", "456" ],
                    "patientId" : 1,
                    "orderStatus" : "shipped",
                    "trackingNumber" : "TRACK123"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        },
        "x-request-example" : "createTestOrderStatusFullWebhookExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_TestOrderStatusFullWebhook"
        }
      }
    },
    "/api/v3/test/order-status-webhook" : {
      "post" : {
        "tags" : [ "Tests" ],
        "summary" : "Trigger Order Status Webhook",
        "description" : "Send a test order status webhook\n***\nFor more information see the [TestOrderStatusWebhookRequest Model](/resources/models#schema_TestOrderStatusWebhookRequest).",
        "operationId" : "triggerOrderStatusWebhook",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TestOrderStatusWebhookRequest"
              },
              "examples" : {
                "createTestOrderStatusWebhookRequestExample" : {
                  "value" : {
                    "orderId" : 1,
                    "externalOrderIds" : [ "123", "456" ],
                    "orderStatusName" : "orderPlaced"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        },
        "x-request-example" : "createTestOrderStatusWebhookRequestExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_TestOrderStatusWebhookRequest"
        }
      }
    },
    "/api/v3/test/weight-webhook" : {
      "post" : {
        "tags" : [ "Tests" ],
        "summary" : "Trigger Weight Webhook",
        "description" : "Trigger a test weight webhook\n***\nFor more information see the [TestWeightWebhookRequest Model](/resources/models#schema_TestWeightWebhookRequest).",
        "operationId" : "triggerWeightWebhook",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TestWeightWebhookRequest"
              },
              "examples" : {
                "createTestWeightWebhookRequestExample" : {
                  "value" : {
                    "patientId" : 1,
                    "weight" : 70.5
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        },
        "x-request-example" : "createTestWeightWebhookRequestExample",
        "externalDocs" : {
          "url" : "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_TestWeightWebhookRequest"
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "ApiKeyAuth" : {
        "type" : "apiKey",
        "in" : "header",
        "name" : "Impilo-API-Key"
      }
    },
    "schemas" : {
      "Address" : {
        "description" : "Represents a physical address, including information such as street lines, city, state, zip code, country, and an optional note for additional details.",
        "required" : [ "lineOne", "city", "state", "zipCode", "country" ],
        "type" : "object",
        "properties" : {
          "lineOne" : {
            "description" : "Address line one.",
            "type" : "string"
          },
          "lineTwo" : {
            "description" : "Address line two.",
            "type" : "string"
          },
          "lineThree" : {
            "description" : "Address line three.",
            "type" : "string"
          },
          "city" : {
            "description" : "Address city.",
            "type" : "string"
          },
          "state" : {
            "description" : "Address state.",
            "type" : "string"
          },
          "zipCode" : {
            "description" : "Address zip code.",
            "type" : "string"
          },
          "country" : {
            "description" : "Address country.",
            "type" : "string"
          },
          "note" : {
            "description" : "Address note.",
            "type" : "string"
          }
        }
      },
      "AlertConfiguration" : {
        "description" : "Request object for updating alert configurations",
        "type" : "object",
        "properties" : {
          "alertConfigurationType" : {
            "description" : "The type of alert configuration",
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/AlertConfigurationType"
            } ]
          },
          "enabled" : {
            "description" : "Whether this alert is enabled",
            "default" : true,
            "type" : "boolean",
            "example" : true
          },
          "notifyHealthCoach" : {
            "description" : "Whether to notify the health coach when the alert is triggered",
            "default" : true,
            "type" : "boolean",
            "example" : true
          },
          "notifyPatient" : {
            "description" : "Whether to notify the patient when the alert is triggered",
            "default" : true,
            "type" : "boolean",
            "example" : true
          },
          "config" : {
            "description" : "Alert configuration rules. Structure varies by alertConfigurationType.",
            "oneOf" : [ {
              "$ref" : "#/components/schemas/BloodPressureAlertConfig"
            } ]
          },
          "notificationEmails" : {
            "description" : "List of emails to notify when alert is triggered",
            "default" : [ ],
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "example" : [ "email1@example.com", "email2@example.com" ]
          },
          "alertConfigType" : {
            "$ref" : "#/components/schemas/AlertConfigurationType"
          }
        }
      },
      "AlertConfigurationType" : {
        "enum" : [ "bloodPressure", "bloodOxygen", "ecg", "lowInventory", "weight" ],
        "type" : "string"
      },
      "AssociateDeviceRequest" : {
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "format" : "int64",
            "description" : "The ID of the device. Either this value or a Device Identifier are required to identify the Device.",
            "type" : "integer",
            "example" : 1
          },
          "deviceIdentifier" : {
            "description" : "The Identifier, such as a Serial Number, of the device. Either this value or a Device Id are required to identify the Device.",
            "type" : "string",
            "example" : "ABC123"
          },
          "patientId" : {
            "format" : "int64",
            "description" : "The ID of the patient to have the Device associated to. Either this value or a Patient External Identifier are required to identify who should be (dis)associated with the device.",
            "type" : "integer"
          },
          "patientExternalIdentifier" : {
            "description" : "The External Identifier of the patient to have the Device (dis)associated to. Either this value or a Patient Id are required to identify who should be (dis)associated with the device.",
            "type" : "string"
          }
        }
      },
      "BloodGlucoseReading" : {
        "description" : "This page describes Impilo's blood glucose reading model.",
        "required" : [ "readingTimestamp" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "Unique identifier for the reading.",
            "type" : "integer"
          },
          "readingTimestamp" : {
            "format" : "date-time",
            "description" : "The UTC timestamp at which the reading was taken.",
            "type" : "string",
            "writeOnly" : true
          },
          "manual" : {
            "description" : "True if the reading value was entered manually, false or null otherwise.",
            "type" : "boolean"
          },
          "deviceTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the device's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "patientTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the patient's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "patient" : {
            "description" : "The patient who took the reading.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Patient"
            } ]
          },
          "item" : {
            "description" : "The item used to take the reading.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Item"
            } ]
          },
          "device" : {
            "description" : "The device used to take the reading.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Device"
            } ]
          },
          "glucose" : {
            "format" : "int32",
            "description" : "The blood glucose measurement value.",
            "type" : "integer"
          },
          "glucoseUnit" : {
            "$ref" : "#/components/schemas/BloodGlucoseUnit"
          },
          "beforeMeal" : {
            "description" : "True if the reading was taken before a meal, false otherwise.",
            "type" : "boolean"
          },
          "afterMeal" : {
            "description" : "True if the reading was taken after a meal, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "BloodGlucoseReadingRequest" : {
        "description" : "This page describes Impilo's blood glucose reading model.",
        "required" : [ "readingTimestamp", "glucose" ],
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "format" : "int64",
            "description" : "The id of the device that took the reading.",
            "type" : "integer"
          },
          "deviceIdentifier" : {
            "description" : "The device identifier of the device that took the reading.",
            "type" : "string"
          },
          "patientId" : {
            "format" : "int64",
            "description" : "The id of the patient that took the reading.",
            "type" : "integer"
          },
          "readingTimestamp" : {
            "format" : "date-time",
            "description" : "The UTC timestamp at which the reading was taken.",
            "type" : "string",
            "example" : "2022-03-10T16:15:50Z"
          },
          "deviceTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the device's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "glucose" : {
            "format" : "int32",
            "description" : "The blood glucose measurement value.",
            "type" : "integer"
          },
          "manual" : {
            "description" : "True if the reading value was entered manually, false or null otherwise.",
            "type" : "boolean"
          },
          "beforeMeal" : {
            "description" : "True if the reading was taken before a meal, false otherwise.",
            "type" : "boolean"
          },
          "afterMeal" : {
            "description" : "True if the reading was taken after a meal, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "BloodGlucoseUnit" : {
        "enum" : [ "mgdl" ],
        "type" : "string",
        "x-fern-enum" : {
          "mgdl" : {
            "description" : "Blood glucose unit of measurement is milligrams per deciliter."
          }
        }
      },
      "BloodOxygenReading" : {
        "description" : "This page describes Impilo's blood oxygen reading model.",
        "required" : [ "readingTimestamp" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "Unique identifier for the reading.",
            "type" : "integer"
          },
          "readingTimestamp" : {
            "format" : "date-time",
            "description" : "The UTC timestamp at which the reading was taken.",
            "type" : "string",
            "writeOnly" : true
          },
          "manual" : {
            "description" : "True if the reading value was entered manually, false or null otherwise.",
            "type" : "boolean"
          },
          "deviceTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the device's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "patientTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the patient's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "patient" : {
            "description" : "The patient who took the reading.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Patient"
            } ]
          },
          "item" : {
            "description" : "The item used to take the reading.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Item"
            } ]
          },
          "device" : {
            "description" : "The device used to take the reading.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Device"
            } ]
          },
          "bloodOxygen" : {
            "format" : "int32",
            "description" : "The blood oxygen (spo2) measurement value.",
            "type" : "integer"
          },
          "bloodOxygenUnit" : {
            "$ref" : "#/components/schemas/BloodOxygenUnit"
          },
          "heartRate" : {
            "format" : "int32",
            "description" : "The heart rate measurement value.",
            "type" : "integer"
          },
          "heartRateUnit" : {
            "$ref" : "#/components/schemas/HeartRateUnit"
          }
        }
      },
      "BloodOxygenReadingRequest" : {
        "description" : "This page describes Impilo's blood oxygen reading model.",
        "required" : [ "readingTimestamp", "bloodOxygen" ],
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "format" : "int64",
            "description" : "The id of the device that took the reading.",
            "type" : "integer"
          },
          "deviceIdentifier" : {
            "description" : "The device identifier of the device that took the reading.",
            "type" : "string"
          },
          "patientId" : {
            "format" : "int64",
            "description" : "The id of the patient that took the reading.",
            "type" : "integer"
          },
          "readingTimestamp" : {
            "format" : "date-time",
            "description" : "The UTC timestamp at which the reading was taken.",
            "type" : "string",
            "example" : "2022-03-10T16:15:50Z"
          },
          "deviceTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the device's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "bloodOxygen" : {
            "format" : "int32",
            "description" : "The blood oxygen (spo2) measurement value.",
            "type" : "integer"
          },
          "heartRate" : {
            "format" : "int32",
            "description" : "The heart rate measurement value.",
            "type" : "integer"
          },
          "manual" : {
            "description" : "True if the reading value was entered manually, false or null otherwise.",
            "type" : "boolean"
          }
        }
      },
      "BloodOxygenUnit" : {
        "enum" : [ "spo2" ],
        "type" : "string",
        "x-fern-enum" : {
          "spo2" : {
            "description" : "Blood glucose unit of measurement is milligrams per deciliter."
          }
        }
      },
      "BloodPressureAlertConfig" : {
        "description" : "Blood pressure alert configuration",
        "type" : "object",
        "properties" : {
          "rules" : {
            "description" : "List of rules that determine when blood pressure alerts are triggered.\nEach rule can be either:\n\nThreshold Rule:\n\\{\n  \"type\": \"threshold\",\n  \"field\": \"systolic|diastolic\",\n  \"operator\": \"gt|lt\",\n  \"value\": 140,\n  \"severity\": \"NONE|LOW|MEDIUM|HIGH\"\n\\}\n\nRelative Change Rule:\n\\{\n  \"type\": \"relative_change\",\n  \"field\": \"systolic|diastolic\",\n  \"direction\": \"increase|decrease\",\n  \"value\": 20.0,     // percentage: 0-100\n  \"severity\": \"NONE|LOW|MEDIUM|HIGH\"\n\\}\n",
            "type" : "array",
            "items" : { }
          },
          "_example" : {
            "example" : {
              "rules" : [ {
                "type" : "threshold",
                "field" : "systolic",
                "operator" : "gt",
                "value" : 140,
                "severity" : "MEDIUM"
              }, {
                "type" : "relative_change",
                "field" : "systolic",
                "direction" : "increase",
                "value" : 20.0,
                "severity" : "MEDIUM"
              } ]
            }
          }
        }
      },
      "BloodPressureReading" : {
        "description" : "This page describes Impilo's blood pressure reading model.",
        "required" : [ "readingTimestamp" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "Unique identifier for the reading.",
            "type" : "integer"
          },
          "readingTimestamp" : {
            "format" : "date-time",
            "description" : "The UTC timestamp at which the reading was taken.",
            "type" : "string",
            "writeOnly" : true
          },
          "manual" : {
            "description" : "True if the reading value was entered manually, false or null otherwise.",
            "type" : "boolean"
          },
          "deviceTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the device's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "patientTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the patient's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "patient" : {
            "description" : "The patient who took the reading.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Patient"
            } ]
          },
          "item" : {
            "description" : "The item used to take the reading.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Item"
            } ]
          },
          "device" : {
            "description" : "The device used to take the reading.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Device"
            } ]
          },
          "systolic" : {
            "format" : "int32",
            "description" : "The systolic measurement value.",
            "type" : "integer"
          },
          "systolicUnit" : {
            "$ref" : "#/components/schemas/BloodPressureUnit"
          },
          "diastolic" : {
            "format" : "int32",
            "description" : "The diastolic measurement value.",
            "type" : "integer"
          },
          "diastolicUnit" : {
            "$ref" : "#/components/schemas/BloodPressureUnit"
          },
          "heartRate" : {
            "format" : "int32",
            "description" : "The heart rate measurement value.",
            "type" : "integer"
          },
          "heartRateUnit" : {
            "$ref" : "#/components/schemas/HeartRateUnit"
          }
        }
      },
      "BloodPressureReadingRequest" : {
        "description" : "This page describes Impilo's blood pressure reading model.",
        "required" : [ "readingTimestamp", "systolic", "diastolic" ],
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "format" : "int64",
            "description" : "The id of the device that took the reading.",
            "type" : "integer"
          },
          "deviceIdentifier" : {
            "description" : "The device identifier of the device that took the reading.",
            "type" : "string"
          },
          "patientId" : {
            "format" : "int64",
            "description" : "The id of the patient that took the reading.",
            "type" : "integer"
          },
          "readingTimestamp" : {
            "format" : "date-time",
            "description" : "The UTC timestamp at which the reading was taken.",
            "type" : "string",
            "example" : "2022-03-10T16:15:50Z"
          },
          "deviceTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the device's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "systolic" : {
            "format" : "int32",
            "description" : "The systolic measurement value.",
            "type" : "integer"
          },
          "diastolic" : {
            "format" : "int32",
            "description" : "The diastolic measurement value.",
            "type" : "integer"
          },
          "heartRate" : {
            "format" : "int32",
            "description" : "The heart rate measurement value.",
            "type" : "integer"
          },
          "manual" : {
            "description" : "True if the reading value was entered manually, false or null otherwise.",
            "type" : "boolean"
          }
        }
      },
      "BloodPressureUnit" : {
        "enum" : [ "mmhg" ],
        "type" : "string",
        "x-fern-enum" : {
          "mmhg" : {
            "description" : "Pressure unit of measurement is millimeters of mercury."
          }
        }
      },
      "ClinicalNote" : {
        "description" : "Clinical note for patients.",
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "The unique identifier of the clinical note.",
            "type" : "integer"
          },
          "type" : {
            "description" : "The type of the clinical note.",
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/ClinicalNoteType"
            } ]
          },
          "cptCode" : {
            "description" : "The CPT code associated with the clinical note.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/CptCode"
            } ]
          },
          "createTimestamp" : {
            "format" : "date-time",
            "description" : "The timestamp when the clinical note was created.",
            "type" : "string",
            "example" : "2022-03-10T16:15:50Z"
          },
          "lastUpdateTimestamp" : {
            "format" : "date-time",
            "description" : "The timestamp when the clinical note was last updated.",
            "type" : "string",
            "example" : "2022-03-10T16:15:50Z"
          },
          "open" : {
            "description" : "Indicates whether the clinical note is open.",
            "type" : "boolean"
          },
          "mdCode" : {
            "description" : "The MD code associated with the clinical note.",
            "type" : "string"
          },
          "dxCode" : {
            "description" : "The DX code associated with the clinical note.",
            "type" : "string"
          },
          "description" : {
            "description" : "The description of the clinical note.",
            "type" : "string"
          },
          "createdBy" : {
            "description" : "The user who created the clinical note.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/EndUser"
            } ]
          },
          "assignee" : {
            "description" : "The user assigned to the clinical note.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/EndUser"
            } ]
          },
          "patient" : {
            "description" : "The patient associated with the clinical note.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Patient"
            } ]
          },
          "activity" : {
            "description" : "List of activities associated with the clinical note.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClinicalNoteActivity"
            }
          },
          "totalTime" : {
            "format" : "int32",
            "description" : "Total time in minutes spent on the clinical note.",
            "type" : "integer"
          }
        }
      },
      "ClinicalNoteActivity" : {
        "description" : "Clinical note activity.",
        "type" : "object",
        "properties" : {
          "createTimestamp" : {
            "format" : "date-time",
            "description" : "The timestamp when the activity was created.",
            "type" : "string",
            "example" : "2022-03-10T16:15:50Z"
          },
          "comment" : {
            "description" : "The comment associated with the activity.",
            "type" : "string"
          },
          "minutesSpent" : {
            "format" : "int32",
            "description" : "The number of minutes spent on the activity.",
            "type" : "integer"
          },
          "createdBy" : {
            "description" : "The user who created the activity.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/EndUser"
            } ]
          }
        }
      },
      "ClinicalNoteSort" : {
        "enum" : [ "open", "createTimestamp" ],
        "type" : "string"
      },
      "ClinicalNoteType" : {
        "enum" : [ "other", "cptCode" ],
        "type" : "string",
        "x-fern-enum" : {
          "other" : {
            "description" : "Clinical note of other type."
          },
          "cptCode" : {
            "description" : "Clinical note related to a CPT code."
          }
        }
      },
      "CptCode" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "displayAs" : {
            "type" : "string"
          }
        }
      },
      "CreateReturn" : {
        "description" : "The payload for creating a return.",
        "type" : "object",
        "properties" : {
          "patientId" : {
            "format" : "int64",
            "description" : "The patient that is making the return.",
            "type" : "integer"
          },
          "siteId" : {
            "format" : "int64",
            "description" : "The site that is making the return.",
            "type" : "integer"
          },
          "returnItems" : {
            "description" : "An array of non-tracked items expected on this return.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimpleReturnItem"
            }
          },
          "returnDevices" : {
            "description" : "An array of devices expected on this return.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReturnDevice"
            }
          },
          "shippingOption" : {
            "description" : "The shipping service level.",
            "default" : "standard",
            "enum" : [ "standard", "overnight" ],
            "type" : "string",
            "x-fern-enum" : {
              "standard" : {
                "description" : "Standard shipping option."
              },
              "overnight" : {
                "description" : "Overnight shipping option."
              }
            }
          },
          "emailLabel" : {
            "description" : "Indicates if the return shipping label will be emailed or shipped.",
            "default" : false,
            "type" : "boolean"
          }
        },
        "additionalProperties" : false
      },
      "Customer" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "Device" : {
        "description" : "A device is an instance of an item. Impilo creates device records for items that are serialized, i.e., items where each individual unit is identified by a serial number, IMEI, or other identifier.",
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "Unique identifier for the device, managed by Impilo.",
            "type" : "integer",
            "readOnly" : true,
            "example" : 1
          },
          "item" : {
            "description" : "The manufacturer for this item.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Item"
            } ]
          },
          "currentStatus" : {
            "description" : "The current status of this device.",
            "type" : "string"
          },
          "used" : {
            "description" : "True if this device is used, false otherwise.",
            "type" : "boolean"
          },
          "currentPatient" : {
            "description" : "The patient currently in possession of this device. Null if this device is not currently with a patient.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Patient"
            } ]
          },
          "site" : {
            "description" : "The site to which this device is assigned.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Site"
            } ]
          },
          "lastHealthCheck" : {
            "description" : "Timestamp for the last time Impilo received a signal from this device.",
            "type" : "string"
          },
          "deviceIdentifiers" : {
            "description" : "An array of the device identifiers for this device.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceIdentifier"
            }
          },
          "deviceEvents" : {
            "description" : "An array of the device events for this device.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceEvent"
            }
          },
          "externalIdentifier" : {
            "description" : "The external identifier for this device.",
            "type" : "string"
          },
          "disabledReadings" : {
            "description" : "True if readings from this device are disabled, false otherwise. If true, Impilo will not save or process readings from this device. Webhooks and alerts will not be triggered for readings taken on this device.",
            "type" : "boolean"
          }
        }
      },
      "DeviceAssociationWebhookPayload" : {
        "description" : "The webhook payload sent when a Device is either Associated or Disassociated with a patient.",
        "type" : "object",
        "properties" : {
          "patient" : {
            "description" : "The Patient that the device was either associated with or disassociated from.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Patient"
            } ]
          },
          "device" : {
            "description" : "The Device that was associated to or disassociated from the provided Patient.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Device"
            } ]
          },
          "action" : {
            "description" : "The type of association that was performed -- either 'associate' or 'disassociate'.",
            "type" : "string"
          },
          "eventTimestamp" : {
            "description" : "The timestamp of the association event.",
            "type" : "string"
          }
        },
        "x-response-example" : "deviceAssociationWebhookExample"
      },
      "DeviceEvent" : {
        "description" : "A device event represents a significant activity or occurrence detected by the device. Impilo tracks these events to provide insights into device usage and operational status.",
        "type" : "object",
        "properties" : {
          "type" : {
            "description" : "The event type for the Device Event.",
            "type" : "string"
          },
          "eventTimestamp" : {
            "description" : "The timestamp when the Device Event was created.",
            "type" : "string"
          }
        }
      },
      "DeviceIdentifier" : {
        "description" : "A device is an instance of an item. Impilo creates device records for items that are serialized, i.e., items where each individual unit is identified by a serial number, IMEI, or other identifier.",
        "type" : "object",
        "properties" : {
          "type" : {
            "description" : "The type of the Device Identifier.",
            "type" : "string"
          },
          "value" : {
            "description" : "The value of the Device Identifier, based on it's type.",
            "type" : "string"
          }
        }
      },
      "DeviceIdentifierType" : {
        "enum" : [ "simCardNumber", "macAddress", "iccid", "serial", "imei" ],
        "type" : "string"
      },
      "DeviceReferenceRequest" : {
        "description" : "A request to reference a device by either its ID or Identifier.",
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "format" : "int64",
            "description" : "The ID of the device. Either this value or a Device Identifier are required to identify the Device.",
            "type" : "integer",
            "example" : 1
          },
          "deviceIdentifier" : {
            "description" : "The Identifier, such as a Serial Number, of the device. Either this value or a Device Id are required to identify the Device.",
            "type" : "string",
            "example" : "ABC123"
          }
        }
      },
      "DeviceSort" : {
        "enum" : [ "itemName", "itemModel", "itemSku", "deviceId" ],
        "type" : "string"
      },
      "DeviceStatus" : {
        "enum" : [ "initiated", "awaitingShipment", "available", "withPatient", "availableAtSite", "delivered", "used", "refurbishing", "packedAtSite", "receivedInError", "decommissioned", "shipped", "availableRepacked", "returnedManufacturer", "packed" ],
        "type" : "string",
        "x-fern-enum" : {
          "initiated" : {
            "description" : "Device initialization has been initiated."
          },
          "awaitingShipment" : {
            "description" : "Device is awaiting shipment."
          },
          "available" : {
            "description" : "Device is available for use."
          },
          "withPatient" : {
            "description" : "Device is currently with a patient."
          },
          "availableAtSite" : {
            "description" : "Device is available at a site."
          },
          "delivered" : {
            "description" : "Device has been delivered."
          },
          "used" : {
            "description" : "Device is currently in use."
          },
          "refurbishing" : {
            "description" : "Device is being refurbished."
          },
          "packedAtSite" : {
            "description" : "Device is packed in a kit at a site, ready to be assigned to a patient."
          },
          "receivedInError" : {
            "description" : "Device was received in error and is no longer available for use."
          },
          "decommissioned" : {
            "description" : "Device has been decommissioned."
          },
          "shipped" : {
            "description" : "Device has been shipped."
          },
          "availableRepacked" : {
            "description" : "Device is available and repacked."
          },
          "returnedManufacturer" : {
            "description" : "Device has been returned to the manufacturer."
          },
          "packed" : {
            "description" : "Device is packed and ready for shipment or use."
          }
        }
      },
      "DimensionUnit" : {
        "enum" : [ "in", "cm" ],
        "type" : "string",
        "x-fern-enum" : {
          "in" : {
            "description" : "Inches."
          },
          "cm" : {
            "description" : "Centimeters."
          }
        }
      },
      "DisenrollPatientRequest" : {
        "type" : "object",
        "properties" : {
          "archive" : {
            "description" : "Whether or not the patient to be disenrolled should also be archived.",
            "type" : "boolean"
          },
          "createReturns" : {
            "description" : "Whether or not Returns should be placed for the patient to be disenrolled.",
            "type" : "boolean"
          }
        }
      },
      "EndUser" : {
        "description" : "User information.",
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "The unique identifier of the user.",
            "type" : "integer"
          },
          "firstName" : {
            "description" : "The first name of the user.",
            "type" : "string"
          },
          "lastName" : {
            "description" : "The last name of the user.",
            "type" : "string"
          },
          "email" : {
            "description" : "The email address of the user.",
            "type" : "string"
          }
        }
      },
      "ForcedExpiratoryVolumeUnit" : {
        "enum" : [ "lps" ],
        "type" : "string",
        "x-fern-enum" : {
          "lps" : {
            "description" : "Forced expiratory volume unit of measurement is liters per second."
          }
        }
      },
      "HeartRateReading" : {
        "description" : "Impilo's heart rate model.",
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "Unique identifier for the reading.",
            "type" : "integer"
          },
          "readingTimestamp" : {
            "format" : "date-time",
            "type" : "string",
            "example" : "2022-03-10T16:15:50Z",
            "writeOnly" : true
          },
          "manual" : {
            "description" : "True if the reading value was entered manually, false or null otherwise.",
            "type" : "boolean",
            "writeOnly" : true
          },
          "deviceTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the device's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "patientTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the patient's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "heartRate" : {
            "format" : "int32",
            "description" : "The heart rate measurement value.",
            "type" : "integer"
          },
          "patient" : {
            "$ref" : "#/components/schemas/Patient"
          },
          "item" : {
            "$ref" : "#/components/schemas/Item"
          },
          "device" : {
            "$ref" : "#/components/schemas/Device"
          }
        }
      },
      "HeartRateReadingRequest" : {
        "required" : [ "readingTimestamp" ],
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "format" : "int64",
            "description" : "The id of the device that took the reading.",
            "type" : "integer"
          },
          "deviceIdentifier" : {
            "description" : "The device identifier of the device that took the reading.",
            "type" : "string"
          },
          "patientId" : {
            "format" : "int64",
            "description" : "The id of the patient that took the reading.",
            "type" : "integer"
          },
          "readingTimestamp" : {
            "description" : "The UTC timestamp at which the reading was taken.",
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Instant"
            } ]
          },
          "deviceTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the device's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "manual" : {
            "description" : "True if the reading value was entered manually, false or null otherwise.",
            "type" : "boolean"
          },
          "heartRate" : {
            "format" : "int32",
            "description" : "The heart rate measurement value.",
            "type" : "integer"
          }
        }
      },
      "HeartRateUnit" : {
        "enum" : [ "bpm" ],
        "type" : "string",
        "x-fern-enum" : {
          "bpm" : {
            "description" : "Heart rate unit of measurement is beats per minute."
          }
        }
      },
      "HeartRateVariabilityAlgorithmType" : {
        "enum" : [ "sdann", "sdnn", "sdrr" ],
        "type" : "string",
        "x-fern-enum" : {
          "sdann" : {
            "description" : "Standard deviation of the average NN intervals calculated over short periods."
          },
          "sdnn" : {
            "description" : "Standard deviation of all NN intervals."
          },
          "sdrr" : {
            "description" : "Standard deviation of the differences between adjacent NN intervals."
          }
        }
      },
      "HeartRateVariabilityReading" : {
        "description" : "Impilo's heart rate variability model.",
        "required" : [ "heartRateVariability" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "Unique identifier for the reading.",
            "type" : "integer"
          },
          "readingTimestamp" : {
            "format" : "date-time",
            "type" : "string",
            "example" : "2022-03-10T16:15:50Z",
            "writeOnly" : true
          },
          "manual" : {
            "description" : "True if the reading value was entered manually, false or null otherwise.",
            "type" : "boolean",
            "writeOnly" : true
          },
          "deviceTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the device's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "patientTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the patient's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "heartRate" : {
            "format" : "int32",
            "description" : "The heart rate measurement value.",
            "type" : "integer"
          },
          "heartRateVariability" : {
            "format" : "double",
            "description" : "The heart rate variability value.",
            "type" : "number"
          },
          "heartRateVariabilityDuration" : {
            "format" : "int64",
            "description" : "The duration over which the heart rate variability was measured, in milliseconds.",
            "type" : "integer"
          },
          "patient" : {
            "$ref" : "#/components/schemas/Patient"
          },
          "item" : {
            "$ref" : "#/components/schemas/Item"
          },
          "device" : {
            "$ref" : "#/components/schemas/Device"
          },
          "heartRateVariabilityAlgorithmType" : {
            "$ref" : "#/components/schemas/HeartRateVariabilityAlgorithmType"
          }
        }
      },
      "HeartRateVariabilityReadingRequest" : {
        "required" : [ "readingTimestamp", "heartRateVariability" ],
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "format" : "int64",
            "description" : "The id of the device that took the reading.",
            "type" : "integer"
          },
          "deviceIdentifier" : {
            "description" : "The device identifier of the device that took the reading.",
            "type" : "string"
          },
          "patientId" : {
            "format" : "int64",
            "description" : "The id of the patient that took the reading.",
            "type" : "integer"
          },
          "readingTimestamp" : {
            "description" : "The UTC timestamp at which the reading was taken.",
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Instant"
            } ]
          },
          "deviceTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the device's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "manual" : {
            "description" : "True if the reading value was entered manually, false or null otherwise.",
            "type" : "boolean"
          },
          "heartRate" : {
            "format" : "int32",
            "description" : "The heart rate measurement value.",
            "type" : "integer"
          },
          "heartRateVariability" : {
            "format" : "double",
            "description" : "The heart rate variability value.",
            "type" : "number"
          },
          "heartRateVariabilityDuration" : {
            "format" : "int64",
            "description" : "The duration over which the heart rate variability was measured, in milliseconds.",
            "type" : "integer"
          },
          "heartRateVariabilityAlgorithmType" : {
            "$ref" : "#/components/schemas/HeartRateVariabilityAlgorithmType"
          }
        }
      },
      "Instant" : {
        "format" : "date-time",
        "type" : "string",
        "example" : "2022-03-10T16:15:50Z"
      },
      "InventoryRecord" : {
        "type" : "object",
        "properties" : {
          "item" : {
            "$ref" : "#/components/schemas/Item"
          },
          "newCount" : {
            "format" : "int32",
            "type" : "integer"
          },
          "usedCount" : {
            "format" : "int32",
            "type" : "integer"
          },
          "site" : {
            "$ref" : "#/components/schemas/Site"
          }
        }
      },
      "InventorySummaryRecord" : {
        "type" : "object",
        "properties" : {
          "item" : {
            "$ref" : "#/components/schemas/Item"
          },
          "newCount" : {
            "format" : "int32",
            "type" : "integer"
          },
          "usedCount" : {
            "format" : "int32",
            "type" : "integer"
          }
        }
      },
      "Item" : {
        "description" : "An item is any of the supplies handled by Impilo. Examples include medical devices like a blood pressure monitor or weight scale, but the term 'item' also refers to non-medical supplies like AAA batteries and package inserts. A customer catalog is a subset of all items supported by Impilo. This is set during onboarding and may be modified by your account manager at any time. A customer may view the items in their catalog.",
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "Unique identifier for the item, managed by Impilo.",
            "type" : "integer",
            "readOnly" : true,
            "example" : 1
          },
          "manufacturer" : {
            "description" : "The manufacturer for this item.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Manufacturer"
            } ]
          },
          "name" : {
            "description" : "The name for this item.",
            "type" : "string"
          },
          "model" : {
            "description" : "The manufacturer-assigned model for this item.",
            "type" : "string"
          },
          "sku" : {
            "description" : "The Impilo-assigned SKU for this item.",
            "type" : "string"
          },
          "orderable" : {
            "description" : "Whether an Item is able to be ordered.",
            "type" : "boolean"
          }
        }
      },
      "ItemClass" : {
        "enum" : [ "wearable", "glucose", "miscellaneous", "circulatory", "packaging", "lab", "body", "familyPlanning", "cpap", "connectivity", "generalHealth", "service", "thermometer", "power", "respiratory", "info" ],
        "type" : "string",
        "x-fern-enum" : {
          "wearable" : {
            "description" : "Items related to wearable devices."
          },
          "glucose" : {
            "description" : "Items related to glucose monitoring."
          },
          "miscellaneous" : {
            "description" : "Miscellaneous items."
          },
          "circulatory" : {
            "description" : "Items related to the circulatory system."
          },
          "packaging" : {
            "description" : "Items related to packaging."
          },
          "lab" : {
            "description" : "Items related to laboratory equipment."
          },
          "body" : {
            "description" : "Items related to the body."
          },
          "familyPlanning" : {
            "description" : "Items related to family planning."
          },
          "cpap" : {
            "description" : "Items related to Continuous Positive Airway Pressure (CPAP)."
          },
          "connectivity" : {
            "description" : "Items related to connectivity."
          },
          "generalHealth" : {
            "description" : "Items related to general health."
          },
          "service" : {
            "description" : "Service-related items."
          },
          "thermometer" : {
            "description" : "Items related to thermometers."
          },
          "power" : {
            "description" : "Items related to power supply."
          },
          "respiratory" : {
            "description" : "Items related to the respiratory system."
          },
          "info" : {
            "description" : "Informational items."
          }
        }
      },
      "ItemDetailed" : {
        "description" : "An item is any of the supplies handled by Impilo. Examples include medical devices like a blood pressure monitor or weight scale, but the term 'item' also refers to non-medical supplies like AAA batteries and package inserts. A customer catalog is a subset of all items supported by Impilo. This is set during onboarding and may be modified by your account manager at any time. A customer may view the items in their catalog. Detailed Item views are only seen in the Item list and fetch endpoints -- otherwise, a lighter version of an Item is returned with other non-Item endpoints.",
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "Unique identifier for the item, managed by Impilo.",
            "type" : "integer",
            "readOnly" : true,
            "example" : 1
          },
          "manufacturer" : {
            "description" : "The manufacturer for this item.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Manufacturer"
            } ]
          },
          "name" : {
            "description" : "The name for this item.",
            "type" : "string"
          },
          "model" : {
            "description" : "The manufacturer-assigned model for this item.",
            "type" : "string"
          },
          "sku" : {
            "description" : "The Impilo-assigned SKU for this item.",
            "type" : "string"
          },
          "orderable" : {
            "description" : "Whether an Item is able to be ordered.",
            "type" : "boolean"
          },
          "deviceIdentifierType" : {
            "$ref" : "#/components/schemas/DeviceIdentifierType"
          },
          "itemClass" : {
            "$ref" : "#/components/schemas/ItemClass"
          },
          "itemClassType" : {
            "description" : "The Class Type associated with this item.",
            "type" : "string"
          },
          "size" : {
            "$ref" : "#/components/schemas/ItemSize"
          },
          "dimensions" : {
            "description" : "The physical dimensions of this item.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/ItemDimensions"
            } ]
          },
          "readingType" : {
            "$ref" : "#/components/schemas/ReadingType"
          },
          "certifications" : {
            "type" : "array",
            "items" : { }
          },
          "itemCertifications" : {
            "type" : "array",
            "items" : { }
          }
        }
      },
      "ItemDimensions" : {
        "description" : "The length, width, height, and units of distance for the physical body of the Item.",
        "type" : "object",
        "properties" : {
          "length" : {
            "format" : "double",
            "description" : "The length of the Item.",
            "type" : "number"
          },
          "width" : {
            "format" : "double",
            "description" : "The width of the Item.",
            "type" : "number"
          },
          "height" : {
            "format" : "double",
            "description" : "The height of the Item.",
            "type" : "number"
          },
          "unit" : {
            "$ref" : "#/components/schemas/DimensionUnit"
          }
        }
      },
      "ItemRequest" : {
        "description" : "An ItemRequest object consists of a name (required), a model, and (if applicable) a deviceIdentifierType that is being requested to be created by a Manufacturer.\n\nDevice Identifier Types must match the DeviceIdentifierType model.\n",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "description" : "The name for this item.",
            "type" : "string"
          },
          "model" : {
            "description" : "The manufacturer-assigned model for this item.",
            "type" : "string"
          },
          "deviceIdentifierType" : {
            "$ref" : "#/components/schemas/DeviceIdentifierType"
          }
        }
      },
      "ItemSize" : {
        "enum" : [ "standard", "small", "large", "extraLarge", "medium" ],
        "type" : "string",
        "x-fern-enum" : {
          "standard" : {
            "description" : "Standard sized item."
          },
          "small" : {
            "description" : "Small sized item."
          },
          "large" : {
            "description" : "Large sized item."
          },
          "extraLarge" : {
            "description" : "Extra large sized item."
          },
          "medium" : {
            "description" : "Medium sized item."
          }
        }
      },
      "ItemSort" : {
        "enum" : [ "itemId", "itemName", "itemModel", "itemSku" ],
        "type" : "string"
      },
      "ItemTransferRequest" : {
        "required" : [ "toCustomerId", "transfers" ],
        "type" : "object",
        "properties" : {
          "toCustomerId" : {
            "format" : "int64",
            "description" : "The ID of the Customer to transfer the Devices to.",
            "type" : "integer"
          },
          "transfers" : {
            "description" : "A list of ItemTransfer objects containing the Item IDs and quantities to transfer.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransferItem"
            }
          }
        }
      },
      "Kit" : {
        "description" : "A kit is a named collection of items that can be ordered as one unit.",
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "The name of the kit.",
            "type" : "string"
          },
          "archived" : {
            "description" : "True if the kit is archived, false otherwise.",
            "type" : "boolean"
          },
          "kitItems" : {
            "description" : "An array of kit items.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KitItem"
            }
          }
        }
      },
      "KitItem" : {
        "type" : "object",
        "properties" : {
          "item" : {
            "$ref" : "#/components/schemas/Item"
          },
          "count" : {
            "format" : "int32",
            "type" : "integer"
          }
        }
      },
      "LocalDate" : {
        "format" : "date",
        "type" : "string",
        "example" : "2022-03-10"
      },
      "Manufacturer" : {
        "description" : "A manufacturer is a supplier of an item. Every item has exactly one manufacturer.",
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "Unique identifier for the manufacturer, managed by Impilo.",
            "type" : "integer",
            "readOnly" : true,
            "example" : 1
          },
          "name" : {
            "description" : "The name of the manufacturer.",
            "type" : "string"
          }
        }
      },
      "Order" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "Unique identifier for the order",
            "type" : "integer",
            "readOnly" : true
          },
          "externalOrderIds" : {
            "description" : "An array of order ids specified by the client",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "patient" : {
            "description" : "The patient receiving the order. Exactly one of patient or site must be not null.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Patient"
            } ]
          },
          "site" : {
            "description" : "The site receiving the order. Exactly one of patient or site must be not null.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Site"
            } ]
          },
          "currentStatus" : {
            "description" : "The current status of the order",
            "enum" : [ "availableForPickup", "onHold", "unsuccessfulDelivery", "awaitingShipment", "returnIssued", "pendingInventory", "delivered", "reconfirmAddress", "unableToFulfill", "orderPlaced", "shipped", "voided", "pendingAdditionalInformation" ],
            "type" : "string",
            "readOnly" : true,
            "x-fern-enum" : {
              "availableForPickup" : {
                "description" : "Order is waiting for the recipient to pickup at the post office."
              },
              "onHold" : {
                "description" : "Order is on hold, possibly due to inventory or internal reviews."
              },
              "unsuccessfulDelivery" : {
                "description" : "Delivery of the order was attempted but unsuccessful."
              },
              "awaitingShipment" : {
                "description" : "Order is ready to be shipped but is waiting for the next shipment cycle."
              },
              "returnIssued" : {
                "description" : "A return process has been initiated for the order."
              },
              "pendingInventory" : {
                "description" : "Order is waiting for inventory to become available before it can be fulfilled."
              },
              "delivered" : {
                "description" : "Order has been successfully delivered to the recipient."
              },
              "reconfirmAddress" : {
                "description" : "Customer needs to reconfirm their address."
              },
              "unableToFulfill" : {
                "description" : "Order cannot be fulfilled due to current limitations or issues."
              },
              "orderPlaced" : {
                "description" : "Order has been successfully placed and is in the system."
              },
              "shipped" : {
                "description" : "Order has been shipped to the recipient."
              },
              "voided" : {
                "description" : "Order has been canceled and is no longer valid."
              },
              "pendingAdditionalInformation" : {
                "description" : "Order is pending as additional information is required from the recipient."
              }
            }
          },
          "orderItems" : {
            "description" : "Array of items on the order. At least one of orderItems or orderKits must be not null.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrderItem"
            }
          },
          "orderKits" : {
            "description" : "Array of order kits on the order. At least one of orderItems or orderKits must be not null.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrderKit"
            }
          },
          "orderEvents" : {
            "description" : "Array of order events. These are the status updates for the order.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrderEvent"
            },
            "readOnly" : true
          },
          "orderNotes" : {
            "description" : "Array of order notes. These are additional pieces of information attached to an order.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrderNote"
            }
          },
          "trackingNumbers" : {
            "description" : "Array of tracking numbers for the order.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrackingNumber"
            },
            "readOnly" : true
          },
          "devices" : {
            "description" : "The order item devices",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Device"
            },
            "readOnly" : true
          },
          "packedKits" : {
            "description" : "The kits packed in the order",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PackedKit"
            },
            "readOnly" : true
          },
          "shippingOption" : {
            "$ref" : "#/components/schemas/ShippingOption"
          }
        }
      },
      "OrderEvent" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "eventTimestamp" : {
            "type" : "string"
          }
        }
      },
      "OrderItem" : {
        "type" : "object",
        "properties" : {
          "item" : {
            "$ref" : "#/components/schemas/Item"
          },
          "count" : {
            "format" : "int32",
            "type" : "integer"
          }
        }
      },
      "OrderKit" : {
        "type" : "object",
        "properties" : {
          "kit" : {
            "$ref" : "#/components/schemas/Kit"
          },
          "count" : {
            "format" : "int32",
            "type" : "integer"
          }
        }
      },
      "OrderNote" : {
        "type" : "object",
        "properties" : {
          "note" : {
            "description" : "The actual text of the note.",
            "type" : "string"
          },
          "createdAt" : {
            "description" : "The timestamp at which the note was created.",
            "type" : "string"
          },
          "createdBy" : {
            "description" : "The user who created the note. Can be null.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/EndUser"
            } ]
          }
        }
      },
      "PackedKit" : {
        "type" : "object",
        "properties" : {
          "kit" : {
            "$ref" : "#/components/schemas/Kit"
          },
          "devices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Device"
            }
          }
        }
      },
      "Page" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : { }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageBloodGlucoseReading" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BloodGlucoseReading"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageBloodOxygenReading" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BloodOxygenReading"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageBloodPressureReading" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BloodPressureReading"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageClinicalNote" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClinicalNote"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageDevice" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Device"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageHeartRateReading" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HeartRateReading"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageHeartRateVariabilityReading" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HeartRateVariabilityReading"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageInventoryRecord" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InventoryRecord"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageInventorySummaryRecord" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InventorySummaryRecord"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageItemDetailed" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ItemDetailed"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageKit" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Kit"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageManufacturer" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Manufacturer"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageOrder" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Order"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PagePatient" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Patient"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PagePeakFlowReading" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PeakFlowReading"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageProcurement" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Procurement"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageReturn" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Return"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageSite" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Site"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageSleepMatActivityReading" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SleepMatActivityReading"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageSleepMatDurationReading" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SleepMatDurationReading"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageSupportTicket" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SupportTicket"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageTemperatureReading" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TemperatureReading"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageTransferRequest" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransferRequest"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageWebhook" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Webhook"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageWebhookLog" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WebhookLog"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "PageWeightReading" : {
        "description" : "Pagination is supported whenever an API response returns a list of objects. In paginated responses, objects are nested in a content attribute and have first and last attributes indicating whether you are on the first or last page, respectively. Additionally, the pagination response includes a page attribute indicating the current page number, a size attribute indicating the current page size, and a total attribute indicating the number of objects matching the request.",
        "type" : "object",
        "properties" : {
          "content" : {
            "description" : "The content of the page, consisting of a list of objects.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeightReading"
            }
          },
          "page" : {
            "format" : "int32",
            "description" : "The current page number. The first page has value 1.",
            "type" : "integer"
          },
          "size" : {
            "format" : "int32",
            "description" : "The current page size. Default 15, maximum 250.",
            "type" : "integer"
          },
          "total" : {
            "format" : "int32",
            "description" : "The number of objects matching the request.",
            "type" : "integer"
          },
          "first" : {
            "description" : "True if this is the first page, false otherwise.",
            "type" : "boolean"
          },
          "last" : {
            "description" : "True if this is the last page, false otherwise.",
            "type" : "boolean"
          }
        }
      },
      "Patient" : {
        "required" : [ "firstName", "lastName" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "Unique identifier for the patient, managed by Impilo.",
            "type" : "integer",
            "readOnly" : true,
            "example" : 1
          },
          "externalIdentifier" : {
            "description" : "Unique external identifier for the patient, managed by the customer.",
            "type" : "string",
            "example" : "1234abcd"
          },
          "firstName" : {
            "description" : "The patient's first name.",
            "type" : "string",
            "example" : "John"
          },
          "lastName" : {
            "description" : "The patient's last name.",
            "type" : "string",
            "example" : "Doe"
          },
          "dateOfBirth" : {
            "format" : "date",
            "description" : "The patient's date of birth in the format YYYY-MM-DD.",
            "type" : "string",
            "example" : "1980-01-01"
          },
          "email" : {
            "format" : "email",
            "description" : "The patient's email.",
            "type" : "string",
            "example" : "john.doe@example.com"
          },
          "phoneNumber" : {
            "description" : "The patient's phone number.",
            "type" : "string",
            "example" : "+1234567890"
          },
          "archived" : {
            "description" : "True if the patient is archived, false otherwise.",
            "type" : "boolean",
            "example" : true
          },
          "address" : {
            "description" : "The patient's shipping address. Required on all endpoints except PATCH patient.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Address"
            } ]
          },
          "site" : {
            "description" : "The site responsible for this patient.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Site"
            } ]
          },
          "enrolled" : {
            "description" : "The enrollment status. False if disenrolled.",
            "type" : "boolean"
          },
          "sex" : {
            "$ref" : "#/components/schemas/Sex"
          }
        }
      },
      "PatientSort" : {
        "enum" : [ "firstName", "lastName", "patientId" ],
        "type" : "string"
      },
      "PeakExpiratoryFlowUnit" : {
        "enum" : [ "lpm" ],
        "type" : "string",
        "x-fern-enum" : {
          "lpm" : {
            "description" : "Peak expiratory flow unit of measurement is liters per minute."
          }
        }
      },
      "PeakFlowReading" : {
        "description" : "This page describes Impilo's peak flow reading model.",
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "Unique identifier for the reading.",
            "type" : "integer"
          },
          "readingTimestamp" : {
            "format" : "date-time",
            "type" : "string",
            "example" : "2022-03-10T16:15:50Z",
            "writeOnly" : true
          },
          "manual" : {
            "description" : "True if the reading value was entered manually, false or null otherwise.",
            "type" : "boolean",
            "writeOnly" : true
          },
          "deviceTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the device's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "patientTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the patient's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "patient" : {
            "$ref" : "#/components/schemas/Patient"
          },
          "item" : {
            "$ref" : "#/components/schemas/Item"
          },
          "device" : {
            "$ref" : "#/components/schemas/Device"
          },
          "peakExpiratoryFlow" : {
            "format" : "double",
            "type" : "number"
          },
          "forcedExpiratoryVolume" : {
            "format" : "double",
            "type" : "number"
          },
          "peakExpiratoryFlowUnit" : {
            "$ref" : "#/components/schemas/PeakExpiratoryFlowUnit"
          },
          "forcedExpiratoryVolumeUnit" : {
            "$ref" : "#/components/schemas/ForcedExpiratoryVolumeUnit"
          }
        }
      },
      "PeakFlowReadingRequest" : {
        "description" : "This page describes Impilo's peak flow reading request model.",
        "required" : [ "readingTimestamp", "peakExpiratoryFlow" ],
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "format" : "int64",
            "description" : "The id of the device that took the reading.",
            "type" : "integer"
          },
          "deviceIdentifier" : {
            "description" : "The device identifier of the device that took the reading.",
            "type" : "string"
          },
          "patientId" : {
            "format" : "int64",
            "description" : "The id of the patient that took the reading.",
            "type" : "integer"
          },
          "readingTimestamp" : {
            "format" : "date-time",
            "description" : "The UTC timestamp at which the reading was taken.",
            "type" : "string",
            "example" : "2022-03-10T16:15:50Z"
          },
          "deviceTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the device's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "peakExpiratoryFlow" : {
            "format" : "double",
            "description" : "The Peak Expiratory Flow, measured in L/min.",
            "type" : "number"
          },
          "forcedExpiratoryVolumeInOneSecond" : {
            "format" : "double",
            "description" : "The Forced Expiratory Volume in One Second value, in L.",
            "type" : "number"
          },
          "manual" : {
            "description" : "True if the reading value was entered manually, false or null otherwise.",
            "type" : "boolean"
          }
        }
      },
      "Procurement" : {
        "description" : "A procurement is a procurement of devices by a customer.",
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "Unique identifier for the site, managed by Impilo.",
            "type" : "integer",
            "readOnly" : true,
            "example" : 1
          },
          "currentStatus" : {
            "description" : "The current status of the procurement",
            "type" : "string"
          },
          "procurementType" : {
            "description" : "The type of the procurement.",
            "type" : "string"
          },
          "procurementItems" : {
            "description" : "List of items on the procurement",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProcurementItem"
            }
          },
          "procurementEvents" : {
            "description" : "List of events attached to the procurement",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProcurementEvent"
            }
          }
        }
      },
      "ProcurementEvent" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "eventTimestamp" : {
            "type" : "string"
          }
        }
      },
      "ProcurementItem" : {
        "type" : "object",
        "properties" : {
          "item" : {
            "$ref" : "#/components/schemas/Item"
          },
          "quantityRequested" : {
            "format" : "int32",
            "type" : "integer"
          },
          "quantityApproved" : {
            "format" : "int32",
            "type" : "integer"
          },
          "costPerItem" : {
            "format" : "double",
            "type" : "number"
          },
          "trackingNumbers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrackingNumber"
            }
          }
        }
      },
      "ReadingType" : {
        "enum" : [ "bloodPressure", "sleepMatActivity", "heartRateVariability", "heartRate", "spo2", "temperature", "weight", "peakFlow", "continuousBloodGlucose", "sleepMatDuration", "bloodGlucose" ],
        "type" : "string",
        "x-fern-enum" : {
          "bloodPressure" : {
            "description" : "Blood pressure reading type."
          },
          "sleepMatActivity" : {
            "description" : "Sleep Mat Activity reading type."
          },
          "heartRateVariability" : {
            "description" : "Heart rate variability reading type."
          },
          "heartRate" : {
            "description" : "Heart rate reading type."
          },
          "spo2" : {
            "description" : "SPO2 (oxygen saturation) reading type."
          },
          "temperature" : {
            "description" : "Temperature reading type."
          },
          "weight" : {
            "description" : "Weight reading type."
          },
          "peakFlow" : {
            "description" : "Peak Flow expiratory reading type."
          },
          "continuousBloodGlucose" : {
            "description" : "Continuous blood glucose reading type."
          },
          "sleepMatDuration" : {
            "description" : "Sleep Mat Duration reading type."
          },
          "bloodGlucose" : {
            "description" : "Blood glucose reading type."
          }
        }
      },
      "Return" : {
        "description" : "A return is an occurrence of a device(s) or non-tracked item(s) being returned by a Patient.",
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "Unique identifier for the return, managed by Impilo.",
            "type" : "integer",
            "readOnly" : true,
            "example" : 1
          },
          "patient" : {
            "description" : "The patient that is making the return.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Patient"
            } ]
          },
          "site" : {
            "description" : "The site that is making the return.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Site"
            } ]
          },
          "currentStatus" : {
            "description" : "The current status of this return.",
            "type" : "string"
          },
          "returnKits" : {
            "description" : "An array of kits related to items expected on this return.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Kit"
            }
          },
          "returnItems" : {
            "description" : "An array of non-tracked items expected on this return.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReturnItem"
            }
          },
          "returnEvents" : {
            "description" : "An array of the return events for this return.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReturnEvent"
            }
          },
          "trackingNumbers" : {
            "description" : "An array of tracking numbers associated with this return.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrackingNumber"
            }
          },
          "returnDevices" : {
            "description" : "An array of devices expected on this return.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Device"
            }
          },
          "relatedOrderId" : {
            "format" : "int64",
            "description" : "The identifier of a related order, if exists.",
            "type" : "integer"
          }
        }
      },
      "ReturnDevice" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "The id of the device expected on this return.",
            "type" : "integer"
          }
        }
      },
      "ReturnEvent" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "description" : "The event type for the Return Event.",
            "type" : "string"
          },
          "eventTimestamp" : {
            "description" : "The timestamp when the Return Event was created.",
            "type" : "string"
          }
        }
      },
      "ReturnItem" : {
        "type" : "object",
        "properties" : {
          "item" : {
            "description" : "The item type expected on this return.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Item"
            } ]
          },
          "count" : {
            "format" : "int32",
            "description" : "The quantity of this item type expected on this return.",
            "type" : "integer"
          }
        }
      },
      "ReturnMerchAuthStatus" : {
        "enum" : [ "receiving", "arrived", "pendingReturn", "outbound", "rmaPlaced", "voided", "completed", "inTransit" ],
        "type" : "string",
        "x-fern-enum" : {
          "receiving" : {
            "description" : "Return merchandise authorization is in receiving."
          },
          "arrived" : {
            "description" : "Return merchandise authorization has arrived at Impilo."
          },
          "pendingReturn" : {
            "description" : "Return merchandise authorization is pending return."
          },
          "outbound" : {
            "description" : "Return merchandise authorization is outbound to patient."
          },
          "rmaPlaced" : {
            "description" : "Return merchandise authorization has been placed."
          },
          "voided" : {
            "description" : "Return merchandise authorization has been voided."
          },
          "completed" : {
            "description" : "Return merchandise authorization is complete."
          },
          "inTransit" : {
            "description" : "Return merchandise authorization is in transit to Impilo."
          }
        }
      },
      "Sex" : {
        "enum" : [ "other", "female", "male", "unknown" ],
        "type" : "string",
        "x-fern-enum" : {
          "other" : {
            "description" : "Sex other than male or female."
          },
          "female" : {
            "description" : "Female sex."
          },
          "male" : {
            "description" : "Male sex."
          },
          "unknown" : {
            "description" : "Sex is unknown."
          }
        }
      },
      "ShippingOption" : {
        "enum" : [ "standard", "overnight" ],
        "type" : "string",
        "x-fern-enum" : {
          "standard" : {
            "description" : "Standard shipping option."
          },
          "overnight" : {
            "description" : "Overnight shipping option."
          }
        }
      },
      "SimpleReturnItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "The id of the item expected on this return.",
            "type" : "integer"
          },
          "count" : {
            "format" : "int32",
            "description" : "The item quantity being returned",
            "type" : "integer"
          }
        }
      },
      "Site" : {
        "description" : "A site is a customer-managed location that interacts with Impilo's services. Patient may be associated with a site, and a customer may order items and hold inventory at a site.",
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "Unique identifier for the site, managed by Impilo.",
            "type" : "integer",
            "readOnly" : true,
            "example" : 1
          },
          "name" : {
            "description" : "The name of the site.",
            "type" : "string"
          },
          "active" : {
            "description" : "True if the site is active, false otherwise.",
            "type" : "boolean"
          },
          "phoneNumber" : {
            "description" : "Phone number for the site.",
            "type" : "string"
          },
          "address" : {
            "description" : "The shipping address for the site.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Address"
            } ]
          }
        }
      },
      "SleepMatActivityReading" : {
        "description" : "This page describes Impilo's sleep mat activity reading model.",
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "Unique identifier for the reading.",
            "type" : "integer"
          },
          "readingTimestamp" : {
            "format" : "date-time",
            "type" : "string",
            "example" : "2022-03-10T16:15:50Z",
            "writeOnly" : true
          },
          "manual" : {
            "description" : "True if the reading value was entered manually, false or null otherwise.",
            "type" : "boolean",
            "writeOnly" : true
          },
          "deviceTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the device's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "patientTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the patient's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "patient" : {
            "$ref" : "#/components/schemas/Patient"
          },
          "item" : {
            "$ref" : "#/components/schemas/Item"
          },
          "device" : {
            "$ref" : "#/components/schemas/Device"
          },
          "respiration" : {
            "format" : "int32",
            "type" : "integer"
          },
          "heartRate" : {
            "format" : "int32",
            "type" : "integer"
          },
          "bodyTurnOver" : {
            "format" : "int32",
            "type" : "integer"
          },
          "duration" : {
            "type" : "string"
          },
          "bedTime" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "getUpTime" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "SleepMatActivityReadingRequest" : {
        "description" : "This page describes Impilo's sleep mat activity reading request model.",
        "required" : [ "readingTimestamp", "respiration", "heartRate", "bodyTurnOver", "duration", "bedTime", "upTime" ],
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "format" : "int64",
            "description" : "The id of the device that took the reading.",
            "type" : "integer"
          },
          "deviceIdentifier" : {
            "description" : "The device identifier of the device that took the reading.",
            "type" : "string"
          },
          "patientId" : {
            "format" : "int64",
            "description" : "The id of the patient that took the reading.",
            "type" : "integer"
          },
          "readingTimestamp" : {
            "format" : "date-time",
            "description" : "The UTC timestamp at which the reading was taken.",
            "type" : "string",
            "example" : "2022-03-10T16:15:50Z"
          },
          "deviceTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the device's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "respiration" : {
            "format" : "int32",
            "description" : "Respiratory rate per minute during sleep.",
            "type" : "integer"
          },
          "heartRate" : {
            "format" : "int32",
            "description" : "Average heart rate per minutes during recorded period.",
            "type" : "integer"
          },
          "bodyTurnOver" : {
            "format" : "int32",
            "description" : "Number of times the subject rolled over during the recorded period.",
            "type" : "integer"
          },
          "duration" : {
            "description" : "Duration of sleep during tracked period.",
            "type" : "string"
          },
          "bedTime" : {
            "description" : "List of times sleep started during the period.",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "manual" : {
            "description" : "True if the reading value was entered manually, false or null otherwise.",
            "type" : "boolean"
          },
          "upTime" : {
            "description" : "List of times sleep was disrupted due to subject getting up during the period.",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "getUpTime" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "writeOnly" : true
          }
        }
      },
      "SleepMatDurationReading" : {
        "description" : "This page describes Impilo's sleep mat duration reading model.",
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "Unique identifier for the reading.",
            "type" : "integer"
          },
          "readingTimestamp" : {
            "format" : "date-time",
            "type" : "string",
            "example" : "2022-03-10T16:15:50Z",
            "writeOnly" : true
          },
          "manual" : {
            "description" : "True if the reading value was entered manually, false or null otherwise.",
            "type" : "boolean",
            "writeOnly" : true
          },
          "deviceTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the device's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "patientTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the patient's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "patient" : {
            "$ref" : "#/components/schemas/Patient"
          },
          "item" : {
            "$ref" : "#/components/schemas/Item"
          },
          "device" : {
            "$ref" : "#/components/schemas/Device"
          },
          "respiration" : {
            "format" : "int32",
            "type" : "integer"
          },
          "heartRate" : {
            "format" : "int32",
            "type" : "integer"
          },
          "bodyTurnOver" : {
            "format" : "int32",
            "type" : "integer"
          },
          "duration" : {
            "type" : "string"
          },
          "rem" : {
            "format" : "int32",
            "type" : "integer"
          },
          "deepSleep" : {
            "format" : "int32",
            "type" : "integer"
          },
          "lightSleep" : {
            "format" : "int32",
            "type" : "integer"
          }
        }
      },
      "SleepMatDurationReadingRequest" : {
        "description" : "This page describes Impilo's sleep mat duration reading request model.",
        "required" : [ "readingTimestamp", "respiration", "heartRate", "bodyTurnOver", "duration", "rem", "deepSleep", "lightSleep" ],
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "format" : "int64",
            "description" : "The id of the device that took the reading.",
            "type" : "integer"
          },
          "deviceIdentifier" : {
            "description" : "The device identifier of the device that took the reading.",
            "type" : "string"
          },
          "patientId" : {
            "format" : "int64",
            "description" : "The id of the patient that took the reading.",
            "type" : "integer"
          },
          "readingTimestamp" : {
            "format" : "date-time",
            "description" : "The UTC timestamp at which the reading was taken.",
            "type" : "string",
            "example" : "2022-03-10T16:15:50Z"
          },
          "deviceTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the device's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "respiration" : {
            "format" : "int32",
            "description" : "Respiratory rate per minute during sleep.",
            "type" : "integer"
          },
          "heartRate" : {
            "format" : "int32",
            "description" : "Average heart rate per minutes during recorded period.",
            "type" : "integer"
          },
          "bodyTurnOver" : {
            "format" : "int32",
            "description" : "Number of times the subject rolled over during the recorded period.",
            "type" : "integer"
          },
          "duration" : {
            "description" : "Duration of sleep during tracked period.",
            "type" : "string"
          },
          "rem" : {
            "format" : "int32",
            "description" : "Number of minutes of detected rem sleep.",
            "type" : "integer"
          },
          "deepSleep" : {
            "format" : "int32",
            "description" : "Number of minutes of detected deep sleep.",
            "type" : "integer"
          },
          "lightSleep" : {
            "format" : "int32",
            "description" : "Number of minutes of detected light sleep.",
            "type" : "integer"
          },
          "manual" : {
            "description" : "True if the reading value was entered manually, false or null otherwise.",
            "type" : "boolean"
          }
        }
      },
      "SupportTicket" : {
        "description" : "A Support Ticket is a case that's been opened by either an Impilo team member, a Customer team member, or a Patient.",
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "The ID of the Support Ticket.",
            "type" : "integer"
          },
          "customer" : {
            "description" : "The Customer to whom this Support Ticket belongs.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Customer"
            } ]
          },
          "patient" : {
            "description" : "The Patient that the Support Ticket involves, if applicable.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Patient"
            } ]
          },
          "order" : {
            "description" : "The Order that the Support Ticket involves, if applicable.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Order"
            } ]
          },
          "device" : {
            "description" : "The Device that the Support Ticket involves, if applicable.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Device"
            } ]
          },
          "site" : {
            "description" : "The Site that the Support Ticket involves, if applicable.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Site"
            } ]
          },
          "ticketType" : {
            "description" : "The type of Support Ticket.",
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/SupportTicketType"
            } ]
          },
          "supportTicketNotes" : {
            "description" : "A list of all SupportTicketNotes attached to this Support Ticket.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SupportTicketNote"
            }
          },
          "supportTicketEvents" : {
            "description" : "A list of all SupportTicketEvents attached to this Support Ticket.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SupportTicketEvent"
            }
          },
          "currentStatus" : {
            "description" : "The current status of the Support Ticket.",
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/SupportTicketStatus"
            } ]
          },
          "open" : {
            "description" : "Whether or not the ticket is considered open or closed.",
            "type" : "boolean"
          },
          "assignedTeam" : {
            "description" : "The team that's assigned this Support Ticket, if any.",
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Team"
            } ]
          },
          "assignee" : {
            "description" : "The EndUser assigned to this Support Ticket, if any.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/EndUser"
            } ]
          },
          "createdBy" : {
            "description" : "The creator of this Support Ticket.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/EndUser"
            } ]
          },
          "createdAt" : {
            "format" : "date-time",
            "description" : "The timestamp when the Support Ticket was created.",
            "type" : "string",
            "example" : "2022-03-10T16:15:50Z"
          },
          "lastUpdated" : {
            "format" : "date-time",
            "description" : "The most recent time that this Support Ticket was updated in some form.",
            "type" : "string",
            "example" : "2022-03-10T16:15:50Z"
          }
        }
      },
      "SupportTicketAssigneeRequest" : {
        "required" : [ "email" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "description" : "The email address to note as the assignee for the Support Ticket.",
            "pattern" : "\\S",
            "type" : "string"
          }
        }
      },
      "SupportTicketEvent" : {
        "description" : "A representation of an event occurrence for a Support Ticket.",
        "type" : "object",
        "properties" : {
          "eventType" : {
            "description" : "The type of event that occurred.",
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/SupportTicketEventType"
            } ]
          },
          "createdAt" : {
            "format" : "date-time",
            "description" : "The timestamp of the event occurrence.",
            "type" : "string",
            "example" : "2022-03-10T16:15:50Z"
          }
        }
      },
      "SupportTicketEventRequest" : {
        "required" : [ "event" ],
        "type" : "object",
        "properties" : {
          "event" : {
            "description" : "The requested event to add to the Support Ticket.",
            "pattern" : "\\S",
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/SupportTicketEventType"
            } ]
          },
          "note" : {
            "description" : "The note to attach alongside the event.",
            "type" : "string"
          }
        }
      },
      "SupportTicketEventType" : {
        "enum" : [ "internalEscalationReturnToSender", "withPatientOver7Days", "onboardingSuccessfulPatientEnrollment", "addressConfirmationEscalatedToCustomer", "closedUnresolvedLabOrder", "customerEscalationContactAttemptedFinal", "enrOinSuccess", "otherOrderNotProcessed", "newAddressConfirmation", "enrEscWrongNumber", "pswIpDeliveredNoAnswer", "newReturnToSender", "enrOoNoSmartphone", "deviceTechnicalSupportResolvedSerialNumberAdded", "holdCallBackRequestedLabOrder", "enrOoHasAltApp", "initiateNewRma", "returnMerchandiseAuthorizationPatientConfirmed", "thirdContactAttempt", "newTechnicalSupport", "enrollmentCompletePatientEnrollment", "inProgressInTransitToLab", "enrOoPrivacyConcern", "otherMissingPackage", "enrOoSelfEnrolled", "closedResolvedReturnToSender", "returnMerchandiseAuthorizationResendRma", "actionInProgressTechnicalSupport", "customerDeviceInquiryManufacturerResolvedReadingTaken", "patientSetupWelcomeConductedDeviceInquiryRqrd", "deviceTechnicalSupportResolvedReadingTaken", "customerEscalationGeneralInquiry", "operationsPatientRefusedToSendDeviceBack", "customerEscalationUnableToReachPatientTechnicalSupport", "returnMerchandiseAuthorizationUnresolved", "closedResolvedReturnMerchandiseAuthorization", "enrOoOptOut", "pswIpCustomerEscalation", "ticketClosed", "returnMerchandiseAuthorizationReceived", "firstContactAttemptEmail", "customerEscalationOtherReturnToSender", "closedUnresolvedTechnicalSupport", "returnMerchandiseAuthorizationNewDisenrollment", "otherIncorrectDevicesShipped", "holdCallBackRequestedPatientEngagement", "pswDisenrollRma", "onboardingCompletePatientEnrollment", "enrOhSms", "customerDeviceInquiryNoDataReadingsCheckSerialSim", "returnMerchandiseAuthorizationLostClaim", "holdCallBackRequestedPatientSetup", "customerEscalationUnableToReachPatientPatientSetup", "newPatientSetup", "newEnrollmentPatientEnrollment", "enrOoRevisit", "inProgressInTransitToWarehouse", "operationsCustomerUnresponsive", "deviceTechnicalSupportMeetingRescheduledFirst", "deviceTechnicalSupportMeetingRescheduledSecond", "deviceTechnicalSupportStillInvestigating", "thirdContactAttemptSms", "enrIpNoAnswer", "finalContactAttemptSms", "pswClosedUnreachable", "inTransitToPatientReturnMerchandiseAuthorization", "inTransitToImpilo", "closedUnresolvedDeviceClaim", "enrOoDeceased", "customerEscalationDeviceReplacementRequested", "operationsFUViaSlackToOpsTeam", "holdCallBackRequestedReturnMerchandiseAuthorization", "addressConfirmationUnableToConfirmAddress", "enrOoHealthy", "actionInProgressAddressConfirmation", "internalEscalationAddressConfirmation", "returnMerchandiseAuthorizationRmaWithPatientNoAction", "closedUnresolvedReturnToSender", "newPatientEngagement", "addressConfirmationShipmentCancelled", "thirdContactAttemptEmail", "patientSetupMeetingRescheduledFirst", "closedResolvedPatientEngagement", "customerEscalationOtherLabOrder", "operationsDeviceNotOnInventoryTrackingReceived", "deviceTechnicalSupportEscalatedToEngineering", "patientSetupMeetingRescheduledSecond", "deviceInTransitPatientEnrollment", "patientSetupWelcomeConductedReadingTaken", "actionInProgressReturnToSender", "otherUnresolved", "otherEscalatedToAppropriateTeam", "enrOoInAltProgram", "customerEscalationUnableToReachPatientLabOrder", "addressConfirmationAddressConfirmed", "actionInProgressPatientEngagement", "customerEscalationDisenrollmentRequest", "inTransitToPatientReturnToSender", "finalContactAttempt", "deviceTechnicalSupportErrorCodeDeviceMalfunction", "enrIpCustomerEscalation", "pswIpPendingDelivery", "closedResolvedAddressConfirmation", "deviceTechnicalSupportMeetingNotConducted", "returnMerchandiseAuthorizationNewRmaDeliveredOutboundEmail", "customerEscalationOperations", "actionInProgressLabOrder", "internalEscalationTechnicalSupport", "closedUnresolvedAddressConfirmation", "enrClosedUnreachable", "internalEscalationPatientEngagement", "patientSetupPatientDevicesDelivered", "customerEscalationContactAttemptedAdditional", "operationsPushedToOpsForSupport", "patientSetupMeetingScheduled", "unresolvedCustomerOrPatientUnresponsive", "firstContactAttempt", "holdCallBackRequestedAddressConfirmation", "pwsIpCallBackRequest", "internalEscalationOperations", "otherNeedAdditionalInformationFromCustomer", "otherClaimCreated", "returnMerchandiseAuthorizationInTransit", "other", "customerEscalationUnableToReachPatientPatientEnrollment", "customerEscalationOtherPatientEnrollment", "pjIpSmsAttempted", "pendingReview", "customerEscalationContactAttemptedFirst", "deviceTechnicalSupportUnresolvedPatientCustomerUnresponsive", "deviceTechnicalSupportBluetoothConnectivityError", "onboardingNewPatientEnrollment", "additionalContactAttemptEmail", "pswActiveCompletedPsw", "otherSpecialRequest", "addressConfirmationInvalidAddressPreShip", "holdCallBackRequestedTechnicalSupport", "actionInProgressPatientSetup", "addressConfirmationReturnToSenderRts", "operationsPatientAgreedToSendRightDeviceBack", "secondContactAttempt", "internalEscalationLabOrder", "closedUnresolvedReturnMerchandiseAuthorization", "closedResolvedPatientSetup", "customerEscalationOtherReturnMerchandiseAuthorization", "enrNew", "newLabOrder", "newOperations", "returnMerchandiseAuthorizationRequestForRmaFulfilled", "internalEscalationGeneralInquiry", "patientSetupMeetingNotConducted", "customerDeviceInquiryManufacturerUnresolvedRmaIssued", "pjIpCallAttempted", "enrIpCallBackRequest", "deviceTechnicalSupportMeetingScheduled", "operationsPatientUnresponsive", "holdCallBackRequestedPatientEnrollment", "secondContactAttemptSms", "newReturnMerchandiseAuthorization", "closedResolvedDeviceClaim", "holdCallBackRequestedReturnToSender", "patientSetupWelcomeConductedRmaIssued", "onboardingInProgressPatientEnrollment", "pjIpEmailAttempted", "actionInProgressOperations", "actionInProgressDeviceClaim", "otherCheckOnClaimStatus", "firstContactAttemptSms", "returnMerchandiseAuthorizationRmaToSendToPatient", "assigneeModified", "customerEscalationWithPatient", "newDeviceClaim", "statusModified", "enrOoTechAverse", "customerDeviceInquiryCustomerPatientUnresponsive", "ticketReopened", "customerEscalationOtherTechnicalSupport", "customerEscalationUnableToReachPatientPatientEngagement", "operationsWrongDeviceReceived", "closedResolvedTechnicalSupport", "internalEscalationPatientEnrollment", "customerEscalationUnableToReachPatientAddressConfirmation", "addressConfirmationPatientRefusedRts", "completeGeneralInquiry", "actionInProgressWithPatient", "enrollmentOptOutPatientEnrollment", "deviceTechnicalSupportFollowedUpWithEngineeringSlackFU", "newGeneralInquiry", "customerEscalationContactAttemptedSecond", "actionInProgressGeneralInquiry", "completeOperationsOperations", "additionalContactAttempt", "patientSetupOrderShipped", "closedUnresolvedPatientSetup", "ticketCreated", "secondContactAttemptEmail", "customerEscalationOtherAddressConfirmation", "finalContactAttemptEmail", "customerEscalationContactAttemptedThird", "internalEscalationReturnMerchandiseAuthorization", "deviceTechnicalSupportUnresolvedRmaIssued", "inProgressAtLab", "operationsEscalatedToOpsManagerForResolution", "deviceTechnicalSupportResolvedDataPushedByEngineering", "returnMerchandiseAuthorizationInformationRequired", "additionalContactAttemptSms", "closedUnresolvedPatientEngagement", "customerEscalationOtherPatientSetup", "enrollmentInProgressPatientEnrollment", "closedResolvedLabOrder", "deviceTechnicalSupportNeedSerialNumberAdded", "operationsNeedAdditionalSupportFromOps", "internalEscalationPatientSetup", "customerEscalationUnableToReachPatientReturnToSender", "deviceTechnicalSupportUnresolvedDeviceInquiryRequired" ],
        "type" : "string"
      },
      "SupportTicketNote" : {
        "description" : "A note that's attached to a given Support Ticket.",
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "description" : "The user that created the note.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/EndUser"
            } ]
          },
          "note" : {
            "description" : "The actual text of the note.",
            "type" : "string"
          },
          "createdAt" : {
            "format" : "date-time",
            "description" : "The timestamp when the note was created.",
            "type" : "string",
            "example" : "2022-03-10T16:15:50Z"
          }
        }
      },
      "SupportTicketNoteRequest" : {
        "required" : [ "note" ],
        "type" : "object",
        "properties" : {
          "note" : {
            "description" : "The note to post to the Support Ticket.",
            "pattern" : "\\S",
            "type" : "string"
          }
        }
      },
      "SupportTicketRequest" : {
        "description" : "A Support Ticket is a case that's been opened by either an Impilo team member, a Customer team member, or a Patient.",
        "type" : "object",
        "properties" : {
          "patient" : {
            "description" : "The Patient that the Support Ticket involves, if applicable. Only the ID is required.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Patient"
            } ]
          },
          "order" : {
            "description" : "The Order that the Support Ticket involves, if applicable. Only the ID is required.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Order"
            } ]
          },
          "device" : {
            "description" : "The Device that the Support Ticket involves, if applicable. Only the ID is required.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Device"
            } ]
          },
          "site" : {
            "description" : "The Site that the Support Ticket involves, if applicable. Only the ID is required.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Site"
            } ]
          },
          "ticketType" : {
            "description" : "The type of Support Ticket.",
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/SupportTicketType"
            } ]
          },
          "note" : {
            "description" : "A list of all SupportTicketNotes attached to this Support Ticket.",
            "type" : "string"
          }
        }
      },
      "SupportTicketStatus" : {
        "enum" : [ "closed", "open", "needsIntake" ],
        "type" : "string"
      },
      "SupportTicketType" : {
        "enum" : [ "other", "engagement", "labOrder", "deviceTechnicalSupport", "patientSetup", "patientEngagement", "returnToSender", "mobileSupport", "customerDeviceInquiry", "operations", "alert", "clinicalSupport", "generalInquiry", "patientEnrollment", "technicalSupport", "addressConfirmation", "patientJourney", "deviceClaim", "returnMerchandiseAuthorization" ],
        "type" : "string",
        "x-fern-enum" : {
          "other" : {
            "description" : "Other general inquiries support ticket."
          },
          "engagement" : {
            "description" : "Engagement-related support ticket."
          },
          "labOrder" : {
            "description" : "Lab order support ticket."
          },
          "deviceTechnicalSupport" : {
            "description" : "Device technical support ticket."
          },
          "patientSetup" : {
            "description" : "Patient setup support ticket."
          },
          "patientEngagement" : {
            "description" : "Patient engagement support ticket."
          },
          "returnToSender" : {
            "description" : "Return to sender support ticket."
          },
          "mobileSupport" : {
            "description" : "Mobile support ticket."
          },
          "customerDeviceInquiry" : {
            "description" : "Customer device inquiry support ticket."
          },
          "operations" : {
            "description" : "Operations-related support ticket."
          },
          "alert" : {
            "description" : "Alert related support ticket"
          },
          "clinicalSupport" : {
            "description" : "Clinical support ticket."
          },
          "generalInquiry" : {
            "description" : "General inquiry support ticket."
          },
          "patientEnrollment" : {
            "description" : "Patient enrollment support ticket."
          },
          "technicalSupport" : {
            "description" : "Technical support ticket."
          },
          "addressConfirmation" : {
            "description" : "Address confirmation support ticket."
          },
          "patientJourney" : {
            "description" : "Patient journey support ticket."
          },
          "deviceClaim" : {
            "description" : "Device claims support ticket."
          },
          "returnMerchandiseAuthorization" : {
            "description" : "Return merchandise authorization support ticket."
          }
        }
      },
      "Team" : {
        "enum" : [ "operations", "engineering", "accounts", "support", "sales" ],
        "type" : "string"
      },
      "TemperatureReading" : {
        "description" : "This page describes Impilo's temperature reading model.",
        "required" : [ "readingTimestamp" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "Unique identifier for the reading.",
            "type" : "integer"
          },
          "readingTimestamp" : {
            "format" : "date-time",
            "description" : "The UTC timestamp at which the reading was taken.",
            "type" : "string",
            "writeOnly" : true
          },
          "manual" : {
            "description" : "True if the reading value was entered manually, false or null otherwise.",
            "type" : "boolean",
            "writeOnly" : true
          },
          "deviceTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the device's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "patientTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the patient's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "patient" : {
            "description" : "The patient who took the reading.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Patient"
            } ]
          },
          "item" : {
            "description" : "The item used to take the reading.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Item"
            } ]
          },
          "device" : {
            "description" : "The device used to take the reading.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Device"
            } ]
          },
          "temperatureUnit" : {
            "description" : "The unit in which the temperature was measured.",
            "type" : "string"
          },
          "temperature" : {
            "format" : "double",
            "description" : "The temperature measurement value.",
            "type" : "number"
          }
        }
      },
      "TemperatureReadingRequest" : {
        "description" : "This page describes Impilo's temperature reading model.",
        "required" : [ "readingTimestamp", "temperatureUnit", "temperature" ],
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "format" : "int64",
            "description" : "The id of the device that took the reading.",
            "type" : "integer"
          },
          "deviceIdentifier" : {
            "description" : "The device identifier of the device that took the reading.",
            "type" : "string"
          },
          "patientId" : {
            "format" : "int64",
            "description" : "The id of the patient that took the reading.",
            "type" : "integer"
          },
          "readingTimestamp" : {
            "format" : "date-time",
            "description" : "The UTC timestamp at which the reading was taken.",
            "type" : "string",
            "example" : "2022-03-10T16:15:50Z"
          },
          "deviceTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the device's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "temperatureUnit" : {
            "description" : "The unit in which the temperature was measured.",
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TemperatureUnit"
            } ]
          },
          "temperature" : {
            "format" : "double",
            "description" : "The temperature measurement value.",
            "type" : "number"
          },
          "manual" : {
            "description" : "True if the reading value was entered manually, false or null otherwise.",
            "type" : "boolean"
          }
        }
      },
      "TemperatureUnit" : {
        "enum" : [ "C", "F" ],
        "type" : "string",
        "x-fern-enum" : {
          "C" : {
            "description" : "Temperature unit of measurement is Celsius."
          },
          "F" : {
            "description" : "Temperature unit of measurement is Fahrenheit."
          }
        }
      },
      "TestBloodGlucoseWebhookRequest" : {
        "description" : "Request model for testing blood glucose webhook.",
        "type" : "object",
        "properties" : {
          "patientId" : {
            "format" : "int64",
            "description" : "Unique identifier for the patient.",
            "type" : "integer"
          },
          "glucose" : {
            "format" : "int32",
            "description" : "The blood glucose measurement value.",
            "type" : "integer"
          }
        }
      },
      "TestBloodOxygenWebhookRequest" : {
        "description" : "Request model for testing blood oxygen webhook.",
        "type" : "object",
        "properties" : {
          "patientId" : {
            "format" : "int64",
            "description" : "Unique identifier for the patient.",
            "type" : "integer"
          },
          "bloodOxygen" : {
            "format" : "int32",
            "description" : "The blood oxygen (spo2) measurement value.",
            "type" : "integer"
          },
          "heartRate" : {
            "format" : "int32",
            "description" : "The heart rate measurement value.",
            "type" : "integer"
          }
        }
      },
      "TestBloodPressureWebhookRequest" : {
        "description" : "Request model for testing blood pressure webhook.",
        "type" : "object",
        "properties" : {
          "patientId" : {
            "format" : "int64",
            "description" : "Unique identifier for the patient.",
            "type" : "integer"
          },
          "systolic" : {
            "format" : "int32",
            "description" : "The systolic blood pressure measurement value.",
            "type" : "integer"
          },
          "diastolic" : {
            "format" : "int32",
            "description" : "The diastolic blood pressure measurement value.",
            "type" : "integer"
          },
          "heartRate" : {
            "format" : "int32",
            "description" : "The heart rate measurement value.",
            "type" : "integer"
          }
        }
      },
      "TestDeviceAssociationWebhook" : {
        "description" : "Request model for testing device association webhook.",
        "type" : "object",
        "properties" : {
          "patientId" : {
            "format" : "int64",
            "description" : "Unique identifier for the patient.",
            "type" : "integer"
          },
          "deviceId" : {
            "format" : "int64",
            "description" : "Unique identifier for the device.",
            "type" : "integer"
          },
          "deviceIdentifier" : {
            "description" : "The identifier of the device.",
            "type" : "string"
          }
        }
      },
      "TestOrderStatusFullWebhook" : {
        "description" : "Request model for testing order status webhook.",
        "type" : "object",
        "properties" : {
          "orderId" : {
            "format" : "int64",
            "description" : "Unique identifier for the order.",
            "type" : "integer"
          },
          "externalOrderIds" : {
            "description" : "List of external order identifiers.",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "patientId" : {
            "format" : "int64",
            "description" : "Unique identifier for the patient.",
            "type" : "integer"
          },
          "orderStatus" : {
            "description" : "Current status of the order.",
            "type" : "string"
          },
          "trackingNumber" : {
            "description" : "Tracking number for the order shipment.",
            "type" : "string"
          }
        }
      },
      "TestOrderStatusWebhookRequest" : {
        "required" : [ "orderStatusName" ],
        "type" : "object",
        "properties" : {
          "orderId" : {
            "format" : "int64",
            "description" : "Unique identifier for the order, managed by Impilo. Randomly generated for test webhooks.",
            "type" : "integer",
            "readOnly" : true,
            "example" : 1
          },
          "externalOrderIds" : {
            "description" : "List of order ids",
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "example" : [ 1, 2 ]
          },
          "orderStatusName" : {
            "description" : "Order status name",
            "type" : "string",
            "example" : "ORDER_PLACED"
          }
        }
      },
      "TestWeightWebhookRequest" : {
        "description" : "Request model for testing weight webhook.",
        "type" : "object",
        "properties" : {
          "patientId" : {
            "format" : "int64",
            "description" : "Unique identifier for the patient.",
            "type" : "integer"
          },
          "weight" : {
            "format" : "double",
            "description" : "The weight measurement value.",
            "type" : "number"
          }
        }
      },
      "TrackingNumber" : {
        "description" : "The tracking number model includes details about the shipping carrier and the tracking number value.",
        "type" : "object",
        "properties" : {
          "carrier" : {
            "description" : "The shipping carrier for this tracking number.",
            "type" : "string"
          },
          "value" : {
            "description" : "The tracking number value.",
            "type" : "string"
          }
        }
      },
      "TransferItem" : {
        "required" : [ "item", "count" ],
        "type" : "object",
        "properties" : {
          "item" : {
            "description" : "The Item being requested to transfer. Only the ID of the item is required.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Item"
            } ]
          },
          "count" : {
            "format" : "int32",
            "description" : "The number of Items being requested for transfer.",
            "type" : "integer"
          },
          "devices" : {
            "description" : "The actual Devices being transferred. Only populated once the Transfer Request is completed.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Device"
            }
          }
        }
      },
      "TransferRequest" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "Unique identifier for the TransferRequest.",
            "type" : "integer"
          },
          "fromCustomer" : {
            "description" : "Customer from which the Inventory will be transferred away from. Typically auto-set to the caller of the TransferRequest endpoints.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Customer"
            } ]
          },
          "toCustomer" : {
            "description" : "The target Customer to send the requested Inventory to.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Customer"
            } ]
          },
          "currentStatus" : {
            "$ref" : "#/components/schemas/TransferRequestStatus"
          },
          "createdAt" : {
            "format" : "date-time",
            "description" : "The timestamp when the Transfer Request was first created.",
            "type" : "string"
          },
          "transferRequestNotes" : {
            "description" : "Notes attached to this Transfer Request.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransferRequestNote"
            }
          },
          "transferRequestEvents" : {
            "description" : "The sequence of events that this Transfer Request has undergone. Sorted most recent event first.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransferRequestEvent"
            }
          },
          "transferItems" : {
            "description" : "The Inventory that's being requested to transfer.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransferItem"
            }
          }
        }
      },
      "TransferRequestEvent" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/TransferRequestStatus"
          },
          "eventTimestamp" : {
            "format" : "date-time",
            "description" : "The timestamp when this event took place.",
            "type" : "string"
          }
        }
      },
      "TransferRequestNote" : {
        "type" : "object",
        "properties" : {
          "note" : {
            "description" : "The note that is linked to a Transfer Request.",
            "type" : "string"
          },
          "createdAt" : {
            "description" : "The timestamp when the note was created.",
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Instant"
            } ]
          }
        }
      },
      "TransferRequestStatus" : {
        "enum" : [ "requested", "approved", "pendingInventory", "voided", "completed" ],
        "type" : "string",
        "x-fern-enum" : {
          "requested" : {
            "description" : "Transfer request has been requested."
          },
          "approved" : {
            "description" : "Transfer request has been approved."
          },
          "pendingInventory" : {
            "description" : "Transfer request is pending inventory."
          },
          "voided" : {
            "description" : "Transfer request has been voided."
          },
          "completed" : {
            "description" : "Transfer request has been completed."
          }
        }
      },
      "ValidateDeviceResponse" : {
        "type" : "object",
        "properties" : {
          "valid" : {
            "description" : "A Boolean value of whether this device identifier is validated or not.",
            "type" : "boolean"
          },
          "device" : {
            "description" : "The Device associated with the provided Device Identifier, if exists.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Device"
            } ]
          }
        }
      },
      "Webhook" : {
        "description" : "Impilo supports various types of webhooks. This page describes the endpoints available for managing your webhooks.",
        "required" : [ "type", "url" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "Unique identifier for the webhook managed by Impilo.",
            "type" : "integer",
            "readOnly" : true,
            "example" : 1
          },
          "type" : {
            "description" : "The event type for the webhook.",
            "type" : "string",
            "example" : "eventType"
          },
          "url" : {
            "description" : "The URL where events for this webhook will be sent.",
            "type" : "string",
            "example" : "http://example.com"
          }
        }
      },
      "WebhookLog" : {
        "description" : "Represents a log for a webhook.",
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "ID of the webhook log event",
            "type" : "integer",
            "example" : 1
          },
          "webhookId" : {
            "format" : "int64",
            "description" : "ID of the webhook",
            "type" : "integer",
            "example" : 1
          },
          "webhookType" : {
            "description" : "Type of the webhook",
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/WebhookType"
            } ],
            "example" : "order.status"
          },
          "webhookUrl" : {
            "description" : "URL of the webhook",
            "type" : "string",
            "example" : "http://webhookserver.com"
          },
          "payload" : {
            "description" : "Payload sent with the webhook",
            "type" : "string",
            "example" : "{'id':1234}"
          },
          "createTimestamp" : {
            "format" : "date-time",
            "description" : "Timestamp when the webhook was sent",
            "type" : "string",
            "example" : "2023-08-22T14:15:30.345Z"
          },
          "lastResponseStatus" : {
            "format" : "int32",
            "description" : "Last response status for the webhook",
            "type" : "integer",
            "example" : 200
          },
          "retryAttempts" : {
            "format" : "int32",
            "description" : "Number of retry attempts for the webhook",
            "type" : "integer",
            "example" : 3
          },
          "lastRetryTimestamp" : {
            "format" : "date-time",
            "description" : "Timestamp of the last retry attempt for the webhook",
            "type" : "string",
            "example" : "2023-08-22T14:15:30.345Z"
          }
        }
      },
      "WebhookPayload" : {
        "description" : "Impilo supports various types of webhooks. This page describes the endpoints available for managing your webhooks.",
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "Unique identifier for the webhook payload, managed by Impilo.",
            "type" : "integer",
            "readOnly" : true,
            "example" : 1
          },
          "type" : {
            "description" : "The event type for the webhook.",
            "type" : "string"
          },
          "payload" : {
            "description" : "The payload of the webhook."
          }
        }
      },
      "WebhookSecret" : {
        "type" : "object",
        "properties" : {
          "secret" : {
            "description" : "Secret we will pass along with any Webhooks we send to your subscribed endpoints.",
            "type" : "string"
          }
        }
      },
      "WebhookType" : {
        "enum" : [ "procurement.statusFull", "supportTicket.event", "reading.bloodOxygen", "device.healthcheck", "order.status", "reading.peakFlow", "transferRequest.statusFull", "device.lowBattery", "return.statusFull", "patient.updated", "reading.sleepMatActivity", "reading.bloodPressure", "reading.sleepMatDuration", "procurement.status", "device.associationCreated", "device.associationRemoved", "patient.created", "reading.weight", "reading.temperature", "transferRequest.status", "return.status", "reading.bloodGlucose", "device.weakSignal", "order.statusFull" ],
        "type" : "string",
        "x-fern-enum" : {
          "procurement.statusFull" : {
            "description" : "A procurement status event occurred. The payload includes the full procurement model."
          },
          "supportTicket.event" : {
            "description" : "A support ticket event took place."
          },
          "reading.bloodOxygen" : {
            "description" : "A reading of blood oxygen was taken."
          },
          "device.healthcheck" : {
            "description" : "A device healthcheck was received."
          },
          "order.status" : {
            "description" : "An order status event occurred. The payload only includes order id and order event type."
          },
          "reading.peakFlow" : {
            "description" : "A peak flow reading was taken."
          },
          "transferRequest.statusFull" : {
            "description" : "A transfer request status event occurred. The payload includes the full transfer request model."
          },
          "device.lowBattery" : {
            "description" : "A device sent a low battery signal."
          },
          "return.statusFull" : {
            "description" : "A return status event was triggered."
          },
          "patient.updated" : {
            "description" : "A patient’s details were updated."
          },
          "reading.sleepMatActivity" : {
            "description" : "A sleep mat activity reading was taken."
          },
          "reading.bloodPressure" : {
            "description" : "A reading of blood pressure was taken."
          },
          "reading.sleepMatDuration" : {
            "description" : "A sleep mat duration reading was taken."
          },
          "procurement.status" : {
            "description" : "A procurement status event occurred. The payload only includes procurement id and event type."
          },
          "device.associationCreated" : {
            "description" : "A patient-device association was created."
          },
          "device.associationRemoved" : {
            "description" : "A patient-device association was removed."
          },
          "patient.created" : {
            "description" : "A new patient was created."
          },
          "reading.weight" : {
            "description" : "A body weight reading was taken."
          },
          "reading.temperature" : {
            "description" : "A body temperature reading was taken."
          },
          "transferRequest.status" : {
            "description" : "A transfer request status event occurred. The payload only includes transfer request id and transfer request event type."
          },
          "return.status" : {
            "description" : "A return status event was triggered."
          },
          "reading.bloodGlucose" : {
            "description" : "A reading of blood glucose was taken."
          },
          "device.weakSignal" : {
            "description" : "A device sent a weak signal."
          },
          "order.statusFull" : {
            "description" : "An order status event occurred. The payload includes the full order model."
          }
        }
      },
      "WeightReading" : {
        "description" : "This page describes Impilo's weight reading model.",
        "required" : [ "readingTimestamp", "weight" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "Unique identifier for the reading.",
            "type" : "integer"
          },
          "readingTimestamp" : {
            "format" : "date-time",
            "description" : "The UTC timestamp at which the reading was taken.",
            "type" : "string",
            "writeOnly" : true
          },
          "manual" : {
            "description" : "True if the reading value was entered manually, false or null otherwise.",
            "type" : "boolean"
          },
          "deviceTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the device's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "patientTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the patient's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "patient" : {
            "description" : "The patient who took the reading.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Patient"
            } ]
          },
          "item" : {
            "description" : "The item used to take the reading.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Item"
            } ]
          },
          "device" : {
            "description" : "The device used to take the reading.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Device"
            } ]
          },
          "weight" : {
            "format" : "double",
            "description" : "The weight reading in lbs.",
            "minimum" : 0,
            "type" : "number"
          },
          "weightUnit" : {
            "$ref" : "#/components/schemas/WeightUnit"
          }
        }
      },
      "WeightReadingRequest" : {
        "description" : "This page describes Impilo's weight reading model.",
        "required" : [ "readingTimestamp", "weight" ],
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "format" : "int64",
            "description" : "The id of the device that took the reading.",
            "type" : "integer"
          },
          "deviceIdentifier" : {
            "description" : "The device identifier of the device that took the reading.",
            "type" : "string"
          },
          "patientId" : {
            "format" : "int64",
            "description" : "The id of the patient that took the reading.",
            "type" : "integer"
          },
          "readingTimestamp" : {
            "format" : "date-time",
            "description" : "The UTC timestamp at which the reading was taken.",
            "type" : "string",
            "example" : "2022-03-10T16:15:50Z"
          },
          "deviceTimeZoneOffset" : {
            "format" : "int32",
            "description" : "The offset of the device's timezone from UTC in seconds. Null if unavailable.",
            "type" : "integer",
            "example" : -14400
          },
          "weight" : {
            "format" : "double",
            "description" : "The weight reading value in lbs.",
            "minimum" : 0,
            "type" : "number"
          },
          "manual" : {
            "description" : "True if the reading value was entered manually, false or null otherwise.",
            "type" : "boolean"
          }
        }
      },
      "WeightUnit" : {
        "enum" : [ "lbs" ],
        "type" : "string",
        "x-fern-enum" : {
          "lbs" : {
            "description" : "Weight unit of measurement is pounds."
          }
        }
      }
    }
  }
}